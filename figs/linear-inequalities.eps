%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: linear-inequalities.pdf
%%Creator: Adobe Acrobat 20.6.0
%%For: Fei
%%CreationDate: 2020/2/24, 1:31:29
%%BoundingBox: 0 0 459 73
%%HiResBoundingBox: 0 0 458.8736 72.2121
%%CropBox: 0 0 458.8736 72.2121
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 817 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c016 91.163616, 2018/10/29-16:58:49        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2020-02-24T01:30:10-05:00"
   xmp:CreateDate="2020-02-24T01:28:30-05:00"
   xmp:MetadataDate="2020-02-24T01:30:10-05:00"
   xmp:CreatorTool="LaTeX via pandoc"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:77930811-418a-45b8-bf47-0441f975ebf2"
   xmpMM:InstanceID="uuid:c77d4e27-cf22-4b1f-9316-031ffb6cf05e"
   pdf:Producer="xdvipdfmx (20191114)"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -72.212 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 72.212 li
458.874 72.212 li
458.874 0 li
cp
clp
false sop
.856992 .596643 0 0 cmyk
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (HAAAAA+LMRoman12-Regular-Identity-H)
%%Title: (HAAAAA+LMRoman12-Regular-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /HAAAAA+LMRoman12-Regular-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-422 -280 1394 1127} def
/FontInfo 5 dict dup begin
/Notice (Copyright 2003, 2009 B. Jackowski and J. M. Nowacki (on behalf of TeX users groups). This work is released under the GUST Font License --  see http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt for details.) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 503 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-21 0 431 446 665 675 683 704] def
/BlueScale 0.04546 def
/BlueFuzz 0 def
/StdHW [29] def
/StdVW [65] def
/StemSnapH [19 20 22 27 28 29 35 39 40 42 82 97] def
/StemSnapV [22 49 63 65 71 76 79 81 83 87 93 97] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 15 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
82 <001C60D8A8C9B751D57464489D89C37440E00F9E54444F26ADAABEC5C65C
868A5F85DDA4F4182A014A78B402115DAFB4AC641DBDC8629E7B48640BE0F2B3
D0CDBB866AF50003922EC93101E32151931E9BC4538AA956F7F8> |
121 <001C60D8A8C9B751D574BAA35C1A8ECBBA99F30BABCF7423922933472A4
269AA0FF677C8B69BE799960F2ADC51B0ED016BAA3E3ADF796CC54ED338123A9
BF2BBF8AA8120F40D429147DE0CB3B1DC24AF08E5FD98A5A791352E16B8FD6AC
457D698F7EC04D2D1F2E3F4FC101D09BF4D7671B889ACA60D356318CAEC8D4E8
6D31245BEB5FF6B33FE9219D776331ABBAF7088AD441171> |
88 <001C60D8A8C9B85AB99D75571603AF529FA3D00A423B5D518BAA23CF86FB
A1BECCA779AC621FB297B1> |
106 <001C60D8A8C9B751D50735432A9513CDC8A7DF1128B8E94511911D2643B
5DB25EFB16F3AFFB761AD153FDEC222AC53824C1CF1D9879AEA0C48A58EF814B
02B2E4B16A19914A64E83006345B34A177814907F49BFFB8CAE8CD7E7F7208B0
EB2CEE8C676581CC336A796E56BB1D6AE23613174B7768BEC00B39B6D99C32C3
751C594348493D31BEA99210903D55F34069EEA6FC33803D205170930AB7F7AD
3A0FD48DE68F3E77767571062862ED217B460C4FCAEECA64CDD2E9CEA6358B1E
1EB560F87737A01FC4E9CD0292D246E746EF9F28A4B1B736CA9F4E4526FE445E
9EB11D971> |
49 <001C60D8A8C9B64FADC67A3B29F1AD98CA2424D95C7DF73E0AACC441133B
F17219D80F4985623650A274B6551996C5A3C58C8FF4D47A6071EB90B645EF8E
C2EB815881CD3414ED123C8FB97E5C7D8A2CC5863C0DF19950B936A11D735556
6F85AFBC4B5D26BB034DFE701E54BE01C8309405F96FBD8FB4C33A27555D708D
C0C4FFB8CC5DF276CAC791AE4B> |
116 <001C60D8A8C9B7B64474E2A335ADEBFFF7658CB9265FBE2CD3F3815AA77
3BA4C1748B7890C9B2C06C21E694BDDC331A1E024E2EC8CB3B1E1830DD93C586
DE08751AAF6F7E70810C210CE6105E94B64BF05D29FE5EDD00DF7E9481E9D04E
2A94F2B42960EE84F6286C06C3BB933840E4DA9F7F12FBEDB4254E60D46AA930
F7CD101984BE939A574E5B0CF9A8DCDFDB70569F952493B929F9E2A15BA155E4
60B0992EBF08B60126A6217BBFBA95E7075941DCA2EDE9A1E3B016475DCD3954
AB34713ADEFBB6DCED66C0291DC48C143BCDE99E7902A0E5CEB7F57BE90517E5
9> |
28 <001C60D8A8C9B751D5797CA9B19745AF3129BA675C0626E1F2466B50592E
1C787AE078DE982C2DA8F976DE640BCC6CCC695B47AEA7D74692242B6077977D
DFAE2C0B9C4A5AF0C68235CE420B85396B82ACD61DDFF493C7CE8A5A59A97C6C
977362414DFC17E0F9C73E5F6E7DABA01978B634527D426C76AFAECFEC099552
4497D00E9E16C7083B45D492AF9A0E982745C88E7794E62B4D697BB924CB059B
BC9EFA30E11EE73C699B0036C23536C5AE98230AB23D52EAFA81F7> |
75 <001C60D8A8C9B6A5F49B5DA245B9BC4D5CFC17D3669842B2400BF622F463
EBC2F10F70830324E60DEE6277C46AAFBBFA007858D7DFB71469832FA8C45E3B
79333A668F2CB4A9248CACBA754000A0FE120DD4D9F3CE56187B5C70990A0133
3D3DB02C63B49F46CA5DB74BDEB85CD6972946C4B8757CFB0DC418AFD9B007C4
5F65289C64B0D17AE6A5943A6AEBE15D838E4C84725E5021C3ED00E9BDF49C73
3110EBCC9C1342335555FD98D6DA24FA1E5DCBBA144023B20FFD96DA47A0FD2D
E42B6376B45DCF5C36D78E00961A4261AC24011CA32EB70FBED948779C28B845
FB210210760AE007E2869F79> |
84 <001C60D8A8C9B79B8E996C52B28025742C0C9074B6838282D30FC6A3607B
371C8429C216F2386414AB0FD1CA0CBA4332B40320BE7F19B67C52559713F0A1
C2EEA88206092FEFF11B12AB79221B98694DA52E3F007777E87457CE344A8398
7CE732D153EC8311E24B1786501EF9F9B774051B5C5E438164552BF9D60185B6
F90BDB527C8467C447312AFA8EC68853FDEBFA9EC778AFE58F123FB9ADFCAD4E
56573F43A64F2633699CBBD14E> |
72 <001C60D8A8C9B85AB99D318006812B9283E95B4471B137B1BBF654CB6175
90C76C9584B9FECA064CE9C346682592B4C536A2F28E84655A2618D288C3CE81
4C552B518C83218FF67B92FC5FCF3AB90F007E1590> |
50 <001C60D8A8C9B7686E50B91A10E19A76B672D3212F00AB86E568267CDA3E
F1E1A07CEC1E14E643555882DE23113077FED67F227121C4678D2C217120572A
DB6CD533F1038EDE846E784E162E1B687929FD1794900CD9F550C706CC624C58
52346FE303739B90AD5141B0F67194CA065CD2656BAF733DACF2594350EAF1FB
E808EA01E208> |
98 <001C60D8A8C9B73970820F55F15F0F8067B669B8C60E98F155CD2C9084D6
4DA9DD74E88438AAD0C7C58B9423C9DB74E7B95243ADE11518E13C80B046816E
2B30F04CFCAC7CD4AC4B479EFE4F59E1F9AFB7E4119A255704983191A3C320A8
65F061B24CABC27594F95B682CD35A1FE547539C90D60DAB286A117A2497872C
C568572E4AB544DC1A3CF32E208332960BAC807562C5D12FB3AE5DBCF055C428
E26609E9862D0B3449502A6A2AB8FC44F249687AC13C17BBD23E9A4130E9FDA5
0350C9EF8DD7DECD04E0> |
284 <001C60D8A8C9B751D5081FF4DD31D8BA8B0D77DE237EDC377E5037B1538
9D6> |
56 <001C60D8A8C9B751D507C46BADFD9D766387E0FF8E1EF6FDDBC83F480FFD
E3D02506504F1270826F2DA7DAE8FE5063BF936993A07B5E96D5D2204BFCB7AB
C68A8C7D18D03526C4CDC32F84F1C251E3A27ACE53B1CE4BDCABCAE5F47DFEF6
9999675136712B4A3FF91FF0758B3BB0B9A408498501CE4E3C0FDCE7D621C4A5
5F09681E14E938D6B490D8D7A6CD5508EC8EE921AD472EC18347C8F33C7F8F73
21DC59DDA41945DBD74CDF9D22D089AA8B813C256AEBA72706AD9927F7DF70C6
459D2481A877E53FA5960CAD6B59EBCA2071E9C252B1D5B279092A8C2D56BEB2
53B41B943F2133C4263DA2A02F08797DC9BBC2D398C3FB52C15C16> |
0 <001C60D8A8C9B8524C50> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /HAAAAA+LMRoman12-Regular-Identity-H-Identity-H /Identity-H 0 [/HAAAAA+LMRoman12-Regular-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FXRWCJ+LMRoman12-Regular-Identity-H /HAAAAA+LMRoman12-Regular-Identity-H-Identity-H findfont ct_VMDictPut
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
1.8796 -581.374 mo
(\000R\000y\000X\000j)sh
28.5878 -581.374 mo
(\0001\000t\000\034\000K\000T\000H\0002\000b)sh
388.798 -581.374 mo
(\001\034\0008\000R\001\034)
[9.16962 5.85812 9.18164 0 ]xsh
.3985 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
2.1786 -576.841 mo
418.87 -576.841 li
@
.9564 lw
8.7016 -564.825 mo
412.348 -564.825 li
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+LMRoman12-Regular-Identity-H 5 GetGlyphDirectory
83 <001C60D8A8C9B64FADC67A3B29C41FF526FE61435F7AF161FD98F03494EE
230EA8536C4E2EBC0E74B2CBECF5A042F383029A3B299AC613546F373F7791AB
6CF0016EA5F2407E977AA29E20628635158CD39CA2AB18819AC07AFC7C4CDE4B
8EB7DC84044B30495578370F4E140722D4ED7977AE7768AE977BD33CBFDA4DD1
89763DBE751999BE> |
96 <001C60D8A8C9B73E8B26E6A5B7EC5FF5D35C46BF79376E4FC8972E40237A
47A3D5AB2466F408990F9B4EFEFF4380EEA7781F7FE4766DB3A229EA05A95B1D
C69AFE4643EF1FA3035AA5D4D36AF8D4FEEFA818460786406A9C6567EAFCA691
5C1EA12C17C796C1439B409301945517C0A0DF5D10267A7A91CA5EBA914C8792
A278A50A06C51C137C5C2F1043470C0EA5A265419C2DD39530> |
81 <001C60D8A8C9B751D57E7D7B00352712D5E5746D9007F1EEFA3A2F787DC4
7D4E6D31DD6E644E06481FE3DDB0C0FB1B6C2DFBE4397EF8C8AA9FE37EA13B88
98F069635E1D092B59F512A4655F1D66076C06574942C7729DFB626C83FA40C2
9D92CF6BBA373E6A6010A0C92215FBA9998B00C63CEEA3BF> |
105 <001C60D8A8C9B73E8B5F185D13C742513015F6EB81B8EC9141043EEAE1E
A2C62CF97B71F8A9F993BAD8E93AB444DAE9EA8212ACEAD58C1EA78184797491
7B825AC323C90C7DFB3AD5174DF94FF0174BCEE233499AE55B37C0FFFEFC7EF7
970A13E4E088F5504E4AD1710010B1A23ED96BD0A7C7B3D547DCD51> |
118 <001C60D8A8C9B7B644074306755EFA0B6FD2435D9C4FAD03FEAAFC44E31
3771E1CEF662B540BCF09905492850326137AD1503897480C013CFA9C3DCFC85
0EDBA01E2A20DEA3BDD69193DED8D8C62BB3763687538912BE00F3A2EC903AC3
9C8D383556E6119CA373766FBFF7A0ED4C08545B9B4237F94E8185F3ED27F48B
2B1C4895B81DD629E72BFC569E4363FBAAEFAD981574DA234D518074B52A7646
E77233B521C5C1932523EEB642679DD05C5BD3828EFEBE17BA0F8DE36E277614
A5C630A4F036B> |
!
end
end end
%ADOEndSubsetFont
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
8.7016 -549.726 mo
(\000S\000`\000Q\000T)sh
33.8913 -549.726 mo
(\0002\000`\000i)sh
47.8907 -549.726 mo
(\000v)sh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
216.502 -549.726 mo
(\0001\000t\000\034\000K\000T\000H)sh
256.014 -549.726 mo
(\0002)sh
.5978 lw
8.7016 -542.508 mo
412.348 -542.508 li
@
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+LMRoman12-Regular-Identity-H 8 GetGlyphDirectory
104 <001C60D8A8C9B636759BD93531AB0EAB4F94CCEC6A9B68E77174876BC0E
B9F038EE491BFEE044427D5DECF7AC2A09045746B6593E6B2C8EA1B8CBF9339B
BF0732D85C04EA51B7244F4E8E9AA31FBEAE57FC48E70370CFE548690E016A4F
3D4BBD970360B2DD689212AE7FC901083E1E3B77710208D5D29C9C0BC2ABF> |
63 <001C60D8A8C9B79B8EEA032227846C1805EDF561D20BE5B4AFA19B8E237D
33822E634AB22336AF23CDD5B137F46F5D703BF799E20105FFA75EF093BAC338
9934AD835D6A12D16CE250F6171241FCC1CA62C098BC521FA49EF27015E07ED7
15A16708FA5E3ECA3CDC15902451FE2DF74C06329A19B48D2F44948BE762DB52
CBDA7581BFA8B57C3968F99868D45AF2ADE8C0BABD07E142720A2E23543D303B
C27F6578D57F336288> |
77 <001C60D8A8C9B79B8EEA03222842FE410CF112187B151A3A8AE210B68A35
DB464CA40D655E044665C6F874174152EDA3CCBFC06BBCE33AD26412EE192A90
9EAFC3CDB7BE08F89C6C7C5E4B5630F8B9F3006E33F08350EE78534550D2083E
B935A287D121063FC0EDAF2A5F5F3A5D349EBAFABD943E5D5C7145D5332A7EDE
55F90CB087EB31DA4E09EE9E53E0051DD2E245FE8B54DDE0CA93B1DB430AFAEB
5B3592F9ACFED108> |
59 <001C60D8A8C9B751D507DF19D6CEC66C9D8060AFB4C3C0E557EA1909880A
80E55F35141138D951CEA037447EB4F35E91138F22022AF0C618303AEC7002EE
F0F525ECC2FC816273D94785ED64A9B025A18659906B8AE0B3F6F76321035561
A269030362FFFEE9A5C3B3DDB0A273FB69B52315CA3C8C60594CBFAD36F6BB27
D17560C674E255CBC4703BDD4335670F2FC68BA8F9058579A470EBBF64245E7B
924AE9B10E71644FCA56E36EAE50DE3CE96F95A423A700D8557D0D1CE5089E26
E62E8C32E58D07C8CD241371026E8A368EAA6E74780B0212BF7633066726749D
55977B811D904760C6394E7014899EC276C110E851664D51B262CACD8FBF81A6
79044B7D4F4590974613BABB0C39D815D0BB300EA288686FD33AAF86AB290B07
AEB998B7913DA1B17E61549C57E320B55EF02A59C26D54F505510B7C05B271EF
7513B2> |
66 <001C60D8A8C9B85AB99D318007545A90F39AA6C89BCE8A924347F6768F39
2A57CC1163501BAC339628C554905111820D6FCD793F5246E6789D794FF28DE3
3D98965C5B61B90B8D534A62573ACF3FBEC7BFE107301EFC9D352B334780063F
BF4769A6D664C2BF895A2868978719743C3C7B4AD64D91> |
112 <001C60D8A8C9B7B644691D279A23B5BE90805E99FBE84302ACB439B22DB
F135199B900CA1B2788AD88D01335EAB2D15BC77C1B40FC7E0DD2F793BEFE575
86FEC2EFADB73E06B7C6BF4FB9C56F162AE0BBB77ADD7D69C5FD29DAD84ECFEA
B81C525B8F3A405748DD5E025C5954B07270D89299C55A3F03F4DEFA7DC808A6
70B37> |
109 <001C60D8A8C9B79B8EE029BECEAFD0FCE40BA82CF48905AB7DEFADE5221
38AC3BA0092E076A0A8567468B0796A6E89D4C3B601E6139F2113B0B500D3F34
34A02253AC45E9E1422401ED3CD5D4E7A6D1779BEFB0352FF199DC0B6C6F860F
4BB1421E5CE14EC5194E1C25EE0DE6396> |
43 <001C60D8A8C9B7686E50B91A103C25982F9A302EA4F8141240DCC66E9E88
D4BAC96AB7F3323AC8503C1F8BBBCC5AC65A6F609895813074D17538E8F212EA
6AE1339213FC8B2CD94EA0C71A35011AC32628A7156529E67B05737635128656
BFD51DCA2E39ED5D8FDDAB63BB7ED319FF5A9C> |
!
end
end end
%ADOEndSubsetFont
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
8.2826 -527.589 mo
(\000h\000?\0002)sh
32.3366 -527.589 mo
(\000M\0002\000;\000\034\000i\000B\000p)sh
69.4337 -527.589 mo
(\0002\000K\000m\000H\000i\000B\000T\000H\000B\000+\000\034\000i\000B\000Q\000M\000T\000`\000Q\000T\0002\000`\000i\000v)
[9.08588 9.44453 6.50371 3.25185 4.55489 3.25186 6.50371 3.25185 3.25185 5.20049 5.85812 4.55489 
3.25185 5.85811 10.3891 6.50371 4.55489 5.85812 6.8264 5.20049 4.55489 4.24405 0 ]xsh
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+LMRoman12-Regular-Identity-H 2 GetGlyphDirectory
65 <001C60D8A8C9B80B0D35EAF2576580588E3ACCE361EE852A954F9730F28A
972BA9D6858DE74EC09AF2FB9E96D7F853D5A2663A7F841F137E1D6A71F07ED6
D4E017AF13F7A4C3BBDEB8724F951BB03E050018E34378D10AB6CCD4E2483D58
DD> |
55 <001C60D8A8C9B8418669523E84D09FFECF4746D68892A1CB54146C18DEF8
0A9879C48A6EB818F45349FBABEE955F7059764D5CB400D2BD4A409F0D1ABBB8
68C655252A6D5E161133478DEB09594ED6A656EF2125EACACF7729262E2E8705
3C5D812E0718DEFC5C61EF215BD137A968406976662920996CD18E03A952108A
B6F8E293> |
!
end
end end
%ADOEndSubsetFont
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
8.7016 -511.699 mo
(\000A\0007)
[4.22015 0 ]xsh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (IAAAAA+LatinModernMath-Regular-Identity-H)
%%Title: (IAAAAA+LatinModernMath-Regular-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /IAAAAA+LatinModernMath-Regular-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-1042 -3060 4082 3560} def
/FontInfo 5 dict dup begin
/Notice (Copyright 2012--2014 for Latin Modern Math OTF by B. Jackowski, P. Strzelczyk and P. Pianowski (on behalf of TeX users groups). This work is released under the GUST Font License -- see http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt for details.) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 3085 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 14 dict dup begin
/BlueValues [-22 0 431 448 666 666 677 705] def
/OtherBlues [-206 -205] def
/BlueScale 0.04546 def
/BlueFuzz 0 def
/StdHW [40] def
/StdVW [40] def
/StemSnapH [22 31 36 40 44 56 61 67] def
/StemSnapV [40 46 60 64 69 75 79 83 89 95 102 106] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 4 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
1296 <001C60D8A8C9B78AC35D48DD219788EA9CE375EF919CE228342BB1579C
F97885B64C4D1B70FB021074B98F16233D16B1A4A83F98F968958B88785E0684
2553E2778084F8CB659963ED5EB298EF980BC103F1C3668099D4290B2919D78F
A411AE31049E5371BCC5F1B5F6C08E09567C3885312AC2FD60714AF06ACA1BD7
3BF7CF41185133E1747830C5B2E826A43A7E558C64622F4A809F9462CC3FCB1C
66563E435C3DC090D7357F096A350066E17935FA7D3D71A5721FFE64E18AB36D
81B67C> |
29 <001C60D8A8C9B6FF86FB80A6B6FB255BB49D5ECDCDE5DB091E71B0721790
5B8EBFA895ACFB1357138D41268DB5384B9BBF761F7E0F61484E> |
1297 <001C60D8A8C9B76E37966B5F84C2CE65B00308611EF442ACCEB193B5F2
024771C69B75F9428F0E3133E507E76744989F6038FCEC460C3276CF37DDA936
1600F056B5ED73BAF6B83A44A2978493D3FF5C86703C602927A75ED01D64093D
4791DE772AD08497700707B52B047D5EABD0A9816A7988DE1A010FB2316AD6AD
744FF690C2876295CEA9AE7EE6EE9F544180BDD8FBE26BFBCB6FEECCDD8810DD
F6BC99988F9938> |
0 <001C60D8A8C9B8524C50> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H /Identity-H 0 [/IAAAAA+LatinModernMath-Regular-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/FXRWCK+LatinModernMath-Regular-Identity-H /IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H findfont ct_VMDictPut
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
20.3936 -511.699 mo
(\005\020\000\035\005\021)
[9.63589 12.6247 0 ]xsh
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+LMRoman12-Regular-Identity-H 1 GetGlyphDirectory
47 <001C60D8A8C9B79B8E962F23B4CB552333D44BA99196D465BDFECAA4F008
B07927A6D081735231BFA677142744B4CE8E72F4296C31E292F6D607556B314D
0ADF3763E0914C736D83533D359A3275FAA2C2B6D455D0995E07A887EFF1D4FA
02D713188C4245E2DDDA6DBF48D41E34C7199B0019411313D4C8E93D2BED957F
19CB8DA43A40EEF27992B5A1D954A1D8A01B6C485A898DD242763F5501859D38
B9C45C1C2A> |
!
end
end end
%ADOEndSubsetFont
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
51.8546 -511.699 mo
(\000\034\000M\000/)sh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 1 GetGlyphDirectory
1298 <001C60D8A8C9B76A0D4ED20D862F5EE60BCEB5C560719F69AF7D056F7E
F9F30B9DE8C99545F6DDE9B5A18A0CB9D51831F0F8FDCA9CEA48C5A84AF3EF03
2EE3C6696B8694DF91FA75961D1FA7569FD193C51A332D48143787F7C157BE04
9D091833FB4B60A14405CBB499FCA889C2B68B763F73E1A1F19BD9181A259EEC
F93770> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
74.6176 -511.699 mo
(\005\022)sh
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+LMRoman12-Regular-Identity-H 1 GetGlyphDirectory
45 <001C60D8A8C9B85AB9ED5BE9F91E4BC1BB1E01B4259B08AC239B1B7FC4B7
DC95920398E110CE6390AE5B9551FCDEECD510085FE18AC1A69E67CCAE8B9968
1EF420966660A20D13F782D99699E1559236FB2178606D> |
!
end
end end
%ADOEndSubsetFont
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
83.9906 -511.699 mo
(\000B\000b\000M\0002\000;\000\034\000i\000B\000p\0002\000-\000i\000?\0002\000M)
[3.25185 8.50013 6.50371 5.20048 5.85812 5.85811 4.56694 3.25185 5.86996 5.20049 7.13725 4.5549 
6.50371 5.20049 0 ]xsh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 1 GetGlyphDirectory
31 <001C60D8A8C9B6FF86FB8104E7057E9EFDF9D5DF5E33AB0830C484C10376
449717B491F081CD35D76DB5C740A08B1940E09D3EAB> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
8.7016 -495.808 mo
(\005\020\005\022\000\037\005\021\005\022)
[6.32438 8.78708 12.6247 5.29625 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
47.2166 -495.808 mo
(\000X\000A\0007)
[8.44048 4.22015 0 ]xsh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
67.3566 -495.808 mo
(\005\020\000\035\005\021)
[9.63589 12.6247 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
98.8186 -495.808 mo
(\000\034\000M\000/)sh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
121.581 -495.808 mo
(\005\022)sh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
130.954 -495.808 mo
(\000B\000b\000M\0002\000;\000\034\000i\000B\000p\0002\000-)
[3.25185 8.51218 6.50371 5.20049 5.85811 5.85811 4.5549 3.25185 5.86998 5.20047 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
8.7016 -479.918 mo
(\000i\000?\0002\000M)sh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 1 GetGlyphDirectory
1404 <001C60D8A8C9B661293961A6C99BF17D928D41276850918917C2C520CC
EFE75DDD5A1AC1533482D7E832247DA9403D8C35D076D3326500730E1AA29056
B39BF4E9352FBD9B7124AFBF5913C907C811C059A263D1D51323BF9C2CD4F772
83F4D7FD1FBE6B063D3B20D519671C483DEDAAD6B28DD5E93A5A9CD2DD91F91E
BD44403ABB39376AE6337F8FFEBC5F67CAEB3B7ED59EFE648F1488C45E8F80F5
B9E14DDFF0CC1EC0F0E85B5E320A729CA20DB7C0FCEE84F5E3A1C91D47734A8E
B736B3E8CD81> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [8.3686 0 0 -8.3686 0 0 ]msf
36.5566 -484.629 mo
(\005|)sh
.4782 lw
36.5566 -482.907 mo
41.7456 -482.907 li
@
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 1 GetGlyphDirectory
1406 <001C60D8A8C9B7BC12CDF691A2C58DD573EEF543E70A1957EE47763ACB
32CC1D537EEC97A9DD085812E29C2CDAD0409E359FC3AD644BB1BCDD05659D10
404C792CD1AF422E10A0DFB401B6848EBCAFF39C1A29F7347A5CCC814F285A48
B5ECD98876172F5180406A45BA9436400E74A0335039273DC8C741E6955C> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [8.3686 0 0 -8.3686 0 0 ]msf
36.9626 -475.793 mo
(\005~)sh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
46.2626 -479.918 mo
(\000\037)sh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 1 GetGlyphDirectory
1405 <001C60D8A8C9B7A59ED12F4D13B79B17995B2231BC044A99867EA66C11
EF44E3ACC99DFD15413B9FDE2C6C7E4F5D71F39F67D5B2DB3E15912EF9C9EF61
CE27031E162116E7DFF2651AFAE3D654B39EA64A421F4E19FD281F9E81BEF934
76B699460617D7A7910C6A0B3489CB9631A41074DFB275DB63C4EBE95D8E5F36
BFE1FBB2E7184E891DC358938087C45B665C83B4DC4C474D612038A5CA3E9A78
32FB3F3CA4775AACCCA6402C4F5B9C> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [8.3686 0 0 -8.3686 0 0 ]msf
60.1676 -484.629 mo
(\005})sh
60.0806 -482.907 mo
64.4566 -482.907 li
@
FXRWCK+LatinModernMath-Regular-Identity-H [8.3686 0 0 -8.3686 0 0 ]msf
60.0806 -475.793 mo
(\005~)sh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
65.6526 -479.918 mo
(\000X)sh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
216.502 -527.589 mo
(\000A\0007)
[4.22015 0 ]xsh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 2 GetGlyphDirectory
18 <001C60D8A8C9B7A73DC579B9CE13A4EA825941A743D2FAEC23B1321CA561
8A5B9F2523AB05FD631A8E98019FAF9CC8D0ED1FC95A52C70D5DDA373B7523A3
6B1F6A0030BF4E20772B88BA1A2E6C3E2FF196891EB2> |
19 <001C60D8A8C9B7A73DC50B0411757B441481CCF7EF812EE4807E472E4172
23218D6EC7C4A2A110A496D771FEC8AFC554219E41702620B0127BA8AF9D3958
05FFA3ABAA14A3316807A70E8BE89F4103BFCC382AEEEA100428E7789BA0E0F9
DBA9ED35295242460259394BA4E8A49776361BD975F1B3D641D5944D5F568AF2
CE308693B6ECBE8485D7374F5DD03FC87D47EDD9104F2E0CCA7E2931> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
228.195 -527.589 mo
(\000\022\000\035\000\023)
[9.28911 12.6247 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
256.093 -527.589 mo
(\000-\000i\000?\0002\000M)
[7.14929 4.5549 6.50369 5.2005 0 ]xsh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 6 GetGlyphDirectory
2615 <001C60D8A8C9B6FF86F594155D68598629B4CC4A056BFBA709623B86E5
18CDC0ACAC02CA47B4BF35A046072B6648> |
30 <001C60D8A8C9B6FF86F5F7C936DCCEFAB8D701D61057401AAF7626F5434C
970CF3D4DEB580F7732B793CE35EA29E90384D3E0E647922F9826232505BFABB
D37EA5918DDB29BA97416105252FF9BCFF8F> |
2625 <001C60D8A8C9B854D0F46A9FBAFA97EEF81A70E4C3369828D2D825641E
8AD8932AB823E33468B6639A8177> |
9 <001C60D8A8C9B7361F05DC899EF58D3A4E0D2819D93C816F03981D21FD1CD
97BCA20022626956E3FDA324D891F980273773B1F09B918E0047A03D62A25C39
8B6921EF1ECC2B1B974FC3133D608395D5384D0C00640595CEDC89A75B24AC6B
E8D8C7A57> |
10 <001C60D8A8C9B7361F02CFFE3095129BFC4F8F95A15F61935B278360D8A3
3DDE2BE6F3B541BBF389D21D89DABCE24E80058FF931B8FF10F9B0B01C6E7BCC
AD75D675E3E66241D45FD93FF3AD532FD1C4CCD960C75D54AFABDEE7796A3035
AC19133D29DB> |
21 <001C60D8A8C9B7A73DC579B9C1587087DAE8FCB8F71B44D78D1BAF4FCA5E
DF2B5F97462C4EA9761C313A6CD7B66134F72A415424B4B2B0F78A6651F84F1E
80670879A0A6B1D943F167E4CBD0AB37393C3663B673C5A1F0D0E6DDF19B4EF7
C60A0618CE5C7E6A3E4E> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
216.502 -511.699 mo
(\0127\000\023\000\036\000\022\012A\000\011\0127\000\023\000\012\000\037\000\023\012A\000\011\0127\000\023\000\012\000\036\0127\000\025)
[9.30115 9.28909 12.6247 8.63165 5.98965 4.65067 9.30112 5.9776 7.96219 12.6247 8.63165 5.98962 
4.65067 9.30115 5.9776 7.97421 12.6126 9.30115 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
373.28 -511.699 mo
(\000X\000A\0007)
[8.44049 4.22012 0 ]xsh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 1 GetGlyphDirectory
1319 <001C60D8A8C9B7FF2B5E691B02ABF5E6B36349D70F01EDA581F9FD5201
70F7F52D08C1F7C4D3D2A1D820828896B55F1447CDEC316170ADE6685BBA29AA
85BD6259AB866ECDD314D7B606336B8966FF79622624E939255FCFC70D7F4E42
FCCCF4E1AF3F2D33B2739AAF312F085F91F47A9F4FE5868EBA90B7C925848646
808225B7F4E7F42A50CE99B88E3ABFFCE2FE547846B62218CB8BAF349F59FAA0
D186970D00205E0143A23B4D7F2001E2CEA91E5836983B501572F48D87F0F060
BA94028ED21721328652DEC6A9161D08318D5032AFCD628532924030EDE7093E
BA184AF657D09A3DCE74E5249786B241F2E7958EEB3461DE45CDBAE8BAA0D9B1
E66307ECCBB0C8DCF4> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
216.502 -495.808 mo
(\0127\000\023\005')sh
241.93 -495.808 mo
(\000\035\000\025)
[12.6247 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
260.541 -495.808 mo
(\000-\000i\000?\0002\000M)
[7.13727 4.55487 6.50372 5.20047 0 ]xsh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 2 GetGlyphDirectory
1013 <001C60D8A8C9B7E2CE5B2D2AF3C16D655586ADDFD255F3428B87C4BDB3
681027E45184D886A178454901EAF33A1AE43405523AFB6AF97F9FED1E832FEF
97DF6C79737F095DEEC37BD0C0218B9BD310D41BB105D10AAC66577183D1F178
FA0AACE985994C34AA66E06F5F9E1A56E6778AC37BEED3B5CD2A0A946B2187D2
A7E2AF9409341C2C368F1B31731F405D11FAE1D816956BE5> |
1427 <001C60D8A8C9B67DB5FE12DE3576335EE95298D957F2D1A994581FD1F3
0AA9ED88B50688FD7654CECE99925F8D17BA201DB7AC3633D14714C7C9B7C176
2B4D3ACADD56137E772BC0BC348963DB2651543D1FCCA6C4C9547E94E65E3553
36B95BA00E7A62E7445AC8800B3AC115095E14861B20A106F11E972C4747E301
49D2F2A77B5589B3EB44BD3998C8EB5347E894D30191F6CA5D3824482E9C8CE7
5692E0E2695A6A021B3DE633E34AA5E393802A0DFC66DEA75B2A54B397996C8D
F059D0242F2799E15EB4A38823F8E74B126A1EDDFFED6BBA7238550A410FABD9
AD91B930D1814C0952EFC1E33CA052C87EE64CE293C5> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [8.3686 0 0 -8.3686 0 0 ]msf
295.545 -500.519 mo
(\0127\003\365\005\223)sh
295.545 -498.798 mo
312.241 -498.798 li
@
FXRWCK+LatinModernMath-Regular-Identity-H [8.3686 0 0 -8.3686 0 0 ]msf
298.257 -491.683 mo
(\0127\003\365)
[6.51077 0 ]xsh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
316.757 -495.808 mo
(\000\037)sh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 1 GetGlyphDirectory
922 <001C60D8A8C9B7E2CE5B62E9F191E79869A76526F5ADD6B503A82B1F101
7D65CA48C7047FD20FEADFE92B3789E2D60269F7251A254A3336A9D4072961CD
607474EFC938FA43E53DDA25AAB4A38A24BFD81C8FB2EB98213C89746C995A60
A34DE428A9B33343A4AE26CA6D119F41975DCBEE139B29D46CF869E60FCD678> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [8.3686 0 0 -8.3686 0 0 ]msf
333.831 -500.519 mo
(\003\232)sh
330.575 -498.798 mo
341.848 -498.798 li
@
FXRWCK+LatinModernMath-Regular-Identity-H [8.3686 0 0 -8.3686 0 0 ]msf
330.575 -491.683 mo
(\0127\003\365)
[6.51077 0 ]xsh
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+LMRoman12-Regular-Identity-H 1 GetGlyphDirectory
97 <001C60D8A8C9B79B8E172F5813DA71F9950CE71DC30C945B6027F188A2F5
F8878B412179B4F60639285966426845765F661AAB9FDDD95538E8372C95DE00
3DCCA72939B3C31C7A8E5AE8033DE32B23A95C171CB50D9AF44C7FC99AECA457
EA47C97C9DF9EF3617EB9911CD4FB674A6021E25B5CB5DB261C20FFC2F021A0A
15934BD9A375E86855690ECDEC5F79DA7CB78EED4C117534B6AAB5C8321CC00E
279094657CC000B4A815F2DE9BF675F92DC6995E8B52BE42F96D526C2D469277
CD05278F26A36C1388B46D256C91BC5563> |
!
end
end end
%ADOEndSubsetFont
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
343.043 -495.808 mo
(\000X\000a\000B\000K\000T\000H\000B\0007\000v\000B\000M\000;)
[8.44049 6.50369 3.25186 9.75537 6.50369 3.25186 3.25186 3.57455 6.18082 3.25183 6.50372 0 
]xsh
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+LMRoman12-Regular-Identity-H 2 GetGlyphDirectory
35 <001C60D8A8C9B79B8E99627D56202939DA43728DAA91043595C3B753C07F
9B32E9F0BA03F989E9A1D342F37900FC19B02E184F83269337F243C763A28957
539453DBC50F3D6F2A79762B8FAABBCC6D26C04B2B3834A5659D5E50BDCEF1A8
8A80BB17C15D9842E9D1FEB6EDC47D17E36C072BA34F9F6E017860BACB4F032F
9E1EF1CBAF7F8A85D024E6D0F2DCDF7E80C7A6896DE47E8BFD41E93662DD52FC
017DEA> |
114 <001C60D8A8C9B6367586F44EC85BB7CFD799EC289D169B5300168189A9B
55F54D88235FF36FE8DDB62D32971792ACB6FB2863181F07E486ADAAE2EAF932
FF978FBDD67E6F5791E22E5DC6A65B7672242FC97CE68DDC7F8D70E84ECEF174
02E5E051CABB6E589C88DF5A8C7123686BA6B3F9FD99DE74FAA237D3C3DAB46A
E26D6ADCB2BF91BE503643D84F9A972EAC9B79C2A38AA96CC71B06088D51D773
05308149A128A60BE982DF549B31CDBF8A9B6471421B647C17A74F6AE8158936
F86592C919D22044079A67E> |
!
end
end end
%ADOEndSubsetFont
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
216.502 -479.918 mo
(\000#\000Q\000i\000?\000b\000B\000/\0002\000b\000-\000r\0002\000;\0002\000i)
[6.82642 5.85811 4.55489 10.4011 4.61475 3.25186 6.50369 5.20047 4.61475 7.14929 8.14148 9.08588 
5.85812 5.20047 0 ]xsh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
312.216 -479.918 mo
(\005'\000\037\000\023)
[10.15 12.6247 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
340.975 -479.918 mo
(\000X)sh
.9564 lw
8.7016 -472.521 mo
412.348 -472.521 li
@
0 1 1 0 cmyk
%ADOBeginSubsetFont: JAAAAA+manfnt Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /JAAAAA+manfnt def
/FontInfo 7 dict dup begin
/Notice (Copyright 1998 Taco Hoekwater) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 127 /char7f put
def
/FontBBox {-500 -1100 2728 2822} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/BlueScale 0.04379 def
/StdHW [30] def
/StdVW [40] def
/StemSnapH [30 40 48 60] def
/StemSnapV [40 60 66 100] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/char7f <1C60D8A8C9B08A9519B62457D92754756552433A50D16AA9D6AFE60
98A753A2F9B992D05ABE3732832A0A92E4255DF65297A24BCB3CAEAAE119CEA5
519C3AE1196372B82223AE848B2B9F03CE46542FF240B8DE1D82C2D69D972775
C89702DDE56E26639CCBBCD71E5CAE9F43BAB26E0B98F41A08FAFE2A035D8203
BE84744DD2D25470D3DAE87ECC602A9E23355A071D84E95607F66C0398346E41
EFCBD26D5B416596F2182F753139EAD07B5E37AEC9D5131DD51FA84E0B36B979
8CF64F33E9E9F38B29FE0DB14E637A62666F86DECC3EB7CC77E975EC30B0C841
760ACEA0DF27A748D6DACB6ED5B098A00C6E9D37F6D9FDF20A1571BC3BA33AEF
46EA7FB49EF3D6CE275F2592DD620DB9D298ADB86862DA9E99B2437A8CA5E4B1
0F50E9C7250F665391C2F8326120FDFA2EB7FC7054A977204024F9934CAED8C0
95DA6FAB6A08B8BB7376D069969C303EB0F2B4AB66D12C163505C67312661918
B0D04CFEE9A1524E9785BEC8EB2A375F94DC6841FED68E6C8BF45F7B2DD2820B
E52B789570752F0815F4DE60E9DB010CF9493A7> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/FXRWCL+manfnt /JAAAAA+manfnt findfont ct_VMDictPut
/FXRWCL+manfnt*1 
[127{/.notdef}rp /char7f 128{/.notdef}rp]
FXRWCL+manfnt nf
FXRWCL+manfnt*1 [5.9776 0 0 -5.9776 0 0 ]msf
-27.2934 -450.772 mo
(\177)sh
.351751 .317968 1 .0302739 cmyk
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+LMRoman12-Regular-Identity-H 1 GetGlyphDirectory
76 <001C60D8A8C9B613326598F76BFA5EBCD323BAB5855AE2D6B9D9AFAB51C5
A623F7A7DDAC41B1DF454A96B8582525EE6EF303BD2AA49B861A751970468EFD
8C9F60064702DD7435F396C7DEC1DB91D7B768BCEAE975E2338850A54EFA0ED6
CE27E9506C1FB429CF3688BCE42519A68482070F701601D87F7B0DE513DB198D
C5C03D85008722E50BEE6F85767EA8E4C255552AEF8D2B> |
!
end
end end
%ADOEndSubsetFont
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
4.0726 -444.197 mo
(\000L\000Q\000i\0002)sh
-6.7874 -395.653 mo
427.837 -395.653 li
427.837 -424.321 li
-6.7874 -424.321 li
cp
.0173037 .010193 .010193 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
26.0896 -407.058 mo
(\000h\000?\0002\000b\0002)sh
59.9467 -407.058 mo
(\000T\000`\000Q\000T)sh
83.6898 -407.058 mo
(\0002\000`\000i\000B\0002\000b)sh
114.965 -407.058 mo
(\000\034\000H\000b\000Q)sh
138.445 -407.058 mo
(\000\034\000T\000T\000H\000v)sh
170.641 -407.058 mo
(\000i\000Q)
[4.55489 0 ]xsh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 1 GetGlyphDirectory
2862 <001C60D8A8C9B6FF86F92341A0AB6F99501C96953E191F1847A1E3C6D1
ADD5FC981B02968C5256CBAAD8E07308E4ED54CF084846D4A23C2AA77FCB7304
65CABC06C195ABDE56AAFE89FD2DBE991CB806F7D71B12D263749B137FCF> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
184.962 -407.058 mo
(\005\020\013.\005\021)
[9.63589 12.6247 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
212.526 -407.058 mo
(\000-)sh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
219.675 -407.058 mo
(\005\020\000\037\005\021)
[9.63589 12.6247 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
251.136 -407.058 mo
(\000\034\000M\000/)sh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 1 GetGlyphDirectory
2863 <001C60D8A8C9B6FF86F92341A0AB6AB002BE2067D5F15551632092F16D
9A42436A74B665C0C42995C694F124776316303C2461DEB9C05CF6DC66687F9D
17C8FF0F745C3E195EDE24469FF5EB5E13A2B20ACED99E86AAAD48> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
273.899 -407.058 mo
(\005\020\013/\005\021)
[9.63589 12.6247 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
301.463 -407.058 mo
(\000X)sh
0 1 1 0 cmyk
FXRWCL+manfnt*1 [5.9776 0 0 -5.9776 0 0 ]msf
-27.2934 -376.375 mo
(\177)sh
.351751 .317968 1 .0302739 cmyk
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
4.0726 -369.8 mo
(\000L\000Q\000i\0002)sh
-6.7874 -304.719 mo
427.837 -304.719 li
427.837 -349.924 li
-6.7874 -349.924 li
cp
.0173037 .010193 .010193 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+LMRoman12-Regular-Identity-H 1 GetGlyphDirectory
502 <001C60D8A8C9B85AB9EED740BB7691E91CE505C27F522F2C440B11ED18B
2985BBC3CCCCE03814D3946DFEFB406B9A68DD50829A69D2D3C8A7B0734DC0FA
66F6E1F463ADD6F1D6180C46387DD9B987AF2> |
!
end
end end
%ADOEndSubsetFont
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
26.0896 -332.015 mo
(\000A\000i\001\366\000b)sh
46.9753 -332.015 mo
(\000\034\000H\000r)sh
64.2267 -332.015 mo
(\000\034\000v\000b\000#\0002\000i\000i\0002\000`\000i\000Q\000p\000B\0002\000r)
[5.53541 6.18082 8.84692 6.8264 5.20049 4.5549 4.55489 5.20049 8.79893 4.55489 10.1022 6.18082 
3.25185 5.20049 0 ]xsh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
161.915 -332.015 mo
(\005\020\0127\005\022)
[9.21759 12.1944 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
193.048 -332.015 mo
(\000\034\000b)
[5.85811 0 ]xsh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 1 GetGlyphDirectory
12 <001C60D8A8C9B6FF86F594155D6908086C08A3A73412535B8963ECE11227
0869D32B01A7F4FD629AAAA55C6BEC1873A910DAC34769700BA44D95233E95A5
4901265BECADFCA5BA88ABF5A5C62082E8EBEDDC546110EDCD9D> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
207.765 -332.015 mo
(\005\020\000\014\000\011\0127\005\022\000\012)
[9.21759 12.1944 4.65067 9.30115 5.47537 0 ]xsh
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+LMRoman12-Regular-Identity-H 2 GetGlyphDirectory
34 <001C60D8A8C9B628237822F474C04E5C7313E5922CE09FF5901E7934E5A5
A174A53C0C041AC720ECE1253A8E0551AC938F70BB8497E9C9A8BFC2CAF6A065
D5BCF23BA6C0B49ED92906267858E14E8FE07BA4712B0F3E9836E5A67877622C
1469EBCE9DEF7F326795E43C0B642FF6BAD06871E452C9FC7A2DD1BAD9E4882A
58B2270303CEBC595B0916BD6820F6A08E782E8D7B130F904FA5E2EAC13C9780
9A7A51E51BA258A106A784771507D076AE3C> |
64 <001C60D8A8C9B82424A9C89C4F9B2EA301917DC41B2F6B065AA459E868BF
5F> |
!
end
end end
%ADOEndSubsetFont
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
253.256 -332.015 mo
(\000X\000"\0002\000+\000\034\000m\000b\0002\000\034\000/\000/\000B\000i\000B\000Q\000M\000?\000\034\000b\000i\000?\0002\000+\000Q\000K\000@)
[9.48047 8.28488 5.20047 5.20047 5.85812 6.50369 4.61475 9.44452 5.85812 6.50369 6.50372 3.25183 
4.5549 3.25186 5.85809 10.7477 6.50372 5.85812 8.85876 4.5549 6.50369 9.44455 5.20044 5.85815 
9.75537 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
2.17859 -316.125 mo
(\000K\000m\000i\000\034\000i\000B\000p\0002\000T\000`\000Q\000T\0002\000`\000i\000v\000X)
[9.44453 6.50371 4.55489 5.85811 4.55489 3.25185 5.85811 9.08589 6.50371 4.55489 5.85812 6.82641 
5.20049 4.55489 4.24405 5.20049 0 ]xsh
.856992 .596643 0 0 cmyk
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+LMRoman12-Regular-Identity-H 2 GetGlyphDirectory
42 <001C60D8A8C9B63675661CD72152C956C1BF3F712A4AA84AA1545B4901C6
E24D9804F20946E38CBC4105D66294C90189301F8BFB221745E428BBCAEF3B21
CC7C97834BB211BC862C680F303D3B12887648C937910C467630415B9194F3A2
B9A9A6142E352171ECFF23388ACEF94BA0050A36041E5BEA0A0EF0BF28615048
C4E3BFC0251C289E> |
91 <001C60D8A8C9B7B644088A5E81B6141B312C1B7ACE850284972ED55BA6F9
CE94C1A1E1A47F36CAA5727CEE4BAEFDD01B792E0AC666D7859A4979F89D8439
0421B28C741DFF73755C98970E1D513252F4AF97010D8612AA1F13E88BFD7EF9
80DC13056602B13477DE4764F34DA3F943F2635469388BBBDFA86EC715EAFD39
AFDD2065172595F8F7D7AF54CDAEE8C6> |
!
end
end end
%ADOEndSubsetFont
FXRWCJ+LMRoman12-Regular-Identity-H [14.3462 0 0 -14.3462 0 0 ]msf
2.1786 -267.509 mo
(\000*\000Q\000K\000T\000Q\000m\000M\000/\000A\000M\0002\000[\000m\000\034\000H\000B\000i\000B\0002\000b)
[10.1428 7.02972 11.7064 8.19167 7.02972 7.80442 7.80443 12.4813 5.06416 7.80442 6.24056 7.41696 
7.80443 7.02972 3.90219 3.90222 5.46585 3.90222 6.24057 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+LMRoman12-Regular-Identity-H 1 GetGlyphDirectory
27 <001C60D8A8C9B613326598F7657C1643B3796FE7635F99B9FFA2A35821E6
F46FD56AF83EC580B08E1E492B10B953D4B92CAF5898723C3214784C73216F45
3A346B276A572FC0E37D30F35B2747EBAFA9AE77B786A8777D94684C4D202A11
43604E58F2A8BD493EEB04FA6B7CBCB8668120FD40BEEE4385E0743EDA6611EF
552D6065CCC7759A4358D0C374BD416C5F04068B> |
!
end
end end
%ADOEndSubsetFont
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
26.0896 -243.549 mo
(\000\033\000+\000Q\000K\000T\000Q\000m\000M\000/\000B\000M\0002\000[\000m\000\034\000H\000B\000i\000v\000B\000b\0007\000Q\000`\000K\0002\000/\000#\000v\000i\000r\000Q\000B\000M\0002\000[\000m\000\034\000H\000B\000i\000B\0002\000b\000r\000B\000i\000?\000i\000?\0002\000r\000Q\000`\000/\000\034\000M\000/\000Q\000`)
[13.4257 5.20049 5.85812 9.75537 6.82641 5.85812 6.50371 6.5037 11.1662 3.25186 6.50369 5.20049 
6.18082 6.50371 5.85812 3.25185 3.25185 4.24405 10.8315 3.25186 9.27724 3.57457 5.85811 4.55489 
9.75539 5.20047 11.1662 6.19286 10.8315 4.24405 8.12962 10.5088 3.25183 6.50372 5.20047 6.18082 
6.50372 5.85809 3.25186 3.25186 4.5549 3.25183 5.2005 9.27725 8.45233 3.25183 4.5549 11.1662 
4.5549 6.50369 9.86301 8.14148 5.85812 4.5549 11.1544 5.85812 6.50369 11.1662 5.85812 0 
]xsh
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+LMRoman12-Regular-Identity-H 1 GetGlyphDirectory
54 <001C60D8A8C9B672D450D62CD915217E8DFA9C17864BB7A2DA7ED36EB3B0
54B76166D732E35B04B8ED5F376B1CE7E7E888F633F5DE33947735CE70155CCC
8390BEBEC971A190F776D89C1BEA1AE46B43F90FE8E71FB2C118CEBA7D25767E
F970E00F90E12D252E81FD14EE1A5D8A6ED1ED11EA67D75EA9FC57B303E41752
8055E0E4C79CD0> |
!
end
end end
%ADOEndSubsetFont
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
2.1786 -227.658 mo
(\000i\000?\0002)sh
21.7972 -227.658 mo
(\000r\000Q\000`\000/\000Q\000`\000X\0006\000Q\000`\0002\000t\000\034\000K\000T\000H\0002\000b\000-\000i\000?\0002\0007\000Q\000H\000H\000Q\000r\000B\000M\000;\000\034\000`\0002\000i\000?\000`\0002\0002\000+\000Q\000K\000K\000Q\000M\000H\000v\000b\0002\0002\000M\000i\000v\000T\0002\000+\000Q\000K\000T\000Q\000m\000M\000/)
[8.14149 5.85812 4.55489 9.83929 5.85812 4.55489 8.27302 6.67117 5.85812 7.90234 5.20048 6.18082 
5.85811 9.75539 6.50369 3.25186 5.20047 4.61475 6.71878 4.55487 6.50372 8.55997 3.57455 5.85809 
3.25186 3.25186 5.54727 8.45233 3.25183 6.50372 9.20554 5.85812 4.5549 8.55997 4.55487 6.50372 
4.55487 5.2005 8.55997 5.20047 5.85812 9.75537 9.75537 5.85812 6.50369 3.25186 9.54028 4.61475 
5.20047 5.20047 9.86319 4.24405 6.18082 6.81454 8.55997 5.2005 5.85809 9.7554 6.82639 5.85812 
6.50369 6.50372 0 ]xsh
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+LMRoman12-Regular-Identity-H 1 GetGlyphDirectory
44 <001C60D8A8C9B85AB99D7557037FDFA2A0ACE08678799B662BE2DF733D75
8362B2E0B43A5B881F04DFFFA496D43A28E45A39409153A1B212C8770A85D77C
6012E4053AD8EB84> |
!
end
end end
%ADOEndSubsetFont
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
2.1786 -211.768 mo
(\000B\000M\0002\000[\000m\000\034\000H\000B\000i\000B\0002\000b\000,)sh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
135.134 -194.781 mo
(\005'\0127\000\022\000\037\000\023)
[9.49251 11.9552 9.30115 12.6247 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
196.442 -194.781 mo
(\000\034\000M\000/)sh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 2 GetGlyphDirectory
20 <001C60D8A8C9B7A73D3B2B97DB2FC2C7B13A612567A054895D71138E98FD
5F757562F46A000447FA9E5DB88EB030B9366A608700A657EA9EBB727BB650FE
57924F78CA14B4CC6B7E591D1DF4A4B8EA41BE4109A6DCEAB7554D25BF4D0195
9F0960FDFAE675AB36B894B3BF41CF9B13210A13B6FB67C144FBEFE949B5D7A4
3E03B88B24794E935B75F4B06B511BD8E571A2F8AFEDB3E6CAC04F67A9B5EAFA
697CC6CF38B24C6B8D218240C7FBE84F8B01DB25B5123AB775852DD126225B50
2111C44BF3FD34FAA35F14E38A4250043544F1E0A64B66751EE46BFCC8A7C333
556E230D62B20F> |
13 <001C60D8A8C9B854D088E8E1A14EF2D6BBEBF1B77DCDEA72D9B12B3CD3C6
C862DB4E275CCC76509E4AA8AE6F8FFF9DF1D440CDD917D859541CFC96F13ACB
F35A0DB2E74061C25672BBA8EB2039DECDA5D3> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
227.262 -194.781 mo
(\000\023\005'\000\014\000\022\000\035\000\024\000\015)
[5.9776 9.49249 11.9552 9.30115 12.6247 5.9776 0 ]xsh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 1 GetGlyphDirectory
22 <001C60D8A8C9B7A73D3B2B97F19D54A2E00E7DDA8E72064220CB7581D13C
EDF071F346430E40993A6297E3A2A6D6093205222D977AC7F7B65CC82B221D9B
18ADEA5D4AF0261ABF07DF2FF9066594AE25DFB2D25271FEFA0982C864CB157F
9815E27DF8078B5DEFC52850DF8B0F0849C651CA0A4340F685EBFC2CB53B2219
4358F1BD9D8E770EF318CB7177155A66CAEFF309FE8583BBCC5E028E491AC19E
F3886CB62F5F60B3947B2392EE017480A55A9A5A95712C0BDB1A08F46BC901E9
A934D650042BC45755F5D743433072EA3F5CDE1E3942478BAA7320081F654494> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
133.383 -176.699 mo
(\000\024\005'\0127\000\026\000\035\000\025)
[5.9776 9.49251 11.9552 9.30113 12.6247 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
200.668 -176.699 mo
(\000Q\000`)
[5.85811 0 ]xsh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 1 GetGlyphDirectory
17 <001C60D8A8C9B7A73D3B2D32309B1F5D5A32FC3614834F8BC61B6EB92C12
484BD76628737DA40CF9DA1C97CCDAFB1D1B732C642F74A7C41B7D3AC6DAF8D1
E760692B6EBD2417EF1893A4AA0B1CF049D4C54D830CECC45475F8A3DA98BB40
8D06F19A87B58E30103153090866232C07C63155789CBD0A00D457DF760E3005
886268A8A908A4F180B155096C0101F1E24BFC95AC> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
223.036 -176.699 mo
(\000\024\005'\0127\000\023\000\037\000\022\000\021\000\015)
[5.9776 9.49251 11.9552 9.30115 12.6247 5.9776 5.9776 0 ]xsh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
164.392 -155.015 mo
(\0127\000\024\013.)
[9.30115 9.28909 0 ]xsh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
196.809 -163.11 mo
(\000\023\005'\0127\000\025)
[5.9776 9.49251 11.9552 0 ]xsh
.4782 lw
196.809 -158.005 mo
230.218 -158.005 li
@
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
210.525 -146.813 mo
(\000\024)sh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 1 GetGlyphDirectory
15 <001C60D8A8C9B854D088E8E1B7306BEE53606180C9D8E09A11AAC6162445
F3509DC276AA079959B131> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
234.735 -155.015 mo
(\000\035\000\023\000\017)
[12.6126 5.9776 0 ]xsh
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+LMRoman12-Regular-Identity-H 1 GetGlyphDirectory
125 <001C60D8A8C9B79B8EEA0322279BCC609F9520C86CBB2E945CED2A8CEBF
CE976AA3935920A969704C918F107F5E7D59540A5F3498A973AD1BFF27008E04
6C99F3E320514724D1303395744512BB5D3D615CB7C699C098D67B034D800B4A
6DC8D849F966B8D4D973489D6963F4815A7646A23AF7E2AEE5BD5D1281B278D7
3B42056E4617DCAF6B9E9D7E3455263BCFAF2420A274AB7DFB0553581796B1B2
41369181D2DFD7C0690BBDBE0AFEE7329C09115DC5E7458A9DBF43FC62321721
3DCD8976165A070106891FEACCA18F7C6BCE02B9EBB9A582F48DB> |
!
end
end end
%ADOEndSubsetFont
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
1.76059 -136.042 mo
(\000h\000?\0002)sh
25.6113 -136.042 mo
(\000i\000?\000B\000`\000/)sh
54.6865 -136.042 mo
(\000+\000Q\000K\000T)sh
82.3269 -136.042 mo
(\000Q\000m\000M\000/)sh
111.39 -136.042 mo
(\000B\000M\0002\000[\000m\000\034\000H\000B\000i)sh
155.637 -136.042 mo
(\000v\000B\000b\000b\000B\000K\000T\000H\000B\000}\0002\000/\0002\000t\000T\000`\0002\000b\000b\000B\000Q\000M\0007\000Q\000`\000i\000?\0002\000+\000Q\000K\000T\000Q\000m\000M\000/\000B\000M\0002\000[\000m\000\034\000H\000@)
[9.87503 3.25186 8.3208 4.61473 3.25185 9.75539 6.50369 3.25186 3.25185 6.50371 5.20049 10.1979 
5.20049 6.1808 6.50372 4.5549 5.20047 4.61475 4.61472 3.25186 5.85809 10.2098 3.57455 5.85809 
8.26099 4.5549 6.50369 8.89471 5.20047 5.85812 9.75537 6.82642 5.85812 6.50369 6.50369 10.2098 
3.25183 6.50372 5.20047 6.18082 6.50372 5.85809 3.25186 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
2.17859 -120.151 mo
(\000B\000i\000v)
[3.25185 4.24405 0 ]xsh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
19.7406 -120.151 mo
(\0127\000\024\013.)
[9.30114 9.2891 0 ]xsh
FXRWCK+LatinModernMath-Regular-Identity-H [8.3686 0 0 -8.3686 0 0 ]msf
52.1586 -124.862 mo
(\003\365\005\223\0127\003\232)sh
52.1586 -123.14 mo
73.6156 -123.14 li
@
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 1 GetGlyphDirectory
1007 <001C60D8A8C9B7E2CEA7BEEFBD14AB8DF8CEA74AA4F6A3EC047A3A7CC3
98582B18B5A45ADDFF133A709A7B120CE075F5A402A794BCAD9336C2A2E25751
BE3A8694C6CE9A92EE64ADEE865B468AD95E3A984FBCBC9686B068948884AE68
0A40577A879F8A9CE1955C218DA139DC1A4A20A616AA301D305903CCC164D52D
5891BC8E9395CF30DAFB6528B3C64F3C58414C3C326E3508853C89CF7156F942
578B0B38E903734ED0AE93AE70DF8C0DD4EA8BD7DC2ED58A8FE891394B433671
1C0BB71BC14C1025EA84D293E50B0AA1ECD321E3DF1F58C404DA34421D7EEF> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [8.3686 0 0 -8.3686 0 0 ]msf
60.5066 -116.026 mo
(\003\357)sh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
78.7086 -120.151 mo
(\000\034\000M\000/)sh
FXRWCK+LatinModernMath-Regular-Identity-H [8.3686 0 0 -8.3686 0 0 ]msf
102.667 -124.862 mo
(\003\365\005\223\0127\003\232)sh
102.667 -123.14 mo
124.124 -123.14 li
@
FXRWCK+LatinModernMath-Regular-Identity-H [8.3686 0 0 -8.3686 0 0 ]msf
111.015 -116.026 mo
(\003\357)sh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
128.641 -120.151 mo
(\000\035\000\023)
[12.6127 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
147.241 -120.151 mo
(\000X)sh
.856992 .596643 0 0 cmyk
FXRWCJ+LMRoman12-Regular-Identity-H [14.3462 0 0 -14.3462 0 0 ]msf
2.1786 -82.941 mo
(\000A\000M\000i\0002\000`\000p\000\034\000H\000L\000Q\000i\000\034\000i\000B\000Q\000M\000b)
[5.06416 7.43141 5.46585 6.24056 5.46585 6.64225 7.02972 8.56469 10.53 7.02972 5.46585 7.02972 
5.46586 3.90221 7.02972 7.80442 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
26.0896 -58.98 mo
(\000a\000Q\000H\000m\000i\000B\000Q\000M\000b)sh
78.0592 -58.98 mo
(\000i\000Q\000\034\000M\000B\000M\0002\000[\000m\000\034\000H\000B\000i\000v\000M\000Q\000`\000K\000\034\000H\000H\000v\0007\000Q\000`\000K\000\034\000M\000B\000M\000i\0002\000`\000p\000\034\000H\000r\000?\000B\000+\000?\000?\000\034\000b\000#\000Q\000m\000M\000/\000\034\000`\000B\0002\000b)
[4.55489 10.9271 5.85811 11.5847 3.25185 6.50371 5.20049 6.18082 6.50371 5.85811 3.25186 3.25185 
4.24405 11.2379 6.50371 5.85811 4.5549 9.75537 5.85811 3.25186 3.25185 11.2618 3.57457 5.85811 
4.55489 14.8243 5.85809 11.5847 3.25186 6.19284 4.5549 5.20047 4.5549 5.53522 5.85812 8.30896 
8.45233 6.50369 3.25186 4.88965 11.5727 6.50369 5.85812 9.68369 6.82639 5.85812 6.50369 6.50372 
6.50369 5.85812 4.5549 3.25183 5.2005 0 ]xsh
%ADOBeginSubsetFont: HAAAAA+LMRoman12-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HAAAAA+LMRoman12-Regular-Identity-H 2 GetGlyphDirectory
126 <001C60D8A8C9B79B8EEA0322279BD741F37DCA88FF55FBCAD6797AD4303
F059B5945D0895AC04B3F2C11B84BD8343B909F3D07DA2C3A9020578E7B94C84
9B880349747B5D13F43F581429A1239EAF348318D705548A73EF79F623C67907
2880230CE7570A2226064FD229192C6DB03C61311A71A9C3DFD1B00A0424E8F5
FFD7AA3F5948EA0A441848DA81A784EC698886FB8B5260A2002203EF98F0A9AE
8E95E034C9F35130C161283CEB438CD9FC6E7459B> |
46 <001C60D8A8C9B6E156BE2C564C621CE9098F57CBA108641E2EB47772A04D
576131F13AC52BAEF528B7B38E28E520BB7B7271DDF5AA6DC31ADE46546C9D8E
35B974393AB4C8374C386F11C5ED84A6A949A6324E5FB589120A4188BAE0C654
404204466DFF73F48E4C2A3AD56A2BBC96289A05455D41FC6581342FCFD07D> |
!
end
end end
%ADOEndSubsetFont
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
2.1786 -43.09 mo
(\000\034\000M\000/)sh
25.7665 -43.09 mo
(\000b\000?\000Q\000m\000H\000/)sh
63.7246 -43.09 mo
(\000`\0002\000~\0002\000+\000i)sh
99.6738 -43.09 mo
(\000B\000M\0002\000[\000m\000\034\000H\000B\000i)sh
143.92 -43.09 mo
(\000v\000b\000B\000;\000M\000b\000X\000.\0002\000T\0002\000M\000/\000B\000M\000;\000Q\000M\000i\000?\0002\0007\000Q\000`\000K\000Q\0007\000\034\000M\000B\000M\0002\000[\000m\000\034\000H\000B\000i\000v\000-\000r\0002)
[10.8911 4.61475 3.25183 5.85812 6.50369 4.61475 10.9391 8.9425 5.2005 6.82642 5.20047 6.50369 
6.50372 3.25183 6.50372 10.5923 5.85812 11.226 4.5549 6.50369 9.93469 3.57455 5.85812 4.5549 
14.4777 5.85812 8.30878 5.85809 11.2261 3.25183 6.50372 5.20047 6.18082 6.50372 5.85809 3.25186 
3.25186 4.24405 5.20047 8.17743 8.14148 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
2.1786 -27.199 mo
(\000K\000\034\000v\000\034\000b\000B\000M\000;\000H\0002\000B\000M\000i\0002\000`\000p\000\034\000H\000\034\000M\000/\000\034\000m\000M\000B\000Q\000M\000Q\0007\000B\000M\000i\0002\000`\000p\000\034\000H\000b\000X\0006\000Q\000`\0002\000t\000\034\000K\000T\000H\0002\000-\000b\000m\000T\000T\000Q\000b\0002)
[9.75537 5.54727 10.8433 10.5327 4.61473 3.25185 6.50371 5.85811 3.25185 9.87505 3.25185 6.19286 
4.55489 5.20049 4.55489 5.53522 5.85812 7.92641 5.85811 6.50371 11.1783 10.5327 6.50369 6.50369 
3.25186 5.85812 11.1783 5.85812 8.26096 3.25186 6.19287 4.55487 5.2005 4.5549 5.53522 5.85812 
3.25183 4.61475 10.7716 6.67117 5.85809 9.21741 5.2005 6.18082 5.85809 9.7554 6.50369 3.25186 
5.20047 8.12964 4.61472 6.50372 6.50369 6.82642 5.85809 4.61475 0 ]xsh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
367.192 -27.199 mo
(\005\020\000\035\005\021)
[10.975 13.9518 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
397.416 -27.199 mo
(\000-\000r\0002)
[8.11758 8.14151 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
2.17859 -11.309 mo
(\000?\000\034\000p\0002\000i\000?\0002\0007\000Q\000H\000H\000Q\000r\000B\000M\000;\0002\000[\000m\000B\000p\000\034\000H\0002\000M\000i\000`\0002\000T\000`\0002\000b\0002\000M\000i\000\034\000i\000B\000Q\000M\000b\000Q\0007\000B\000M\0002\000[\000m\000\034\000H\000B\000i\000B\0002\000b\000X)
[6.5037 5.54727 5.85812 9.08588 4.55489 6.5037 9.09792 3.57456 5.85812 3.25185 3.25186 5.54726 
8.45233 3.25185 6.50371 9.74352 5.20049 6.18082 6.50371 3.25185 5.54727 5.85811 3.25185 5.20049 
6.181 8.44031 4.55489 5.20049 6.50371 4.55489 5.20049 4.61473 5.20047 6.19287 4.55489 5.85811 
4.5549 3.25185 5.85811 6.50371 8.50014 5.85809 7.47202 3.25186 6.50369 5.2005 6.18082 6.50369 
5.85812 3.25183 3.25186 4.5549 3.25183 5.2005 4.61472 0 ]xsh
.9564 lw
2.1786 3.57498 mo
454.714 3.57498 li
@
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
39.7116 18.674 mo
(\005'\000\035\005\020)
[10.15 12.6247 0 ]xsh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
156.349 18.674 mo
(\005'\013/\005\021)
[10.1499 12.6247 0 ]xsh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
261.334 18.674 mo
(\005\020\013.\005'\000\035\005\021)
[9.63589 12.6247 10.162 12.6247 0 ]xsh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
364.933 18.674 mo
(\005'\013.\005\020)
[10.15 12.6247 0 ]xsh
FXRWCJ+LMRoman12-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
397.937 18.674 mo
(\000Q\000`)
[5.85812 0 ]xsh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
412.247 18.674 mo
(\005'\000\037\005\021)
[10.15 12.6247 0 ]xsh
.5978 lw
2.1786 25.892 mo
454.714 25.892 li
@
106.351 45.129 mo
2.1786 45.129 li
2.1786 30.5934 li
106.351 30.5934 li
106.351 45.129 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.1134 72.212 ]ct
[104.359 0 0 14.722 -85.028 26.9898 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 1120 
/H 158 
/M[1120 0 0 -158 0 158 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 1120 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1120 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1120 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1120 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&`rL\kJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNgkJcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&`rL\kJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcNgkJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&`rL\kJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNF`"$OE60?X?I!.k3&!.k3&!.k3&
!.k4"!!=mVXX(7RJcLB&`rL\kJcLB&JcLB&V#UTOX/dQ+!.k3&!.k3&!.k3&!.k3&!4r72k/m[U!.k3&
!.k3&!.k3&!.k4!!!Ae,^C%@KJcLB&`rL\kJcLB&JcLB&U]:LQXfVig!.k3&!.k3&!.k3&!.k3&!4r45
L9%?[bQ*4pJcLB&JcLB&JcLB&JcO4!!^5].ZiG[XJcNgkJcLB&JcLB&JcMSH!tMWO]&NdB!.k3&!.k3&
!.k3&!.k3_!!<S&XfKYGJcLB&JcLB&JcLB&JcLB&dJs@VT<"lt!.k3&!65(k!.k3&!.k3&!2BMqRHDiU
!.k3&!.k3&!.k3&!.k3&!4i.44MJS5blE=qJcLB&JcLB&JcLB&JcO0u""p^XS[JNM!.k3k!.k3&!.k3&
!.k3G!!=mTX-r#KJcLB&JcLB&JcLB&JcLB&\Gu]jk'bJSJcLB&JcLB&JcLB&JcLB&ci=/c^V?5H!.k3&
!65(k!.k3&!.k3&!29Gq=fnf[jT'l4JcLB&JcLB&JcLB&JcN=]"'_h,K?aIK!.k3&!.k3&!.k3&!.k3t
!!<>cju9aLJcLB&`rL\kJcLB&JcLB&T`>1Z^V>-X!.k3&!.k3&!.k3&!.k3&!4W"2J$#hbcN&OsJcLB&
JcLB&JcLB&JcO*s"+I;OB".hm!.k3k!.k3&!.k3&!.k3E!!=b6jpL5NJcLB&JcLB&JcLB&JcLB&\,ZX7
XhVVMciAXtJcLB&JcLB&JcLB&JcO*s"9P*qX[BW!JcLB&`rL\kJcLB&JcLB&T`>2sRB*AVk5^)6JcLB&
JcLB&JcLB&JcN7[!da"kcN&OsJcLB&JcLB&JcLB&JcO'r">7@%\gk8kJcLB&`rL\kJcLB&JcLB&TE#*>
XKANGkQ$27JcLB&JcLB&JcLB&JcN7["=0tIV]jFfJcLB&JcLB&JcLB&JcLB&bl@gsk0LR<JcLB&`rL\k
JcLB&JcLB&T)\t-^V?Q-!.k3&!.k3&!.k3&!.k3&!4Dk0<NWBbd/\auJcLB&JcLB&JcLB&JcO$q"';P(
Nk,4B!.k3k!.k3&!.k3&!.k3C!!<;bk#:IDJcLB&JcLB&JcLB&JcLB&[/^<2^V=O3!.k3&!.k3&!.k3&
!.k3&!6bEFS#ren])[E_JcNgkJcLB&JcLB&JcMAB".6-i=Qog;!.k3&!.k3&!.k3&!.k3Y!!@E,joWs2
JcLB&JcLB&JcLB&JcLB&bQ%c>^V@;u]E!N`JcNgkJcLB&JcLB&JcMAB"?ilhWYF^uJcLB&JcLB&JcLB&
JcLB&[/^=nX/i*4df=t"JcLB&JcLB&JcLB&JcNso!p8Xd])[E_JcNgkJcLB&JcLB&JcM>A"/!?CRHad(
!.k3&!.k3&!.k3&!.k3X!!A1^Xb>.'JcLB&JcLB&JcLB&JcLB&b5_X$X/gib!.k3&!65(k!.k3&!.k3&
!1a)l7crhjl2ZD9JcLB&JcLB&JcLB&JcN.X!&OVh!*.MKJcLB&JcLB&JcLB&JcLB&b5_MiriH/g]`<Wa
JcNgkJcLB&JcLB&JcM>A!%@iI!(H2RJcLB&JcLB&JcLB&JcLB&ZN('gk2t+mJcLB&JcLB&JcLB&JcLB&
aoDR*^V@)]^&W`bJcNgkJcLB&JcLB&JcM;@"F@2PU^$/cJcLB&JcLB&JcLB&JcLB&ZN(,RX/houeGt1$
JcLB&JcLB&JcLB&JcNpn"!ZmiUV-YZ!.k3k!.k3&!.k3&!.k3@!!F1N^V>]n!.k3&!.k3&!.k3&!.k3&
!4)Y.'<A7;G1?SE!.k3&!.k3&!.k3&!.k3n!!Et5X/gBW!.k3&!65(k!.k3&!.k3&!1NrjdH9R2li;V;
JcLB&JcLB&JcLB&JcN(V!.+XZ!(#09JcLB&JcLB&JcLB&JcLB&aT)<PriH/V^AricJcNgkJcLB&JcLB&
JcM8?!+l/1!&a-DJcLB&JcLB&JcLB&JcLB&Z2ak3roV`2JcLB&JcLB&JcLB&JcLB&aT)GHZbO8O^Aric
JcNgkJcLB&JcLB&JcM8?"9P@#Xci&OJcLB&JcLB&JcLB&JcLB&Z2b"/TW>,Sec::%JcLB&JcLB&JcLB&
JcNjl".nZ;=MFif!.k3k!.k3&!.k3&!.k3>!!%6B^Ap7]!.k3&!.k3&!.k3&!.k3&!3lM(A,`S1/CslR
!.k3&!.k3&!.k3&!.k3l!!$O.WrO]d!.k3&!65(k!.k3&!.k3&!1Elf#QElQ!.k3&!.k3&!.k3&!.k3&
!3lM,'tqAsQe)4h!.k3&!.k3&!.k3&!.k3l!!En8Xf[2j!.k3&!65(k!.k3&!.k3&!1Elj&ZVn4JF3Dh
!.k3&!.k3&!.k3&!.k3T!!D$=jtYHfJcLB&JcLB&JcLB&JcLB&`rH7-^V@K)_#T&eJcNgkJcLB&JcLB&
JcM2=!.b'N!#P)(JcLB&JcLB&JcLB&JcLB&YQ+fUX/i6;fDpL'JcLB&JcLB&JcLB&JcNgk""r`uiP5GF
!.k3k!.k3&!.k3&!.k3=!!#1]^AroT!.k3&!.k3&!.k3&!.k3&!3cG'0E/'RD:ei?!.k3&!.k3&!.k3&
!.k3k!!"_PWrR"Q!.k3&!65(k!.k3&!.k3&!13ccjo?%_!.k3&!.k3&!.k3&!.k3&!3ZA*X1uEZ$/#<1
!.k3&!.k3&!.k3&!.k3j!!J^lXf2NA!.k3&!65(k!.k3&!.k3&!13`hQ`I0`#4MVE!.k3&!.k3&!.k3&
!.k3S!!@0%k.oULJcLB&JcLB&JcLB&JcLB&`W-!NrkAGN_>o/fJcNgkJcLB&JcLB&JcM/<!)rm!!*Sdk
JcLB&JcLB&JcLB&JcLB&Y5eQ%ri6$'f`6U(JcLB&JcLB&JcLB&JcNdj!!3)]!!C(<JcLB&`rL\kJcLB&
JcLB&QiI6n\A,e_n,S%?JcLB&JcLB&JcLB&JcMtS"9b^+Xe=>IJcLB&JcLB&JcLB&JcLB&`W-,EV5pYf
_>o/fJcNgkJcLB&JcLB&JcM,;"2O']Msp^u!.k3&!.k3&!.k3&!.k3R!!%fR^Aq0c!.k3&!.k3&!.k3&
!.k3&!6"p<ErN0@6GieT!.k3k!.k3&!.k3&!.k3;!!%$<WrPNW!.k3&!.k3&!.k3&!.k3&!3Q;%(]NRM
!.k3&!.k3&!.k3&!.k3&!6"p<.K7'^TYgb]!.k3k!.k3&!.k3&!.k3;!!")>XT4@N!.k3&!.k3&!.k3&
!.k3&!3Q;%+TADAMV8&^!.k3&!.k3&!.k3&!.k3h!<2*\8AbFZ!.k3k!.k3&!.k3&!.k3:!!KO@^V19M
!.k3&!.k3&!.k3&!.k3&!3H5(T<55s%,1c6!.k3&!.k3&!.k3&!.k3h!!JgmX/ZTH!.k3&!65(k!.k3&
!.k3&!1!TeM!!jVnGn.@JcLB&JcLB&JcLB&JcMnQ!/pik!+jmbJcLB&JcLB&JcLB&JcLB&_uKd\riH/u
_uPAhJcNgkJcLB&JcLB&JcM):!-S:A!)rFgJcLB&JcLB&JcLB&JcLB&XT/>@roO1]gAlg*JcLB&JcLB&
JcLB&JcN^h!)EO.!2II4JcLB&`rL\kJcLB&JcLB&Q2gnKriH0^nc47AJcLB&JcLB&JcLB&JcMnQ!'gI`
!0,_5JcLB&JcLB&JcLB&JcLB&_Z9\u!)^Z7JcLB&`rL\kJcLB&JcLB&Q2h'k^;%Fs(@qNX!.k3&!.k3&
!.k3&!.k3Q!!!-"XT/sg!.k3&!.k3&!.k3&!.k3&!5nj@"0/E&WY*2MJcLB&`rL\kJcLB&JcLB&PlLpF
k2t[o!.k3&!.k3&!.k3&!.k3&!3?/#X8]j6CYSoA!.k3&!.k3&!.k3&!.k3g!!&GdXT2GA!.k3&!65(k
!.k3&!.k3&!0mNaQN!ob=n;WF!.k3&!.k3&!.k3&!.k3P!!$m8jo>J<!.k3&!.k3&!.k3&!.k3&!5ed:
IK$t]VSrOe!.k3k!.k3&!.k3&!.k39!!$^3XT4RV!.k3&!.k3&!.k3&!.k3&!3?/#B`>%4Ok]qg!.k3&
!.k3&!.k3&!.k3g!!!H,joA]+!.k3&!65(k!.k3&!.k3&!0mNa0E&Wc*V9>`!.k3&!.k3&!.k3&!.k3P
!!";CXT0-m!.k3&!.k3&!.k3&!.k3&!5ed:-2jkE(<-?+!.k3k!.k3&!.k3&!.k38!<2*\jRWA'!.k3&
!.k3&!.k3&!.k3O!!'Y1^Ar6/!.k3&!.k3&!.k3&!.k3&!5\^9X8]4$>fHbq!.k3k!.k3&!.k3&!.k38
!!&tsWrQGt!.k3&!.k3&!.k3&!.k3&!36)"eGeS1"Pj'0!.k3&!.k3&!.k3&!.k3f!!&Yj^At7Q!.k3&
!65(k!.k3&!.k3&!0dH`MuKgYQh190!.k3&!.k3&!.k3&!.k3O!!%lTWrSF@!.k3&!.k3&!.k3&!.k3&
!5\^97/l<KBuU.)!.k3k!.k3&!.k3&!.k38!!$d5^B)"Po`0RDJcLB&JcLB&JcLB&JcMhO!*9*$!NZF\
!.k3&!.k3&!.k3&!.k3&!5\^9=T5?%WW^?BJcLB&`rL\kJcLB&JcLB&PQ1[broO4:oDjICJcLB&JcLB&
JcLB&JcMhO!%e)`!'T0=JcLB&JcLB&JcLB&JcLB&_>jQZrN-&Q`rL\kJcNgkJcLB&JcLB&JcM#8!$_BB
!&4'GJcLB&JcLB&JcLB&JcLB&WW<"[h#N$,JcLB&JcLB&JcLB&JcNUerP&>V`rL\kJcNgkJcLB&JcLB&
JcLu7rN-'0o`0RDJcLB&JcLB&JcLB&JcMeNrMop.h>i--JcLB&JcLB&JcLB&JcNUe!9=(@!!gOEJcLB&
`rL\kJcLB&JcLB&P5kTdrkAH-o`0RDJcLB&JcLB&JcLB&JcMeN!1s1l!0>t:JcLB&JcLB&JcLB&JcLB&
_#OJ)ri6$Y`rL\kJcNgkJcLB&JcLB&JcLu7!/1@6!)N7fJcLB&JcLB&JcLB&JcLB&WW3$[rkAHFh>i--
JcLB&JcLB&JcLB&JcNUe!.+XH!3=-?JcLB&`rL\kJcLB&JcLB&P5kT.ri6$to`0RDJcLB&JcLB&JcLB&
JcMeN!$_F)!7]j*JcLB&JcLB&JcLB&JcLB&_#OI=rP&=]a8gelJcNgkJcLB&JcLB&JcLu7!(d'j!$:h6
JcLB&JcLB&JcLB&JcLB&WW3#jrMoo@hZ/6.JcLB&JcLB&JcLB&JcNRdrT;-#JcLB&`rL\kJcLB&JcLB&
P5kS(rP&>Hp&K[EJcLB&JcLB&JcLB&JcMeN!#GO8!*.nVJcLB&JcLB&JcLB&JcLB&_#OHOrMop"a8gel
JcNgkJcLB&JcLB&JcLr6rT4(]p&K[EJcLB&JcLB&JcLB&JcMbM!5/<G!1r'JJcLB&JcLB&JcLB&JcLB&
^]4A9riH0Xa8gelJcNgkJcLB&JcLB&JcLr6!3,su!/U=KJcLB&JcLB&JcLB&JcLB&W;lqOroO2IhZ/6.
JcLB&JcLB&JcLB&JcNRd!3,t4!4g/NJcLB&`rL\kJcLB&JcLB&OoPKKriH1#p&K[EJcLB&JcLB&JcLB&
JcMbM!0mJ`!2eWRJcLB&JcLB&JcLB&JcLB&^]4@IroO4%a8gelJcNgkJcLB&JcLB&JcLr6!/(6b!"S`'
JcLB&JcLB&JcLB&JcLB&W;lp8rN-&,huJ?/JcLB&JcLB&JcLB&JcNRd!,_\8!"-gJJcLB&`rL\kJcLB&
JcLB&OoPIprT<eRJcLB&JcLB&JcLB&JcLB&W;lp.rP&=khuJ?/JcLB&JcLB&JcLB&JcNRd!)`]s!%Z.k
JcLB&`rL\kJcLB&JcLB&OoPJ[rMooKpAfdFJcLB&JcLB&JcLB&JcMbM!!3&\hZ/6.JcLB&JcLB&JcLB&
JcNRd!'U:q!+j7PJcLB&`rL\kJcLB&JcLB&OoPJ8rN-&tpAfdFJcLB&JcLB&JcLB&JcMbM!&4AP!)qeU
JcLB&JcLB&JcLB&JcLB&^B"5p!!11AJcLB&`rL\kJcLB&JcLB&PlLn.9Pp@!^BF@rG$$Bo!.k3&!.k3&
!.k3&!.k3&!3?/&+%g11rN-4qLM^!Cj8ac3JcLB&JcLB&JcLB&JcNOcrMooYaT-nmJcNgkJcLB&JcLB&
JcLo5rT4(tpAfdFJcLB&JcLB&JcLB&JcMtS!\8#prQ5,UrkAI5rQ55[Jia5$!.k3&!.k3&!.k3&!.k3&
!6,!?.qGXX\H&f3XT8D"\HB0_3X3t3JcLB&`rL\kJcLB&JcLB&OT5B\ri6#upAfdFJcLB&JcLB&JcLB&
JcM_L!9O4B!+FdcJcLB&JcLB&JcLB&JcLB&a8c65\GF>JgA\hekk`F'a(Yt2!.k3&!65(k!.k3&!.k3&
!1Elg8#lEr!6bAD!8I@\!k)SHJcLB&JcLB&JcLB&JcLB&VuQg\ri6$NhuJ?/JcLB&JcLB&JcLB&JcNOc
!5e`t!40cIJcLB&`rL\kJcLB&JcLB&S,`RNZ1uHAs8Kb5_"c%P`;inj!.k3&!.k3&!.k3&!.k3W!!,*T
ppgD)riH1'ppgF4;X4=7!.k3&!.k3&!.k3&!.k3c!!$:'WrT*?!.k3&!65(k!.k3&!.k3&!0I6]IK&@/
j7`P*!.k3&!.k3&!.k3&!.k3Y!!+(1p<!C8rP&?_pW<NJ3UHfu!.k3&!.k3&!.k3&!.k3p!!+($p:12'
rN-(?pUL=+37\(]!.k3k!.k3&!.k3&!.k35!!#XiX7lUG!.k3&!.k3&!.k3&!.k3L!!#4]k265k!.k3&
!.k3&!.k3&!.k3q!!,!sou[:7rP&?sou[8<f)UC&JcNgkJcLB&JcLB&JcMDC!B%7W\H)X-XT7AU\c0,>
=,$^,!.k3&!.k3&!.k3&!2okt/H)X-!.k3&!.k3&!.k3&!.k3&!5AL6&cLk6!.k3&!65):!!*WbhZ/6.
JcLB&JcMGD!)W:0!;cZ/!<;i:rQ5+iLB)o+JcNIa!@1L_!.k3&!.k3&!4Mq.:@l!rp&1umrUdW#Fmf<^
!.k3&!.k3&!.k3&!.k3b!<&qu(s2i1!.k3k!.k3&!.k3&!.k34!<)$["o&(L!.k3&!5SX=&27:DOZCJ_
JcLB&JcLB&\,ZMIo#^smrP&@4o?%*1$h44K!.k3&!8%8T,Z0-#^Ke#DJcLB&JcLB&cN!rYo!nbRrN-)"
o=4mi$JGK3!.k3k!.k3&!.k3&!.k34!<&qu5kk>2!.k3&!.k3&!.k3&!.k3K!<)$[.H(8Y!.k3&!8IPV
&27:Dr/gt>YlK@UJcLB&JcO-t!+>?>!8.7b!<;W4!1qmEJcLB&`rN7B"!g`p[J[c>>i,O5!.k3&!.k3F
!!$9o\H'kPXT8Cr\bio;P)00j!.k3&!.k3&!.k3&!2fhqWrQ&V!.k3&!.k3&!.k3&!.k3&!58I3joAE(
!.k3&!65)E!!3^8M"m)43Ssgg!.k3&!.k3G!!#CUaoKfe^B"</b506\GDZBP!.k3l!!4Es[J7K:>fZns
!.k3&!.k3^!!#=S\H'JEXT8+c\H$O<!.k3&!.k3&!.k3&!.k3&!58I3WrQPM!.k3&!65(k!.k3&!.k3&
!0@3ZjoC>7!.k3&!.k3p!!<cd>);j6!'/+#JcLB&JcLB&])Vg[nB(d:R/Oc"h=/Pe<:^*A!.k3&!94%]
,Z0-#otLK3YlK@UJcLB&JcO4!!%IEJ!MbSOXT6]:\H#L^!.k3&!65(k!.k3&!.k3&!0@3ZWrS4U!.k3&
!.k3&!.k3&!.k3&!2fhqjoE-S!.k3&!.k46!!<cd>);^2!'.:aJcLB&JcLB&df9CR](=&JSP9n#!5/<G
"25((K_!7c0AQV[!.k3k!4`(3,Z0-#n\5'/hZ/6.JcLB&JcMVI!=#Xs\HS'f('"?9rN-,,4*g_6ppgAX
Mu\G0JcLB&JcLB&JcLB&VZ6^rri6%!i;eH0JcLB&JcLB&JcLB&JcNLb!87A6!8u!"JcLB&`rNdQ!t[.i
M!^<)3Ssgg!.k3&!.k3I!!$a*aoSY(qu?`*rP&IA!!"'srQ=oX!3V7\JcLB&e,TRr;1Z.B^AqN[!.k3&
!.k3&!5&:3A+[;4Tf2fK!3#ju"9ni+*e*al!29#bJcLB&JcLB&JcLB&JcLB&^&S//rMoo&b5d+oJcNgk
JcLB&JcLB&JcLl4!4`!ip],mGJcLB&fDl!b0Ns:sOT7D_!.k3&!.k3&!5/@4(\GiM=o&*uYl2<:,5hKB
29#72!(HP\JcLB&JcP6>"!g`p[HYF+>d49\!.k3&!.k4#!!!i-\H#Y+!!&YiXT07;!!+p`osk&ih>i--
JcNgkJcLB&JcLB&JcLl4!1a"g!#t_6JcLB&JcLB&JcLB&JcLB&VZ6^QrT<&=JcLB&JcPBB!t[.iLuja!
3O&R9!.k3&!.k4#!!%H?aoFU#!!&np^ApLr!!+(Ep<!BGh>i--JcNgk`;fuc;1Z.:^AqNr!.k3&!.k3&
!2]_rFS30E4S\sWPPqT`1&M"Q*2C(=\H&[i!.k3&!.k3&!.k3&!.k3K!!&/[WrOp7!.k3&!.k3&!.k3&
!.k3&!58F5?2`p.!.k3&!65)]!!<cd>);."!'/p:JcLB&JcLB&VZ6]Bou[7gp](;`rP&>;qZ$X)[._WB
<K7'2!6>-BVeJ's^B!0l"!g`p[Gek#>fZns!.k3&!.k3b!!";;\H">Y!!%fQXT1uj!!*G(p:10$p&K[E
JcO[."-lk:#H.WS!.k3&!.k3&!58F5K`.qO9ZmEf!.k4E!!ABc.gOW*JcLB&JcLB&JcLl4!':)@p],mG
JcNjl!FZ&C!9=+^&27:Dh2q[ta8gelJcLB&JcNLb!-e.Z!)*%d!0$lk!-n>?!?oPYaoK!G!.k3&!8deT
VZW#p2[ZVdqZ$^D;1Z.2^AqND!.k3&!.k3&!7_&LDYCU@8G<)aGQ"WDA,60++h.3V!3=uWJcLB&p&P&V
"+4*!#MK00!.k3&!.k3&!0@0\FoA?@A,-+V!.k3l!<&&_H<2U%_Z58gJcLB&JcLB&VZ6];rT4(ciW+Q1
JcO[.rF#^Q!ic5(!!!Qa>):jo!'.:aJcLB&JcLB&eGoT`pW<JVp&G)DrP&>eq#CCUp<!@[huJ?/JcPKE
q54=VBf?CU!7:cK,Z0-#ftRMlhZ/6.JcLB&JcM\K!3c.-!,D3-!,MP8!-%`6!'0b`!$dO)JcNjlq3;&0
<@\<p!.k3&!.k3&!.k3K!!$g5WrR+u!.k3&!8dePOop#3.gN9YJcLB&JcLB&JcNLb!"]%j!#<ZWJcLB&
p&Ons!@7g&!7_&O&27:DeWBhlhZ/6.JcLB&JcM_L!%@Q`!"no)!.4[Z!0$^R!<AeeaoGe0!.k3l!;35l
OD-W\b5gl/"!g`p[FN"l>fZns!.k3&!.k3c!!"G@\H!37!!$X0XT3S?!!&5W\H#h-!.k3&!8deLPllD6
.gNE]JcLB&JcLB&JcNLb!+u21!-QHbJcLB&p&OcK"+"$!#N>`8!.k3&!.k3&!0@0\$N9)e*Vf\e!.k3l
!;0b$,m)0gn,NP%0Ns:]OTL`8AB6-M-\<^t-\<_\-NK%uaoI(e-NKD0^AsAj!!"VFaoJ[?!.k3&!8deH
VZW#p2[[8!"XHrr[D0K,^B26jNj2$)7=ms[7=mtZ70&2=\H%<U70&tYXT3bD!!"SE\H&A^!.k3&!;6E_
PllD6.gP2:JcLB&JcLB&JcLl4!'pL`!.+G@JcLB&a8kan"+"$!#L<C%!.k3&!.k3&!2fes$N9)e-/noV
!.k4.!:aIu,m(j^!t[.iM#3=dOT^oDXK8&!Ob/^IOb/^IOk,Wp_tV:RR.ZRAc2GBWTD&<cW;"F7(?#7F
!.k4E!:?ZdOD-W\l2]W?"!g`p[F)_l_TU6Maksjb^Oj4P^Oj5!^Atk>\H'A:^B"<4XT4db!!3-#SG0Po
'p&EI!6>0-PllD6.gON'JcLB&JcLB&JcM\K!"/\*!,pisJcLB&hZ3&,"+"$!#J:%g!.k3&!.k3&!58F5
!WD-\1WocM!.k4E!:=1q,m*91i;`rk0Ns:XOTCfJri?*lhiWMQJrtYIJs!$p!1!<$!5J/g!6G,R!TP3s
!!3-#<qj`:2in#k!6>0)VZW#p2[\.:p](CA;1Z.#^Au4Nc2bu-^Oj4P^Oj4P^VISa^A#/<](E`;s8B&#
s#9]Q!)rX&!&jTPJcLB&hZ2o+"+4*!#J^=k!.k3&!.k3&!5/C2WrPc8!.k3&!;6EWOop#3.gPJBJcLB&
JcLB&JcLi3rT4)>q#H!HJcNjll!XT=!o<nW#Pel-%Kd_6AWFs!!LB_`X8o!9Q%G9QQ%G9QQ,&XbTD-J.
Z1O:]a8NaSk`?VV%KJ'SaoGN<%Y>1B%c@ft&#n]h"-@4U$KM0e"S<$'0jp'So>91t!Q34]cN).n_LfXV
_LfXV_UlX)_"YA>^%B/As8B&$s1TfT$32RM\H#Re$A&V:$MOl.$^^"@"+4*!#P%ld!!!/o$D%6L!.k3&
!.k33!<&r"9`P1j$NCJ+!0@P>$HWVU$^Kk;"+"$!#MT61!.k3&!.k3&!2]bpjoA!4!.k3&!8dbVC$&h)
,m*--!<miEVZXQVa1h#Tft7<qr3cU9Z+P\$K"Q]JK"T^J!5nQR!5nHA!93sl!pdMCpo!l/!8$2-Ju=3u
pSS+l]=+d$VZW#p2[]6Yo`,!pB(qPmbkM/'a6!BXr7(f'hr]OQK'%[IK''&p!8@1X!8@)-!<<#"!rqE_
qj%/G!4qs9!7R$pJsFEB!j&>gjHTgp<@\=>!!*16plY]A>UY:+JcLB&JcLB&VZ6]CrMour!!`4]p&OlN
Js(_Ki0"2+W2,a?Oop#3.gP;=!"/I/!B^_V!.k3&!.k3&!.k3b!!!o8joU/8!Vg*s!9%@<@=hq^@0:#i
\8C;8!@7g>!;-<lJ,6&F]?\I2_n5uYr3cU9hn4QRK"Q]JK"S(q!6+]T!5\<?!8mai!pdM5qksFk!6k5\
!7R%-Ju?_g"/riD\)=.dOD-W\mJm6$qNV-+p\t6Z_r^sNr7(f'aQA*:K'%[IK''l2!7pnT!8dA1!<<#"
!rh?IpltinppgCKpm$GrJsG5Y!j&K%i0=Cl<@\=B!!$a0Oo\f9kl?;8JcLB&JcLB&^&S-VrMp!#!!)eW
p&O'7Js(_KpQ>WBW2QNMOop#3.gPnNo`+t%qI'Ce$CCgF!.k3&!.k34!!!`3joUJA!;g4(@J0\_@=hq0
@0:#ie\'gK!@7g7!!!Q.VZXQVa1hPc_S#cS!4g1`K"Q]JK"Q]J^q9ZfpW<KMoXk1\rP&Hu]Y(ZJVZ>$;
aoKf`Vh1guVr4HQW;aC/XkflWOD-W\o)JaurKRK/p]'RBk1\qtjnmR.h6H*ok(;`Ik(;aIjoEj(\H([^
joGG[XTS7Yk.g_W!5nTB!63u_JsCqQp6GWY!1_l1"+4*!#Q=_s!!!E*Oo\f9PQ6:8JcLB&JcLl4!$(s<
"()$.B`+%mP4em;P(Jk=OoU^FVuW7AOop#3.gPVFrF#^h$N'mU!.k3&!.k3&!2fes%fPMlQN."Uq-iss
pgJb_JmmSG!+Z#Y!-m=.!@7g;!!!i7VZOc]`9"Yc]E#S@[K*kC]RmeJ]RmeJ][sdra7m^V^%Ar;h>P(j
ik2q6q545>prWT_iMV:*JuA@@!3#n/!3Y+T"e0^),QIi<!!!Z2Plfe@pq>heeH"F_k(;`Ik(;`Ik,IJC
dJ(0Ojn.[8s8B&%lfR?Jr0@8H!64fE!5staJsFEBri?*jgm%ts@lGA!!!!Z2Oo\5lqZ)3JJcLB&JcLB&
VZ6]3rMp$8!!$L(P4enNP(JjKP2MK'PQ%K\RG<r-KO["^o)Sbu!@\-3!.k3&!.k3&!.k3b!!!B)jo_:W
!($Ehp&O&[Jmj7>pL+&3rm_!sggL4E#Q4Yq!!&A`VZWs:cG[Q3qmHL8hn4QRK"Q]JK"S(q!6+]T!5S6>
!8IIe"5^]'X8JmpVZ>!:aoKkOVh1hgVZ`s1]=Os!VZWE472G=l!.t-6"J=NLpu]HU!7q(u!8Y`YK'%[I
K'%[I^ubXHpUL:^o]?/RrN-1]k2rK8PlSVp\H'bHQ%G9QQ/@i.XK8J[PlleO2\GKY!.b!1!esAakQ$27
JcLB&JcLB&^&S-CrMp$C!!%TGP4en7P(JjKP4t+BPGkFXPMhT+KO["SqZ-9h!&=C[!aI/VQN2U;JcLB&
JcLl4!!`Da"02D%>5Vh.@J0\_@=hq0@0C)je]q[_@0&Com/R-Qr20[t_p635_S#cS!4g1`K"Q]JK"Q]J
^q9ZdpW<KOoXk1YrP&Hk]Y(<@VZ>!:aoKlbVh1guVr4HUW4T[QW8OQURs.::mf3?>r07AVh>[36k1Sks
f)4%uh6H*ok(;`Ik(;aIjoEp*\H(R[joGG[XTRSFk+qg<!5SB?!6O2bJsCqQp6>]\XK16D",CAF&c2S$
!!%QIOogA3(7,#Q!.k3&!.k34!!!N-WrmJE!.k'2rfZsTOHP3YacZdjW2QVXi0"1q@lY.i!!"bO@0Bga
!rr=Q!.k3&!.k3&!2fes#6!ZdWrN-'q-isspgJb_JmmSG"Cp!4c=>d@!BLJQ!!+^Gq54=p_p63f]\0pt
\GWc8\Zrf!]RmeJ]RmfJ]E#kDaoK<N]E$dd^B3E-`qZG3bP93[f&<NYVh1i@VZWm0]<L=n".OL'(A@h%
!!+=)q3;&Sh>[2gjoF06eH"F_k(;`Ik(;`Ik,IJCg%W#Wh"9_/s8B&$lfS*AQ2[$K]D/o:d?'WFQ,o3l
XK.uRPlleO2\G?U!@3U!OoU4;9GW9]JcLB&JcLB&VZ6]3rMp!7!!)eWp&OlNJs(_Ki0"2+W2Q6HOopAI
3>(NV!)*,r!aI/Vli;V;JcLB&JcLB&^&S-?rT40T!!)e&p&O&[Jmj7>pL+/6e^TE8@0&Coo`4Ua!=;*d
9ES$oDNW&8!2]Ut!3+kMJtdjkJtdjkWM0BopW<KDoV)?-rP&EsU0ILg!_c9ipW<JjOA(7"a\2b2Z)Zra
".OL'(?PSt"uQ-=r]L?OEhL7jc2c5gdE'Ubc@X>nc@X?Wc2c#]\H'\Bc2dnCXTJOJFnn0#9)#jrJ+u0Y
4b>iT4T[g?R-'Y9LLW7Tjo>Dd2YK<83"#*SJcLB&JcLB&JcNIarMp!#!!i<`!%dgDiBDiWJj/om!^E9A
k)oh"@lY.m!.k3&!.k3&!.k33!<)$[Ie`tq!.k3l!!/0sk$\9O#MK1S!!<9@4D;s$!1j(i!2%>pJrtYI
JrtYI^l\V`pW<KIoT9-`rP&Bs4no!W6he_'4no#/!.k4.!9g<_Rs%49d/X7N1LZL?^Y$:$aSjBaag&U4
^Oj4P^Oj5P^Au"B\H'55^B!["XTAH2p](:[pUL8di;eH0JcPKEk`l7*@Q+nf!.k3&!.k3&!.k33!<&qu
<VZWH!.k3l!9fRJKOQqRfDpL'JcLB&JcLB&V?$SW!+"RaJcLB&hZ2kK!BLJ/!!<9?4D=PQf9$3+WN<1n
Z&sX#JrtYIJs"WH!64fV!6Fep!5AEH!5A1-!06fr!$L5#JcLB&p&OHW".OI&(@(tX!!<<X@?]$P!6>)a
!6O-5K"loPK"loPW5&&:oY1CurN-(Bq#CHr!.ssU!$I@'JcNjlm$.[.@Q+nK!.k3&!.k3&!.k3J!<&qu
C#T,E!.k4.!:5jNKOQqR]`<WaJcLB&JcLB&]`A#n!)q&@JcLB&p&OGf!BLJM!8@JU!Z=+6dZFWpSYM/$
?%Q@6?%Q@6?)V$/YP60>O7ccYV>\./T(r?f!"m?JaoK/:!.k3l!:ZlgRs%49ciEV:!s:8dPL7,Ha32$7
Kn>#1Kn>#1Kti<AYP5R-T_4!=ci'sGMYI/P&@hMG!3c+sJcLB&hZ3/2",C>E&\.mn!.k3&!.k3&!58F5
%K3=-LW][L!.k4E!:Z-RKOQqRk5^)6JcLB&JcLB&Nr].@!'p>[JcLB&a8k^<!BLJ2!:Bgh!Z=+6duaVj
a8gelJcLB&JcNOc!'9ks!4;D!!,DJI!1NZ_!-7hV!-n5<JcLB&hZ3;H".OI&(:aDI"#45Je%YlfYlK@U
JcLB&JcO@%!'0ea!2]>g!*9'#!/:1J!,D8=!-$irJcLB&p&O`M",C>E&`WkC!.k3&!.k3&!0@0\=T,9#
KD>M!!.k3l!;)EVKOQqRbQ*4pJcLB&JcLB&VZ6\urT4)=iW+Q1JcO[.oO.b]#I=C4!Z=+6f9$%nYlK@U
JcLB&JcO@%!!`/>!)<.e!-%nO!1!?[!$:jV!&`[7JcLB&p&Olc".OI&(>f,@!!<<X@?]<X!*nC]JcLB&
JcLB&VuQf$p:1/rp&G(trN-'Mq#CC9p:1/[NrXb3a8l"#",C>E&]as(!.k3&!.k3&!2fes?2^f(J)UH[
!.k4.!;M]ZKOQqRYlK@UJcLB&JcLB&^&S-9rT4)4b5d+oJcPKEpgF1a#MfC+!!<9?4D<K3!'/p:JcLB&
JcLB&VZ6^]pW<NY,PM0<G5]/UOSJkVV>&+5a9%D&JcNjlr20XdG"!1b!9O7`">O>KgV3_na8gelJcLB&
JcNLb!/UB[!OsBK!!$L,XT3bE!!&G]\H0/@pAfdFJcO[.r07A>@Q+n$!.k3&!.k3&!.k3b!!$L,WrRIh
!.k3&!;6EjOopAH3>(!GJcLB&JcLB&JcLl4!!iJb!%%F@JcLB&a8l-H!BLJ&!9*t\!Z=+6hiRn!a8gel
JcLB&JcNLb!'Bns!O`F3!!%HG^As5h!!%NBaoHYZ!.k3&!8dbZVjhiu(9%<0!!<<X@?]T`!*lc/JcLB&
JcLB&eGoS1p:14&$hs]%B`5%5GPV:>FnW?GDVkGG!.k4E!!JRB@Q+nN!.k3&!.k3&!.k34!!$^2WrR;<
!.k3&!6>-CP([:)&\nBu!.k3&!.k3&!2fes%/o;g*T@'N!.k4.!!6Ri#H%Rp!!<9?4D<c;!'.:aJcLB&
JcLB&e,TKKp<!E-&GZ;+K)NFaLALrND"YpN(uG=F!.k4E!!!e`!65'A"#42Ij1bS!hZ/6.JcLB&JcMYJ
!1iho!Kmuh!!$j6XT3>;!!-ZAp:1/?NW=Y2a8c2P]E!N`JcLB&JcLB&VZ6^5rMop;iW+Q1JcO[.!"l%-
JcLB&JcLB&JcNLb!"o1l!#<ZWJcLB&`rO!W!s0?&B]kKX3Ssgg!.k3&!.k3J!!"kKaoT($q>^MWrP&>W
r;Zp+PKM&BaoH.8!.k3&!87DT"#42IkJ%"%a8gelJcLB&JcNIa!&O;Y!N[[F!!%BEXT2l0!!*@\osk'4
o`0RDJcLB&JcLB&JcLB&JcNLb!.+UE!+X1PJcLB&`rL\kJcLB&JcLB&O8o8+rT4(cq#H!HJcLB&ec5dR
)*DTuOT7D_!.k3&!.k3&!5&:3Pk<*!>m:-+!1s/(!*oL'!C4*daoTHio`0RDJcLB&m/R4j0jp42^AqND
!.k3&!.k3&!7LoJM"J4Y=TnX&!/g`W!)!4j!C*OU\H0&Fh>i--JcNgkJcLB&JcLB&JcLl4!/LNR!)31g
JcLB&JcLB&JcLB&JcLB&VZ6]^rT<&=JcLB&JcP$8!s0?&B^_&`3O&R9!.k3&!.k4"!!">:ao]=P'`J(4
W;XI556a-Ho?%&3h#N$,JcNgk])Vp80jp46^AqNr!.k3&!.k3&!2TYq-1eYKYY,Z/!!&>`XTL9]31ToW
ppgB$Mu\G0JcLB&JcLB&JcLB&VZ6^]rMooRiW+Q1JcLB&JcLB&JcLB&JcNLb!+l,kaoI"nJcNgk[f?L3
)*DU(OT7E!!.k3&!.k3&!2KSp;Xqm3W`_a2rP&?3q9&NU!/ug9JcLB&c2[qK0jp4:^AqN[!.k3&!.k3&
!4r42:[tstSQ/"frN-'nn[SXNo)O@BJcLB&JcLB&JcLB&JcNLb!/UTSaoI"nJcNgkJcLB&JcLB&JcLl4
!13ZHp],mGJcLB&aoDJE)*IVT!'/+#JcLB&JcLB&\c;_Pn&bXbrP&?Xo#_!;#4hhH!.k3&!9!nZ"#43W
^AqND!.k3&!.k3&!7:cHD""n7c2FaE^@Jf8U'9<PJcLB&`rL\kJcLB&JcLB&O8o9CrN#\nJcLB&JcLB&
JcLB&JcLB&VZ6_5rT<&=JcLB&JcOX-!s0?&BDR_j3O&R9!.k3&!.k3t!!&SZaoKBZ^Au+@aoTF#gAlg*
JcNgkYQ+b-0jp.?^AqNr!.k3&!.k3&!29GnORTd\Zi7',YkYd+\H0&WM?&5.JcLB&JcLB&JcLB&VZ6^g
ri6$qi;eH0JcLB&JcLB&JcLB&JcNLb!8IM8!8u!"JcLB&`rN1@!s0?&BE""n3Ssgg!.k3&!.k3F!!*S5
n]LgF!8[FmqoSmpM#`,-JcN[g!s:8cOoE)q>fZns!.k3&!.k3]!!*P'n[\V#!715H!&F'EJcLB&JcLB&
JcLB&JcLB&^&\,4!0>8&JcLB&`rL\kJcLB&JcLB&O9#7A!5J:/JcLB&JcNOc!s0?&3QM2P!.k3&!.k3\
!!*Ilo?%'[rP&@4oZ@3H..@4g!.k3&!7h,P"#41gYlK@UJcLB&JcO*s!=FYS\H'MFXT8+f\H/f\f`6U(
JcNgkJcLB&JcLB&JcLl4rMop+p],mGJcLB&JcLB&JcLB&JcM\KrT4*<i;eH0JcLB&JcLB&JcLB&JcO$q
!,_AN!87=c!<;`7!ML.m!!sNUU:n=UXGU<opAfdFJcNgkJcLB&JcLB&JcMDC!,(r7!6kDD!<;i)rj`&p
&aTK('3($oXf\%79F@WsJcLB&JcLB&JcLB&JcM\KrMoori;iiW#np<tWiN.eFA<1(!.k3&!.k3&!.k3&
!.k3b!<)$[<S[WZ!DVD4i,fq2!.k3&!65(k!.k3&!.k3&!1j/j:%cX/j8H^ms7j_<b0"qq!!3CXYP>j5
[pGs4JcLB&JcLB&JcLB&JcN1Y!)*!q!87=Q!<;c'!,h0(!X*A3poORq9TT7+!.k3&!.k3&!.k3&!58I3
WrPED!!3:?S+s#bUe^[bJcLB&`rL\kJcLB&JcLB&O9#7A!%I[Ckl:_sK_X[0]VY[\!.k3&!.k3&!.k3&
!42_,(k;;&!;l`0!<;i:!MqL;!!$4'Zi7]H^7B?t#sW[D^V?E>!!H!)^SujS!.k3&!.k3&!.k3&!.k3o
!!*pZpUL:srN-(uppgEn0^Si@8Yc6d$&N%6"u0VeXf[Q\!!>B`Xd9$)K)gK'`rL\kJcLB&JcLB&O9#6[
!#YJ2lMprXU&M)"WeOn+"u9\bX/h*U!!GK^X-IP,!.k3&!.k3&!.k3&!.k3K!<)$["lTF]U&O0Uh`h>E
!!ESAk2o/2!!BstBbHj7JcLB&JcLB&JcLB&JcNmm!@=!+aoMJ?^B!NpaoSk5m/R/>U&D_,WA+2L#8<<9
^N';SKDiOb^OlN<!65(k!.k3&!.k3&!1Nrh-&DB-!<2r!!9*db!N&$I!!+=)rN-*e-2RZI%t:X_?2stB
r2m4(JcLB&JcLB&JcLB&JcM_L!%n/MirB-+MlZiX!L5#/!!a$_X/fS-!,_Y7RK.p>JcLB&JcLB&JcLB&
^An6HrT<)>!)*:Q!,;6/"tA]s"TSN8rT4+BK)gK'`rL\kJcLB&JcLB&R/d::Dn5eg!<<#4!7^ti"NH3Z
!!)Ee!JA,b^AriZ!!SJ!^E<Ner4`5aZ2fIVJcLB&JcLB&JcLB&YQ+_QBWM'A!<<#"!64uJ!k!D;li7$&
riH7(X_[Y2"amGS(]^T6XT34-!.k3&!.k3&!.k3&!.k3c!!#[jX5j6]D6!Q8!,M</"a[5M)$$Q4Wr]8<
KE-T(`rL\kJcLB&JcLB&OT5AJrT<hSmJm8#ir/!>&,-&--0F=i!64s!!"uR;JcLB&JcLB&JcLB&JcMnQ
"X76G]upBS^BMHr_67r8l2Ug:rP&BJ@eB^'Ttd73qnE,)RfJ$?JcLB&JcLB&JcLB&_uKrb=d?/#q>RK"
YIUp4Cbb2T!,_Y9!)W=g"-'FB;Z*WtXZ_=;JcNgkJcLB&JcLB&JcLo5!+>f,!2fJjmf3?)r2Tfpo`,)P
X,9jQWrP>h!.k3&!.k3&!.k3&!.k3L!!%iSjoFB%!!!Z1joOTFo`,(ck"#OMk*c:%!.k3&!.k3&!.k3&
!5JR8!PSKI!PJ["!!%ZL^Ar`T!!>0p^Ua9W!P]2!!.k3k!.k3&!.k3&!.k35!<'##Xp"M"n,NH*r2fs4
oDetDXf\W#XT/d8!.k3&!.k3&!.k3&!.k3L!!&_lWrSIJ!!$m6WrQi*!!=aPX/>cp!">=sJcLB&JcLB&
JcLB&JcNOc!6>*$!2\fX!##4l!"JN"!p8Xbr8n"AK)gK'`rL\kJcLB&JcLB&OT>?p!29,enGiQAr4`5o
nc/ZbqS*$?YlK@UJcLB&JcLB&JcLB&VuZdu!064B!,_Y9!.FD<!0I&Z!3)CeJcLB&JcLB&JcLB&JcNOc
rMopVk5YL!r2TgEnc/ZLqPsUmK)gK'`rL\kJcLB&JcLB&OT>@B!)*%dnGiP%r8mu+nc/YeqW7dnYlK@U
JcLB&JcLB&JcLB&W;lo?rP&>bkPtU8r4`9+!:g*i9_uL(SXKP1!.k3&!.k3&!.k3&!5JR7(]CH9D<Ls"
D>^L9NUZuK4o28\M1Ye[!65(k!.k3&!.k3&!0R<^)#^K8D>+&$!!$m6WrS(J!!#4ZWrRmZ!.k3&!.k3&
!.k3&!.k3L!<)$[''K;q')^km8HA8\qW7cBRK.p>JcLB&JcLB&JcLB&^]4@'rP&>:kl:^+r4`9G-1Ls8
%/R^=AqL)8!65(k!.k3&!.k3&!0R<^2uTiY8bW5V!!$I*XT>LCnGiOpqQ0`rYlK@UJcLB&JcLB&JcLB&
W;loXrMoojkl:]lr2Tn!*<>X1!!rG%!*#BeJcLB&JcLB&JcLB&JcNOcrT<;D!!`A`!8[)DqW7bYK)gK'
`rL\kJcLB&JcLB&OoPJtrP&=bpAjgc!AM7c^ArfQ!!'A&^Ao@\!.k3&!.k3&!.k3&!.k3M!!$+!XT0U2
!!">BXTE5;!:^$hV#.7o(Rb>U!.k3&!.k3&!.k3&!5JR7=oGB$,jG@1-E@!E!,Cs&!29:j!#U=gJcNgk
JcLB&JcLB&JcLr6!!<,]p&O[a!9!e;!"SGt!2KGRYQ07TJcLB&JcLB&JcLB&W;lpZrP&=;l2Ug`r4`??
"TSPn!!*D?r4`6BR/hg=JcLB&JcLB&JcLB&^]4@\rN-&&l2UgNr2g!p"7Q9j#5bM&We(5&!65(k!.k3&
!.k3&!0R<^H2XcD"SVog!!&8]Wr\mrn,NInWr/mtVQ^&P!.k3&!.k3&!.k3&!3#qu,5pZg!!$[0joD+S
!:^$hi;D^;`gHgY!.k3&!.k3&!.k3&!5JR7YPu9:[-@VkIJ^bZGjbV45Pr1qT7R&p!65(k!.k3&!.k3&
!0R<^T)PhlV=jo^!!$^0XT2l"!!"bNXT4<a!.k3&!.k3&!.k3&!.k3M!!&MfWrSmZ!!$^0WrQZ/!:g*i
1Ae*PM4"?q!.k3&!.k3&!.k3&!5JR7K`:*6Wp0Qa%/]/e#jq]ijo@l&!.k3k!.k3&!.k3&!.k36!<'Y4
Q1b4O!!#%V^B)%bmf3??qnE,HYQ07TJcLB&JcLB&JcLB&W;un!!.aA8!%n)M!NZq5!:g*iD>UF8=.'&?
!.k3&!.k3&!.k3&!5JU5WrRY8!!"VJWr]45mf3?)ql9^"JcLB&`rL\kJcLB&JcLB&OoPLBroO25p&Oac
!9=">!8d,D!##1k!!9A)JcLB&JcLB&JcLB&JcMeN!%e)`!*ngi!3Q.5!1<]bnc/ZlqnE+UR/hg=JcLB&
JcLB&JcLB&_#OHYrN-&llMppSqlKjMmJm6WqlKi:JcLB&`rL\kJcLB&JcLB&P5kS,rMoolp&Odd!1<Ya
!.jP<!1E_b!$&3CJcLB&JcLB&JcLB&JcMbMrT<AF!-\8%!&FKQnc/Z9qrX7GJcLB&JcLB&JcLB&JcNUe
!,DJI!$LV.!/(-_!'orPqnE0@!.k3&!65(k!.k3&!.k3&!0[B_<rK-#)"mt(!!$m4XT1-E!;ikuWNQ;R
!.k3&!.k3&!.k3&!3-#!=T,9#)=.>'D>L:52#RFF!;iesV3h77!.k3&!.k3&!.k3&!5SX8!r_9I!!!Z.
k3W-Kj8A$?^&W`bJcNgkJcLB&JcLB&JcLu7!1Ei$!4hb&pAb3"qnE-9mJm5KqnE-&Y5j.SJcLB&JcLB&
JcLB&WW3$PriH1#lMpp\qlKjlquH<g!&"/N!/d-DJcLB&JcLB&JcLB&JcNUe!.t3N!2f&^!29:j!1rTY
!&"/L!J^Z,!.k3k!.k3&!.k3&!.k37!!"nUjoEEo!;?HnU\j0RP3i8Hjo@ZM!.k3&!.k3&!.k3&!.k3N
!!'D*^Asnm!!#Oc^Aroa!:p0jJG[(]DO:EU!.k3&!.k3&!.k3&!5SX8V#IIrMsLED3VoiXD=.B(CAY+6
=TF$RJcNgkJcLB&JcLB&JcLu7!29Cm!/^@Kp](:UqPsU5mJm6%ql9^$Y5j.SJcLB&JcLB&JcLB&WW3$q
roO2KlN$eD!##20o)Jb#qrRk\QiM^<JcLB&JcLB&JcLB&_>jQ=rP&>Rli7$RqS*"fmJm6fqnE.\!.k3&
!65(k!.k3&!.k3&!0dH`"9#>%?hFEo!!%ZJXT0g<!!&GaXT0EG!.k3&!.k3&!.k3&!.k3O!!!-"WrQPo
!!%WIWrOUH!:p0jQi!f`+IE.\!.k3&!.k3&!.k3&!5S[6jo>SO!!"kPk3W-KDu8\s!.k3&!65(k!.k3&
!.k3&!0dH`48lno3V<CJ!!!H(^Atb1!!'b2^At^F!.k3&!.k3&!.k3&!.k3O!!"YMXT0s?!!!<$XT5?t
!:p3fXT58c!.k3&!.k3&!.k3&!.k3f!!"YMWrOa=!!!<$WrT!`!!'%sWrf$r!.k3&!65(k!.k3&!.k3&
!0[E]k4AZK!;bgX^?kn#hu)U:[B9L]!.k3&!.k3&!.k3&!36)"GQ,>X]`d^&!,MGG!0@!WoDekMqnE-#
QN2U;JcLB&JcLB&JcLB&_>jRGriH4&"76'g=8K$!HL:b5/,QFMLB%=+!.k3k!.k3&!.k3&!.k38!!$O.
Wr]4&o`4df!*T0!!.!u4!%[rI!/.KTJcLB&JcLB&JcLB&JcMhO!!iMc!8Hi?!!<#Z!$_:?o)S[M!'6GH
JcLB&JcLB&JcLB&JcNXf!3,t4!3,;b!4)I9!'flO!.FaZ!bhW7JcLB&`rL\kJcLB&JcLB&PQ1]MriH0e
oDn[e!2B=l!&<mA!,283!*-0%JcLB&JcLB&JcLB&JcMhO!0mJ`!0umN!201h!&FEOoDel)ql9]uQN2U;
JcLB&JcLB&JcLB&_>jRKroO2pli7$UqW@/F!"Abe!Wi?%JcLB&`rL\kJcLB&JcLB&PQ1]trkAGPoDn^f
!"/P:!"82p!2fY.!$eWHJcLB&JcLB&JcLB&JcMhOrN-')m/R+kq5jW&qZ-6g!0d;^!#h1(JcLB&JcLB&
JcLB&JcNXfrMop(m/R+kq5XK$mJm6Lql9c<!!%TNJcNgkJcLB&JcLB&JcM#8!94"?!!Mooq#L6Qm/R,l
qrY!\JcLB&JcLB&JcLB&JcMkP!(-Y!!$1G,!%%KV!4_k*oDem'r4`69Q2lL:JcLB&JcLB&JcLB&_Z0Zn
rN-&8m/R,+qQ0asm/R-er2fslrW%NMJcNgkJcLB&JcLB&JcM&9!&jeV!#G2,q>^L9qPsUmm/R-br2Tgg
XT3qQJcLB&JcLB&JcLB&WrW.]!9EGGqW7dpq>g-f!7^r/!/m-CJcLB&JcLB&JcLB&JcN[g!0-um!2f)_
!(6Ut!2T#_!&XSf!/(7NJcLB&`rL\kJcLB&JcLB&PlLf/riH0ao)SUe!&aVT!0Q[L!%@`H!,\h<JcLB&
JcLB&JcLB&JcMkP!-\@B!0QUJ!&sbT!06mUo`+t?ql9^6Q2lL:JcLB&JcLB&JcLB&_Z0ZYroO2dlN$eD
!*/CdqrRkkrW%NMJcNgkJcLB&JcLB&JcM&9!3uO<!,M0+q>^M,qS*#\mJm61qnE+nXT3qQJcLB&JcLB&
JcLB&X8i6nriH0%li7#`qQ0a4q>g0g!+Pi-!%sQ;JcLB&JcLB&JcLB&JcN[g!1s1j!*SXg!)r`p!,Cp%
!+Pi+!&+<OJcLB&`rL\kJcLB&JcLB&PlLfGroO1^o)SUe!!2rY!"SDs!!iD`X8mhPJcLB&JcLB&JcLB&
XT/>8rkAKJ(@2#$JGR"\9)8P\!!&bk^Au!5!.k3&!.k3&!.k3&!.k3h!!!T/XT/t"!!$d1XT1HN!!&)W
Xo/6O!.k3k!.k3&!.k3&!.k3:!!!T0Wr]44o)SUe!,DA2!'KZL!0$iV!33+#JcLB&JcLB&JcLB&JcMkP
roO4?lMpnpqW@SRo`+tdr8n"<PlQC9JcLB&JcLB&JcLB&_uKdFrkAH.lMppNqS*"EmJm6tr4`60r;_EL
JcNgkJcLB&JcLB&JcM):!)ENq!0HaOq>^MHqQ0`/mJm6er2fsaX8mhPJcLB&JcLB&JcLB&XT/>sri6$Y
lMpp8qPsT-q>g0g!2f[p!0WTIJcLB&JcLB&JcLB&JcN[groO2XlMpo<qW@/F!64s!!+Gg+JcLB&`rL\k
JcLB&JcLB&Q2goOrkAGEnc8Ld!2o_/!5._"!&+5a!.ahE!A4Vd!.k3&!.k3&!.k3&!.k3Q!!%WMXT28b
!!&;]XT5Hu!;6Bm,l=\DCA7c0,6XY>JcLB&JcLB&JcLB&JcN^h!.b'L!)r1`!0[5[!3,Ad!%%NC!,DH4
qu?aC"Gm,1!65(k!.k3&!.k3&!1!Tb1&g;8!V-6e!!$I)joF'$!;kmY%]fY^!.k3&!.k3&!.k3&!3H5(
[(jAi&F0;rVu+4/Y5&(k!!$p6^ApXs!!50qY+PcH!.k3&!.k3&!.k3&!5nj?V6-l$%-mlnQ2@Z`SaHIX
=o5<$2>mOR!!4aSSV[>u!65(k!.k3&!.k3&!1!TfU8t>p%.XDp!!&2ZWrSRU!!$7#WrP*S!!4aQRC<0J
!.k3&!.k3&!.k3&!3H5'WoiI#l2UfmqrRm,q#L*g!!E,\pAb6VI@pRl!.k3&!.k3&!.k3&!6"p<62nV!
T]uLWRJX`!Q0nVPSbp/%$N0u'!!9%4Q&,Km!65(k!.k3&!.k3&!1*Zc1]FKVNU[#F!!%ZKXT3n>!!%iP
XT/V%!!8@dJ@>N1!.k3&!.k3&!.k3&!3Q;%2?'WVMWt0AK);SKJ,'*<!!%cNWrND#!!8:`J"Qdn!.k3&
!.k3&!.k3&!5nm:jo@s;!!"kQjo@%%!!#1Zk555X!!6Hg/r9R[!65(k!.k3&!.k3&!1*ZcRJsr$;=OY_
!!%ZK^ArNH!!'J*^At\;!!=@Y^M^L\JcLB&JcLB&JcLB&JcMqR!/1?R!(#lM!,_V8!+Yg)p&G)jr2fsr
q#CL6XfYa!!.k3&!.k3&!.k3&!.k3i!!%WMWrPKO!!$m5WrQYt!!&elWrSml!<)s#)69fBM#`,-`rL\k
JcLB&JcLB&QN."CroW\Mq>^L.qrRkamJm6nr8n!_p](BXjo`'mJcLB&JcLB&JcLB&JcMtS"<5(i^TZl%
!,MJH!*o="pAb1gqnE-#q#CM;^V;b$!.k3&!.k3&!.k3&!.k3j!!!`4XT4sW!!$*tXT1u^!!#4[XT4+R
!<)s#?EL=\M#`,-`rL\kJcLB&JcLB&QiI7(WiN1hn,W:b!*T3"!)2h]!'g@]!/1.J"(/+0/@PV2!.k3&
!.k3&!.k3&!3Q;(i9'0Qkl:\bqr[YRp&P!P!''cS!X7`KT)aHCJcLB&JcLB&JcLB&`W-!drkAGGkl:]W
qnE+qmf3?gqnE,EquH]r"/EWE$&JY6!65(k!.k3&!.k3&!13`dBE#"5<:Bna!!#1ZXT1*E!!&GaXT2As
!!A=bX9Q-6JcLB&JcLB&JcLB&JcMtS!,);3!*/7`!'^:\!&F?MpAb2[ql9]tq#CMVX/ZAs!.k3&!.k3&
!.k3&!.k3j!!!E+jo>GG!;kpH!!$s7jo>G[!<)s";<HYi!.k3k!.k3&!.k3&!.k3<!!KXC^U+%2!;ZZq
$2_I;Aaf["@J[_=-M[WC]"alG!.k3&!.k3&!.k3&!.k3S!!B%!Xek4]!!`>&!)iUmp](:iqQ0`<q#CJs
Xc/kPJcLB&JcLB&JcLB&JcNdj"/2crU?DRW#5bG$;t'be;#73m*rH$;!!9(!M22.`!65(k!.k3&!.k3&
!13`gUZU^=mf<.`qrRkZn,NFhqW@PQ!m]pt[K(mZJcLB&JcLB&JcLB&YQ+Z'rkAGYk5YLKr4`5aq#L0i
!4)I9q#CLs^V=*I!.k3&!.k3&!.k3&!.k3k!!#FdXT2np!!%WKXT35-!!&_hXnr)%!!#EhX\=NNJcNgk
JcLB&JcLB&JcM2=!(Hmf!+bNuq#CDFr2Tg7n,NH\qQ'Dl"%B8k:::.S!.k3&!.k3&!.k3&!3ZD%jo>_N
!!"bOjo?%i!;HNoPl'SCjS/`Tk+2R)!.k3&!.k3&!.k3&!65'BUVFRT&Ea#n3W-VlT()d\U\__*]))I2
!!&_-]FK_tJcNgkJcLB&JcLB&JcM2="H]afWsnFsq#CCHr2fsVnGiQNqQ0auq#CMVXfMl<!.k3&!.k3&
!.k3&!.k3T!!J=_X/?Bh!!"VKWrRqN!;QTpNV][UVtg;pMlWfaT)aHCJcLB&JcLB&JcLB&`rH3?k2t"O
!;tsZ5k+gS;>TDTchd\F!!#UQf7s?X!65(k!.k3&!.k3&!1Elf/cNKbM!b9<!!'/"^AtS1!!B"2^OuI!
!42M%"!G@nP-k:A!.k3&!.k3&!.k3&!3lM(,6"\EF6*B%SGfPiUA4fc!!A=bX_n!<!2TGk!uS/BI@^Fj
!.k3&!.k3&!.k3&!6>-?,Q=_DEod9$RJj/dTCMsaNN9*sr2TgkqZ$a!)69fcLB)o+`rL\kJcLB&JcLB&
R/m6K!#Y,(p](;?rT4*Hnc/bhk2m<SjoD1P!!;3C.('&,!.k3&!.k3&!.k3&!3lM,Mnd$@,NSn*@f3t@
;#11h!!K(3^NhR3^AtM7!!@V`^Gh_aJcLB&JcLB&JcLB&JcNjl!-\@D!#jr!!)WTq!'p/V"H]afA1%5V
!202h"9<):XXf/,JcNgkJcLB&JcLB&JcM5>!-S:A!$(D,p](:kr2Tf`oDf#RX/fbYr2Tggq>^V1X/dbY
!.k3&!.k3&!.k3&!.k3U!!=5'k2PG%!!3#[q#L9l"B"=D#lsnc!/p[R!Xn/QSH+6AJcLB&JcLB&JcLB&
aT)Gb]YD4JirB(DrP&?+p&G=;UVFQ^!!',!^Ate@!!=:M^SQYbJcNgkJcLB&JcLB&JcM8?";\)@Xb,p?
pAb2DrN-'[p&G=4OKGWg!!&JdXT5?t!!="5Xcg$kJcLB&JcLB&JcLB&JcN(V";e&<X+941!.OmI!/p[R
r;[';NN9*b!!&DbWrT!n!!=%3X,ieOJcLB&JcLB&JcLB&JcNjl"4u\t1#i66/H+]29D&8h;<I!C!!%->
joE3o!!<5&k#d?<JcNgkJcLB&JcLB&JcM8?"HpO7]-6PAp&G)urP&>6p](G.\\GmjrVuq-rP&?Hqu?j-
YJ7goZiG[XJcLB&JcLB&JcLB&Z2b#UXf\ZBiW&tPrN-&hqZ-Tq"B)8%X]#,u!)WTqqu?j*Suo+2SH+6A
JcLB&JcLB&JcLB&aT)HkX/i0;iW&tNrMoogp](FqVQ6arrVupqrMopuqu?^&".H9k(kr$B!65(k!.k3&
!.k3&!1Nrj.-B[Bli?_Z!0mHEpAb<s`ocCarVup!rT4+=qZ$\Kk2ruMJcLB&JcLB&JcLB&JcN+W!&snl
!-R6#!&4>c!*B'u"ooX6^V@3Zqu?_`rP&>hrW!'8Vn]uES,e-@JcLB&JcLB&JcLB&aoDDlriH0/i;`j(
r2frgqZ$d7LomeW8,N>eK)MeOFT)7@&<m6uX[7^AJcNgkJcLB&JcLB&JcM;@!%\&L!+G3op&G(>r2Tff
qZ$d7L9%AM8GiGfJGlMKF8c.B&<a)p6aHcE!.k3&!.k3&!.k3&!3uV(jo>VD!;u!V!!N?&4m(n5qZ$UN
rT4(ur;Zn+k2r-5JcLB&JcLB&JcLB&JcNpn"/<QFXPX!Y3Mubi$DE)GBp>g8^V>R6q>^MtrP&K)=-()1
!Pb[g!.k3k!.k3&!.k3&!.k3@!!A:aXd\PUo`,"EPPqTeNbppZJ"Q_B!HSSD!!&MeXTF5HH2aoGRBcgE
!.k3&!.k3&!.k3&!4)Y-N2s"GhZ*[/Oo;<`MetXZIKc4@X/g7Iq>^M_rMp-U7sM&7X-T4TJcLB&JcLB&
JcLB&JcNpn"&7q?ES^Zq?2`ml9+h4+.u*$Fiu%Rl!-\>'"?6B)i8t(&D1hn@!65(k!.k3&!.k3&!1a)i
;Z=E260eOB!!-`@pqHj(1%tYJ?M_D;^4WZjJcLB&JcLB&JcLB&JcN.X!(-[e!&NF2!E?#oXTP]-O!aT$
!)33j!,\/)JcLB&JcLB&JcLB&JcNso!(6ad!&`R4!EGrjWr\/,pAb1gqPsUr!,[>gJcNgkJcLB&JcLB&
JcM;@roWJGo)Jdl\G51d:%\M_joOHSYlK@UJcLB&JcLB&JcLB&ZiC32^V>ia!!a$?L8;8mYDN?^+S5X=
23Y#K^Sc6-R/hg=JcLB&JcLB&JcLB&b5_X8XfZm'!!s$+EKR0$T63U?oDf+FI[@%9Q!tti!.k3k!.k3&
!.k3&!.k3A!!A[jX*En0nc/t(9lQ,fX.+3$)>!n6.=IJXX--p;YQ07TJcLB&JcLB&JcLB&ZiC2Xk2mi?
!!O-<ZfZu]nGi_ABti_<#FGLC!.k3&!.k3&!.k3&!6bEGDSNrp&%hmo!.k3k!.k3&!.k3&!.k3B!!HH,
XeuQl!.k3&!.k3&!.k3&!.k3&!4;e0>H=g"$e#*-!.k3&!.k3&!.k3&!.k3p!!<>ck-_f$JcLB&`rL\k
JcLB&JcLB&T)]!&[_KRekl?;8JcLB&JcLB&JcLB&JcN4Z":1p-X\mLHJcLB&JcLB&JcLB&JcLB&bl@kP
UT:Fn])[E_JcNgkJcLB&JcLB&JcMAB"1@:R!U0T9!.k3&!.k3&!.k3&!.k3Z!!@kg^S9*UJcLB&JcLB&
JcLB&JcLB&bl@i_Xf[Yq!.k3&!65(k!.k3&!.k3&!1s5nD6'^skQ$27JcLB&JcLB&JcLB&JcN4Z!tsbY
:XK/o!.k3&!.k3&!.k3&!.k3r!!H-5^Ubo+!.k3&!65(k!.k3&!.k3&!2';p5cq/h+QrfW!.k3&!.k3&
!.k3&!.k3[!!GTgX/@,g!.k3&!.k3&!.k3&!.k3&!6kKFk2t"#!.k3&!65(k!.k3&!.k3&!20Aq)n3Ss
<9F75!.k3&!.k3&!.k3&!.k3\!!F"7XfXt;!.k3&!.k3&!.k3&!.k3&!7(WJ'r7n27(E;L!.k3k!.k3&
!.k3&!.k3D!!9gqk2lYq!.k3&!.k3&!.k3&!.k3\!!At1^O+9,JcLB&JcLB&JcLB&JcLB&cN"'.XfZ3F
!.k3&!65(k!.k3&!.k3&!20ApNN9*ljoBu5JcLB&JcLB&JcLB&JcN:\"&J(A$I8^(!.k3&!.k3&!.k3&
!.k3t!!@\b^RDV3JcLB&`rL\kJcLB&JcLB&U&Y:/Xf[<=!.k3&!.k3&!.k3&!.k3&!4`(3BWJ1dc2`Fr
JcLB&JcLB&JcLB&JcO-t!tFDT2n&d=!.k3k!.k3&!.k3&!.k3G!!>g-^TQVtJcLB&JcLB&JcLB&JcLB&
\c;gnXf\/=!.k3&!.k3&!.k3&!.k3&!7:cK4KGNN[K(mZJcNgkJcLB&JcLB&JcMMF!p8Wnj8ac3JcLB&
JcLB&JcLB&JcNC_!u//X]$(/+!.k3&!.k3&!.k3&!.k4!!!<e0XfJi0JcLB&`rL\kJcLB&JcLB&U]:K.
U8t3P!.k3&!.k3&!.k3&!.k3&!4i.3YNF0T!.k3&!.k3&!.k3&!.k3&!7CiLT>/,J[/bdYJcNgkJcLB&
JcLB&JcMSH",s@a#NGf9!.k3&!.k3&!.k3&!.k3_!!A(YWs?iKJcLB&JcLB&JcLB&JcLB&dJs><k2s#N
JcLB&`rL\kJcLB&JcLB&V#UT^^V;G]!.k3&!.k3&!.k3&!.k3&!5&:60s.Q'b5d+oJcLB&JcLB&JcLB&
JcO7""#?pX-+!Z(!.k3k!.k3&!.k3&!.k3H!<;3?!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!65(k!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3k
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!65(k!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3k!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!65(k!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!3cHR~>

%%EndBinary
grestore
np
222.47 45.129 mo
118.307 45.129 li
118.307 30.1421 li
222.47 30.1421 li
222.47 45.129 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.1134 72.212 ]ct
[104.349 0 0 15.173 31.1001 26.9899 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 1121 
/H 163 
/M[1121 0 0 -163 0 163 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 1121 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1121 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1121 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1121 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcMSH!1EGc!%%(6JcLB&JcLB&JcLB&_uPAhJcPNF!6"KT!(37VJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&pAb2]o<\KDS,e-@JcLB&JcLB&JcLB&NW9'tp<W`a!(2J@
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&JcLB&JcLf2!1EPfrj2YOL&cf*
JcLB&JcLB&JcLB&U]:D5o?RD(mf7q>JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcMSH".?O'@J(r8!.k3&!.k3&!.k3&!5nkh!.k4F!!C0cc\V6]S,e-@JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcPNF".?O'@?:J@!.k3&!.k3&!.k3&!0.$]
`6Zbcq#H!HJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&JcLB&JcLf2".?O'
@JKnT!.k3&!.k3&!.k3&!.k3H!!C0cc\UT]JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&U]:Lb['X9%!.k3&!.k3&!.k3&!5nkh!.k4F!!C0cc\RY_JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&pAb;`['X8'!.k3&!.k3&!.k3&!.k32
!!C0cc\VAsJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&NW90L
['X9;!.k3&!.k3&!.k3&!.k3&!2KSs`6ZbcirFZ2JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcMSH".?O'@H.?>!.k3&!.k3&!.k3h!.k3&!;?Hq`6ZbcO8sk4JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcPNF".?O'@?:J@!.k3&!.k3&!.k3&
!0.$]`6Zbcq#H!HJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&JcLB&JcLf2
".?O'@JKnT!.k3&!.k3&!.k3&!.k3H!!C0cc\UT]JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&U]:Lb['X9%!.k3&!.k3&!.k3&!5nkh!.k4F!!C0cc\RY_JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&pAb;`['X8'!.k3&!.k3&!.k3&
!.k32!!C0cc\VAsJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&
NW90L['X9;!.k3&!.k3&!.k3&!.k3&!2KSs`6ZbcirFZ2JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcMSH".?O'@H.?>!.k3&!.k3&!.k3h!.k3&!;?Hq`6ZbcO8sk4JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcPNF".?O'@?:J@!.k3&!.k3&
!.k3&!0.$]`6Zbcq#H!HJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&JcLB&
JcLf2".?O'@JKnT!.k3&!.k3&!.k3&!.k3H!!C0cc\UT]JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&U]:Lb['X9%!.k3&!.k3&!.k3&!5nkh!.k4F!!C0cc\RY_JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&pAb;`['X8'!.k3&!.k3&
!.k3&!.k32!!C0cc\VAsJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&
JcLB&NW90L['X9;!.k3&!.k3&!.k3&!.k3&!2KSs`6ZbcirFZ2JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMSH".?O'@H.?>!.k3&!.k3&!.k3h!.k3&!;?Hq`6ZbcO8sk4
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcPNF".?O'@?:J@!.k3&
!.k3&!.k3&!0.$]`6Zbcq#H!HJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&
JcLB&JcLf2".?O'@JKnT!.k3&!.k3&!.k3&!.k3H!!C0cc\UT]JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&U]:Lb['X9%!.k3&!.k3&!.k3&!5nkh!.k4F!!C0cc\RY_
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&pAb;`['X8'!.k3&
!.k3&!.k3&!.k32!!C0cc\VAsJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&
JcLB&JcLB&NW90L['X9;!.k3&!.k3&!.k3&!.k3&!2KSs`6ZbcirFZ2JcLB&JcLB&JcN^hJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMSH".?O'@H.?>!.k3&!.k3&!.k3h!.k3&!;?Hq`6Zbc
O8sk4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcPNF".?O'@?:J@
!.k3&!.k3&!.k3&!0.$]`6Zbcq#H!HJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&
JcLB&JcLB&JcLf2".?O'@JKnT!.k3&!.k3&!.k3&!.k3H!!C0cc\UT]JcLB&JcLB&JcLB&_uPAhJcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&U]:Lb['X9%!.k3&!.k3&!.k3&!5nkh!.k4F!!C0c
c\RY_JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&pAb;`['X8'
!.k3&!.k3&!.k3&!.k32!!C0cc\VAsJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&JcLB&
JcLB&JcLB&JcLB&NW90L['X9;!.k3&!.k3&!.k3&!.k3&!2KSs`6ZbcirFZ2JcLB&JcLB&JcN^hJcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMSH".?O'@H.?>!.k3&!.k3&!.k3h!.k3&!;?Hq
`6ZbcO8sk4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcPNF".?O'
@?:J@!.k3&!.k3&!.k3&!0.$]`6Zbcq#H!HJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcLB&
JcLB&JcLB&JcLB&JcLf2".?O'@JKnT!.k3&!.k3&!.k3&!.k3H!!C0cc\UT]JcLB&JcLB&JcLB&_uPAh
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&U]:Lb['X9%!.k3&!.k3&!.k3&!5nkh!.k4F
!!C0cc\RY_JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&pAb;`
['X8'!.k3&!.k3&!.k3&!.k32!!C0cc\VAsJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&
JcLB&JcLB&JcLB&JcLB&NW90L['X9;!.k3&!.k3&!.k3&!.k3&!2KSs`6ZbcirFZ2JcLB&JcLB&JcN^h
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMSH".?O'@H.?>!.k3&!.k3&!.k3h!.k3&
!;?Hq`6ZbcO8sk4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcPNF
".?O'@?:J@!.k3&!.k3&!.k3&!0.$]`6Zbcq#H!HJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAh
JcLB&JcLB&JcLB&JcLB&JcLf2".?O'@JKnT!.k3&!.k3&!.k3&!.k3H!!C0cc\UT]JcLB&JcLB&JcLB&
_uPAhJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&U]:Lb['X9%!.k3&!.k3&!.k3&!5nkh
!.k4F!!C0cc\RY_JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&
pAb;`['X8'!.k3&!.k3&!.k3&!.k32!!C0cc\VAsJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^h
JcLB&JcLB&JcLB&JcLB&JcLB&NW90L['X9;!.k3&!.k3&!.k3&!.k3&!2KSs`6ZbcirFZ2JcLB&JcLB&
JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMSH".?O'@H.?>!.k3&!.k3&!.k3h
!.k3&!;?Hq`6ZbcO8sk4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAh
JcPNF".?O'@?:J@!.k3&!.k3&!.k3&!0.$]`6Zbcq#H!HJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
_uPAhJcLB&JcLB&JcLB&JcLB&JcLf2".?O'@JKnT!.k3&!.k3&!.k3&!.k3H!!C0cc\UT]JcLB&JcLB&
JcLB&_uPAhJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&U]:Lb['X9%!.k3&!.k3&!.k3&
!5nkh!.k4F!!C0cc\RY_JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^h
JcLB&pAb;`['X8'!.k3&!.k3&!.k3&!.k32!!C0cc\VAsJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&NW90L['X9;!.k3&!.k3&!.k3&!.k3&!2KSs`6ZbcirFZ2JcLB&
JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMSH".?O'@H.?>!.k3&!.k3&
!.k3h!.k3&!;?Hq`6ZbcO8sk4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
_uPAhJcP`L"Tg#CC585VZiQL;OT9t5JcLB&JcLB&JcLB&PQ2$k-:_ToNQf_p[3GGIJcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&QN.*h5a0:eap5Ve[):&)LH,54JcLB&
JcLB&JcLH(!?_Pt!.k3Q!!<6dLUd8m#L1T@agnd+2s10m!.k3&!.k3&!1Elg3t(?S_uPAhJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&Y5eV->/C$W"22(K_u7^Y\PDAhJcLB&JcLB&JcM5>"d"jd
6QcR$!5nkh!.t7O"9DT/q7-UPcd0`3\H/a)Q2lL:JcLB&JcLB&m/R='^R](#$_.3K!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!5nkh!/(=Q5J?g6"22(K_u%RWZSRsKJcLB&JcLB&JcP0<!0I,@"*$[N
"eYjI!1Elg5-FXj"3o0<anrULV)!W&JcLB&JcLB&KE)%d^\tnLSS:.nM?&5.JcLB&JcLB&JcLB&JcN^h
JcLB&JcLB&JcLB&JcLB&JcLB&RfEG7ou[BM['[aHaoGt)!.k3&!.k3&!/(=QOHK@$"*$[N"c`S7!3lM(
EV6jEc-O_Xq7-K4li;V;JcLB&JcLB&RK*?$pqHp%Bfcdu!5nkh!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!4)Y+&#Aj?"22(K_t_@TMurDIJcLB&JcLB&JcM5>!0Hi8"*$[N"oA;<!.k3+!!*Rr
rjhd6"3o0<anWCIJH;5?JcLB&JcLB&JcP0<!58$>".a-f%B'8Y!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!5nkh!/LUU&[D;WpW<TO['[aFaoRt5S,e-@JcLB&JcLB&m/R-Jn<!fm6QcQ6!.k3B!!*Y+
o=4tJcd0`/\HBCQNrk%9JcLB&JcLB&KE)%d^[]&@SS:.pQ2lL:JcLB&JcLB&JcLB&JcN^hJcLB&JcLB&
JcLB&JcLB&JcLB&T)\lqWq+:7]sP/aq9&]Z!0;j7JcLB&JcLB&KE)%7OmS85EC1iPRK.p>[/^41Sas;n
c-O_Xp:10Vmf7q>JcLB&JcLB&RK*?$m(WRlB`U:)`W1SjJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&[/^2]n]CsI['[aDaoH/F!.k3&!.k3&!.k3>!!&,GOTgl0E^LrQaoI"nM#[O&qmlI3"3o0<
an<1EA"<UO!.k3&!.k3&!:9ad^$*35SS:.pZiG[XJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
_uPAhM?!WNqTAQT"22(K_t;(O31^,%!.k3&!.k3&!:9adOQ;N+E^LrQ\,_*\TE"sbn@8YGcd0`/\bru<
2i%Hc!.k3&!.k3(!!0dJjhCngBfccu!.k3&!.k3&!.k3&!.k3&!5nkh!.k3&!.k3&!.k3&!.k3&!.k3E
!!*_RnB(jH['[aHb5BB_\,hEdJcLB&JcLB&KE)%7OlDK+P/E,L&>fGZ!4Mq/&\%8?"3o0<an3+DWpp(@
!.k3&!.k3&!1Elf^$<B,^B=)@Bc#1tJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN7[
!-[hR"22(K_t2"N<q66B!.k3&!.k3&!1ElfOQqu'OT:RC]E>Eq9+]YSJcL]/!,_PBpULCNcd0`)\H#R#
!.k3&!.k3&!.k4<!!'^j^]!9siOrqA^]8rdJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAh
MuWhlpr`?R"22(K_t2"O^]L//JcLB&JcLB&JcP0<!0H0%!0[/j"0m\U&B"R#!29Gn'CNC5c-O_Xq76C5
!O2Z_!.k3&!.k3&!/(=Q]t`O@q;qe<]kJ:c!.k3&!.k3&!.k3&!.k3&!5nkh!.k3&!.k3&!.k3&!.k3&
!.k3F!!$<maof>a[);^^qT8e*M?&5.JcLB&JcLH(!K`H'OT:R;]E>Eq9+\B/JcN:\!*Sa#"3o0<amutB
61Y).!.k3&!.k3&!1Elf^$<B,^\-^kiOrqAh>i--JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&\,ZN:m`GXF['[aAaoJO7-\<^t-\<^t-\<_7-NT[&l]Lt)!0Zlb"0m\U&E3\A!/pmXVtdgs\HC+&
ccPag!2Z>WJjk8[Jjk8[Jjo&q!QN(:^[^FgiOrqAbQ*4pJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&_uPAhN;rqtpWE6Q"22(K_stkLQ(a=lOb/^IOb/^IOmS85X/r7ijH0G*mCWP+M+\E,!.k3G!!!u*
\HC+&ccQ!nq7-L>MnakYK"loPK"luRs3:Yia5ar%joaSUBc">\JcLB&JcLB&JcLB&JcLB&_uPAhJcLB&
JcLB&JcLB&JcLB&JcMPG!(ZG!"22(K_thINaoJ8rOb/^IOb/^IObAhtX/lB(XJ+a<!0ZTZ"0m\U&AA-r
!4`(07I@Vfc-O_Xn[SY4oY6!mK"loPK"loPR_SgH!6X`EpV5tT"6$q-([;!P!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!3-#!#MKZ>%_3&LJF1J]]sP/an]Cj<oTb#nJsCqQJsCqQR[*fP!28kHpltlG
^#ls0Z&)*bmK!1c!!J&aN=#Z1pUU%/"3o0<amlnA]qN;p_LfXV_LfXV_X55<cN),M_?%R;k2ld)]kJ;J
!!!/k$A&V[$K(o9!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!5nj>!!!1LL8U$/!71D^pW<TO['[a@
aoKPW]RmeJ]RmeJ]Rmf`]E#A;[K*r%]E6?u^>up/Z&)*bn,NIkB()":Q(sTE`9k);c-O_Xq76=3!6U5^
K'%[IK'%[IK]`<brm_#"jlQX:n)rco"6$q-([qD*"(p5LJs*[-aoI"nJcLB&JcLB&JcN^hrVup*L1-'M
p&K[EJcLB&JcLB&JcM):!.XF7Ju>BA!6jiQ"22(K_thIMb)<oa]RmeJ]RmeL]E,FKrO)^;k.Cc?c,ehU
"0m\U&G,r&C"S]&Q+<.[^?rH5c-O_Xn[SY=o]CbfK'%[IK'%[IRcaLt!8m;.pZ;PLo^Lf$"6$q-(\Rh1
!!$_eP)YXu!.k3&!.k3&!.k3&!1!Tb%dmbW@A@8h!.k3&!.k3&!.k3&!3Q>%&(d_2Vn&]*bO*FS]sP/a
nB1C9K"Q]JK"Q]JK"RPb!4Da5!4hU3pUpLM!5I@&"0m\U&GcD,$\Xe)PlSGj\bEW:c-O_Xn[SY:U#psh
K'%[IK'%[ImH4;r!8Q`!rq$3Sh<"gu]kJ;Z!<3GoP(JjlP2H=l!.k3&!.k3&!.k3P!7tY2@C]gh!.k3&
!.k3&!.k3&!5nm;(PJ]GVtS:-aof>a[);FV!6LqIK"Q]JK"Q]JK"UK`!4Da5!4h7)rlkGYgq3a!RpIrK
!<3]!Q%G9rPlSD_\HC+&ccQ!nq7-LAMroWRK'%[IK'%aKs4.(u!8Q`!rq$3Tgu\_#c%J[c!<3\`P(Jk-
P0*cV!.k3&!.k3&!.k3h!<3%P@?"^h!.k3&!.k3&!.k3&!1!TbQgUc'Vk^-ibjEOT]sP/aq9&KTMnFYS
K"Q]JK"QcL!O]B7[K*l#]E6@&bhp&8\=6eJo`+uDfTh&R\Wm0.mC<>Dcd0`'\H'P>k(;`Ik(;`Ik(;`a
k53[/hXK\%joY2IoAA[4jirH4pAb6p!.]cdNKWu8JcLB&JcLB&JcLB&Q2gn>mU:]UULE'\JcLB&JcLB&
JcLB&X8i8RU"Q>qVn&]*c0`XU]sP/an]CjRoXodgK"Q]JK"Q]JR_/X.r3cU;n@\M.!mT!+j1GK(RpI90
!!<3$,E@MDNKjL\pUU%/"3o0<amlnAa._XIk(;`Ik(;`Ik3_=.eH"XljoY2IlJgq-c%Ie@!!+@'mui9c
UQXO8JcLB&JcLB&JcLB&WrN,mfjTJ@\REV\JcLB&JcLB&JcLB&_uTc:!=;)J9T;^GX7sd2aof>a[);FV
!5,#"JtdjkJtdjkJthY,r3-1&je;dm^#ls0\=6eJli7%j2"3Y[4ek.?U$]Amc-O_Xq76=3!5j`?K$Jtn
K$JtnK[0VFrR'`P!UAk0joWe\0^Jc?"ub1!Jj-_/aoI"nJcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&
JcLB&UAt9pmE,OE['[aHb5'0[WJcmjOb/^IOb/^KOTDMa"0AT$P3.l,P3BO\\=$YH^Aric\GuV.mC<>D
cd0`'\H';7^Oj4P^Oj4P^Oj4h^\uFYc+re_pV5nR!mH<OlMuM:JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&\GuUZmE,OE['[a@aoIn&Ob/^IOb/^IOb/^aOT__dXJD'JOnb%=P3fg`\=$YHk5^)6
N;rr.pUU%/"3o0<amlnA^7i;n^Oj4P^Oj4P^[8f8c2l,(jM1$C!mH<Od/\auJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&_uPAhMuWjrpr`?R"22(K_t(qM]qAY_?%Q@6?%Q@6?0to!US+"7OT:R6]E>[3
?6RPnJcMMF!4;1)"3o0<an`LD\H'!oKn>#1Kn>#1KnP-\bK0b&ikOsE!mH<O[fD![JcLB&JcLB&JcLB&
JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&U&Y1?m`GXF['[aHb506\>`&N5!.k3&!.k3(!!/1DifO5(oXk:9
R9h&C!.k3\!!%*.\HC+&ccPag!*JgmJcLB&JcLB&JcM5>!57[4pV6=^!mH<OhZ/6.JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&\,ZLYm`GXF['[aAaoE4K!.k3&!.k3&!.k3>!!&,GOnb%=P5)Zl
\=$YHgAlg*MuWi-ppp.0"3o0<amutB'qbPY!.k3&!.k3&!:9ad^#6["joWb[0Z=$D!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!5nkh!/ggWT_Zb)aof>a[);LX!.CI>JcLB&JcLB&JcP0<!0H0%!0[8m
"1Xb*+i+/1!20AmPOH$ac-O_Xq76C5!-F%tJcLB&JcLB&KE)%d^Yus)joWb[0WP2*!.k3&!.k3&!.k3&
!.k3h!.k3&!.k3&!.k3&!.k3&!.k3&!20Am0(6pb]sP/aq9&TW!#g[oJcLB&JcLB&KE)%7OlDK,P.\;m
?6Q3HJcN7[!&!`N"3o0<an*%C)Y*l[!.k3&!.k3&!1Elf^$<B,^BE]]b_.\!!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3Z!!%?7aof>a[);OY!+#*pJcLB&JcLB&JcM5>!0HK.qN1l2;CWj9
!.k3.!!%$8\bEW:c-O_XoXOs)ScF?BJcLB&JcLB&m/R."j1b]!GXsO!!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3h!.k3.!!*>6qo\ZU"22(K_tD.PUR_C:!.k3&!.k3&!:9adOQV`.JPms*[/bdY
TE"usWU[M$c-O_Xq76I7!1&B?JcLB&JcLB&KE)%d^Z`E7Y'<JVT)aHCJcLB&JcLB&JcLB&JcN^hJcLB&
JcLB&JcLB&JcLB&JcLB&T)\j=n]CsI['[aHb5TNa^(uJ(JcLB&JcLB&KE)%7OmJ24JPms*RfJ$?[/^1S
n[SbHcd0`,\H/lKn,S%?JcLB&JcLB&RK*?$lb<G&!dI6U`rL\kJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&ZiC(do#_'J['[aFaoTL0mf7q>JcLB&JcLB&RK*>Lmu[a(;CW%S_uPAhL]@E7r42R4
"3o0<anN=H[O7RFJcLB&JcLB&JcP0<!57j9"0Ql>*3B3m!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!5nkh!/COS3W7+paof>a[);[]!Pp4S!.k3&!.k3&!.k4<!!&,POTU/4.LW3UJcM>A!''S\"3o0<
an`IK\ZmT;!.k3&!.k3&!/(=Q]ta3S"0Ql>*0UAS!.k3&!.k3&!.k3&!.k3h!.k3&!.k3&!.k3&!.k3&
!.k3&!6"p@&1TRU!Sm_V.Co,o"22(K_thFUX;Z`lJcLB&JcLB&KE)%7Onb%@J5Rj)NrXb3gAh<a+=\&[
!!+OLosk1Lcd0`/\H/?Am/V_<JcLB&JcLB&RK*?$pV-g4GXrhL!5nkh!3ZA)$m@)6fDpL'JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&i;`ug9UW2tqnE6CYAaa)!!*L[p<!KN['[aIaoH;E!.k3&!.k3&
!.k3>!!&,XOTU,3.LYkK_uPAh[/^=84bKK0qlKt"Sm2EV!!3OQ\bEW:c-O_XqRHT=QiM^<JcLB&JcLB&
m/R."qnE68GXrgJ!.k3o!!EQkJtJt<Wro2f>m/1JJcLB&JcLB&JcLB&JcLB&hZ*a8REt!njoa\]KESLZ
JcLB&JcLB&JcLB&_uPAh\,ZRdHDgAL!k*OkhuEa8!3>n;"22(K_u.XXRjj[(JcLB&JcLB&JcP0<#*=t0
J5Rj)SH+6Ac2[nnAX2kh!iTcChuEd8T(ohuc-O_Xr4)li.0+r"JcLB&JcLB&KE)%d^BD<RGXrg0!.k43
!!4Q[P4P^UUhC:F!.k3&!.k3&!.k3&!5nkh!4Mq/$=WPg!P/`s!.k3&!.k3&!.k3&!.k3&!71]H:SmKo
!Ou=j!!+p:qT9)W['[`nb/]#^rW%NMJcLB&JcLB&KE)$N.KBj/!.k45!!,<Jm]?Mh8DaCJ1P5J6#gL]A
agnsjG:MeVJcLB&JcLB&JcM5>!dI6Uli=s(JcN@^!C2b7Wr]%ghuJ?/JcLB&JcLB&JcLB&JcO*s!*emR
!5chXJcLB&JcLB&JcLB&JcLB&kPtWh[-GC+N8=OD#rlXl]?/4/['[)J0a$P<JcLB&JcLB&JcLB&_uPAh
]Dqt*V!>&^GMrQ$!"B2mA!=%)\]rIH_HnquP5p17JcLB&JcLB&JcLB&dJs;BU$AZYFisc:!.k3&!.k3&
!.k3&!.k46!!&k\jo?F0!.k3&!.k3&!.k3&!5nkh!5/@40'BtLVW%UN!!EOr['X8'!.k3&!.k3&!.k3&
!.k4"!!"8,XT4R<!!EMFcd.FC!.k3&!.k3&!.k3&!.k3&!9jI`,j23.OgY7A!.k3&!.k3&!.k3h!.k3`
!9`JE?/bj9!.k3&!.k3&!.k3&!.k4"!!"#2^B2'TZM)$5J(Xf(RC'>0q#H!HJcLB&JcLB&JcLB&JcP$8
!#>..!j&2lp8n=/f`2,mcd.F-!.k3&!.k3&!.k3&!5nkh!5/@4(%eO.WM-!YWrQko!.k3&!.k3&!.k3&
!.k3&!7Cl>joX26SG)(F%a>!*!.k3&!.k3&!.k3&!.k48!!!K(^BC]Y0bsfh!!<EgGJ<mf!'/a5".?O'
@H.?>!.k3&!.k3&!.k3h!.k3a!!!?$XTP+u-5$1V!X(/dpoONJj8eoS"2rO3Ll_Ug!.k3&!.k3&!.k3&
!7LoJ$2LV(R9V*Or;Zp&0Oq-YWrO`s!.k3&!.k3&!.k3&!.k3&!9aFYjoKl4q#CF#htcED!.k3&!.k3&
!.k3&!5nkh!5&:3^AYeJYB_;b!!,*eqS*'=&*3fc!!AXrZsf$rJcLB&JcLB&JcLB&JcO4!r2g$mA/Y(@
!A1/EXT>7+gAh>ocd.FC!.k3&!.k3&!.k3&!.k3&!9aF\Wrec$)YO.3/Y`*B!MTt4!.k3&!.k3&!.k3&
!5nkh!5&:3ir/!?L'dJP!35nX!3G5]JcLB&JcLB&JcLB&JcLB&dJsE\^V@0_nc/\$VY\%-PhQ0?RC'>0
q#H!HJcLB&JcLB&JcLB&JcP!7"KJT+VG-O\!=P+fXT3n+!!C0cc\UT]JcLB&JcLB&JcLB&_uPAh]Dr)3
X/hsinc/[uOnu*YIcUQ]!.k3&!.k3&!.k3&!.k4!!!C7'k-+7S!+#H`!%cFrJcLB&JcLB&JcLB&JcLB&
kPt[i^PM=Y!&48a!P/Tm!!AXrZshtpJcLB&JcLB&JcLB&_uPAh]Dr#-X`Nq2!%%KD!NQFe!;?Hq`6Zbc
O8sk4JcLB&JcLB&JcLB&dJs?AX)dY/!%.QC!N-.K!.k3&!.k3&!.k3&!.k3&!9aCaSE:[V!;bgXcaa%-
!.k3&!.k3&!.k3h!.k3`!!/Srm/R-SqS*#>joG,U".?O'@?:J@!.k3&!.k3&!.k3&!7CiJLBd,G!/(-M
!)VGN"2rO3M"q%&!.k3&!.k3&!.k3&!.k47!!.cXm/R-<qPsTn\c@<^JcLB&JcLB&JcN^hJcNF`!'BNI
!&XQ7!!23^JcLB&JcLB&JcLB&JcLB&]DqpcqS*$,g].GE['X9;!.k3&!.k3&!.k3&!.k3&!7CiI-2O_D
P2$$>`6ZbcirFZ2JcLB&JcLB&JcN^hJcMYJ!%.QC!0?7BJcLB&JcLB&JcLB&JcLB&])_]i!*ISJJcLB&
JcLB&JcLB&JcLB&d/X0EqS*"?h#IPF['X9%!.k3&!.k3&!.k3&!5nkh!2TYqQ27T_$KhE`!!C0cc\RY_
JcLB&JcLB&JcLB&JcNC_!0[2Z!".*RJcLB&JcLB&JcLB&JcLB&d/X/TqW>?hJcLB&JcLB&JcLB&_uPAh
V#ULWqS*"hk5b5V".?O'@?:J@!.k3&!.k3&!.k3&!4r42HhsiE/):1-`6Zbcq#H!HJcLB&JcLB&JcLB&
JcO0u!.+LB!%YY]JcLB&JcLB&JcLB&_uPAhV#UK@qW?o?JcLB&JcLB&JcLB&JcLB&])VhMqS*#Ah#IPF
['X9;!.k3&!.k3&!.k3&!.k3&!7:cH>PbH%;V_<T`6ZbcirFZ2JcLB&JcLB&JcN^hJcMVI!*oB$!)r%\
JcLB&JcLB&JcLB&JcLB&])Vg5qW7bYd/\auJcLB&JcLB&JcLB&JcO0u!'g=p!/]M3".?O'@H.?>!.k3&
!.k3&!.k3h!.k3I!!"bMXT3J+!;?Hq`6ZbcO8sk4JcLB&JcLB&JcLB&])VgdqPsU;d/\auJcLB&JcLB&
JcLB&JcO-tqW7br])[E_JcLB&JcLB&JcN^hJcMVI!"f"A!2ScXpAb;`['X8'!.k3&!.k3&!.k3&!.k3_
!!!H(XT4L>!!C0cc\VAsJcLB&JcLB&JcLB&JcLB&d/X.TqPsUV])[E_JcLB&JcLB&JcN^hJcMSHqW7cX
k5^)6JcLB&JcLB&JcLB&JcN@^qS*$5h#IPF['X9;!.k3&!.k3&!.k3&!.k3&!71`BXT4pJ!!C0cc\UT]
JcLB&JcLB&JcLB&_uPAhU]C7l!1E!MJcLB&JcLB&JcLB&JcLB&\cDTh!.E5pJcLB&JcLB&JcLB&JcLB&
ciEpW!3Y,X".?O'@H.?>!.k3&!.k3&!.k3h!.k3H!;`etS`^"I!!C0cc\RY_JcLB&JcLB&JcLB&JcN@^
qPsUad/\auJcLB&JcLB&JcLB&JcO-tqW7d+])[E_JcLB&JcLB&JcN^hJcMSHqS*$5k5b5V".?O'@?:J@
!.k3&!.k3&!.k3&!4i1,XT4pJ!!C0cc\VAsJcLB&JcLB&JcLB&JcLB&ciEpC!1CG!JcLB&JcLB&JcLB&
_uPAhU]C8R!.F#1JcLB&JcLB&JcLB&JcLB&\cDTA!3Y,X".?O'@JKnT!.k3&!.k3&!.k3&!.k3t!;`et
S_X8J`6ZbcirFZ2JcLB&JcLB&JcN^hJcMSHqPsUak5^)6JcLB&JcLB&JcLB&JcN@^qW7d+d/\auJcLB&
JcLB&JcLB&JcOI(#Rs!tBmY`'TW%_%!3Y,X".?O'@H.?>!.k3&!.k3&!.k3h!.k3Q!!ilc6WI`@JW5ul
XT4pT!;?Hq`6ZbcO8sk4JcLB&JcLB&JcLB&_Z0rK1.52UFF]75qPsUad/\auJcLB&JcLB&JcLB&JcO@%
"Tf#M01][NjoBhA!.k3&!.k3&!.k3&!5nkh!3uS-+'"&n\adE7Y3,fZ!!AXrZsf$rJcLB&JcLB&JcLB&
JcNjl";aIFPcF8U!1hpG"2rO3M"q%&!.k3&!.k3&!.k3&!.k4-!!F--E0@*gWrSR"!.k3&!.k3&!.k3&
!5nkh!3cG)'jo&PjoBhm!.k3&!.k3&!.k3&!.k3&!6Y?D7?tOP^AtFm!!AXrZsib1JcLB&JcLB&JcLB&
JcLB&i;`p<J?8+>!1hpG"2rO3LuSJe!.k3&!.k3&!.k3h!.k3Y!!501WU-YcRHFR%!.k3&!.k3&!.k3&
!.k3n!!+_)m,e:rd/\auJcLB&JcLB&JcLB&JcOj3!aM5-l+[5$h#IPF['X9%!.k3&!.k3&!.k3&!5nkh
!4W"18qsG3XT4pT!;?Hq`6ZbcO8sk4JcLB&JcLB&JcLB&c2[o>KW44:!1D47JcLB&JcLB&JcLB&JcLB&
irB*>f]hMuICfK2!.k3&!.k3&!.k3h!.k3^!!-*'k.^o!k5b5V".?O'@?:J@!.k3&!.k3&!.k3&!71]H
7%WPC!1hpG"2rO3M"q%&!.k3&!.k3&!.k3&!.k45!!,NXk,SKM])[E_JcLB&JcLB&JcN^hJcN=]!/0Ls
!.F#1JcLB&JcLB&JcLB&JcLB&dJs;1V"28)]!A2uJ7_7H^AtFm!!AXrZsib1JcLB&JcLB&JcLB&JcLB&
kPtW9On,UYX.kf.C/[(fXT4pJ!!C0cc\UT]JcLB&JcLB&JcLB&_uPAh]DqscNq04TVk9*$C/d4iWrSRN
!.k3&!.k3&!.k3&!.k3&!7:cH<V#8Vd?e,k%KQS+joBhW!.k3&!.k3&!.k3&!.k3&!9jI`GkSlT[A/@U
-M[Z<^AtFm!!AXrZshtpJcLB&JcLB&JcLB&_uPAh]`8%Bp8nIpODRH-q#L8n!1i9QpAb<6cd.E/!.k3&
!.k3&!.k3&!.k4"!!$O&Ws#/VD+>ZC!;`_rRF)"d!.k3&!.k3&!.k3&!.k48!!!;ujoV_`'))D&joBhA
!.k3&!.k3&!.k3&!5nkh!58F57JOV!\r8-2!;aG1Y3,fZ!!AXrZsf$rJcLB&JcLB&JcLB&JcO:#!&s\T
!ipMfoDn`i!1hpG"2rO3M"q%&!.k3&!.k3&!.k3&!.k49!!#"RWrf2A+nPd2WrSR"!.k3&!.k3&!.k3&
!5nkh!5/C-joNjMo)SXL!.F#1JcLB&JcLB&JcLB&JcLB&eGoUf[ed`?ZuciL!;aG1Y2''[RC'>0q#H!H
JcLB&JcLB&JcLB&JcP*:!>DF.XTG>,$h=;oXT4pJ!!C0cc\UT]JcLB&JcLB&JcLB&_uPAh^An9JV#%+n
U0nB"!;`_rRHFR%!.k3&!.k3&!.k3&!.k4#!!'V,joMIdnGrFJ!.E5pJcLB&JcLB&JcLB&JcLB&lMpp\
qS*'/([qG$^AtFm!!AXrZshtpJcLB&JcLB&JcLB&_uPAh^An7rqQ0d_'(>ntXT4pT!;?Hq`6ZbcO8sk4
JcLB&JcLB&JcLB&eGoT1qPsX['(>ntWrSR8!.k3&!.k3&!.k3&!.k3&!:'Ub=8M%Z?ge!kjoBhA!.k3&
!.k3&!.k3&!5nkh!5AL6]_fGDNpZoD^AtG"!;?HqRC'>0O8sk4JcLB&JcLB&JcLB&eGoTNqlKjCmK!*c
!1hpG"2rO3M"q%&!.k3&!.k3&!.k3&!.k4:!!'"qWrRA3!;`_rRC`HN!.k3&!.k3&!.k3h!.k3c!!([K
jo?Ol!;bgXIHLT^!.k3&!.k3&!.k3&!.k4%!!"JE^Ani5!;aG1Y2''[RC'>0q#H!HJcLB&JcLB&JcLB&
JcP-;!$;!=!"A8qqQ0agh#IPqcd.F-!.k3&!.k3&!.k3&!5nkh!5JR7+Sr,=%.4,lWrSRN!.k3&!.k3&
!.k3&!.k3&!7_)HjoFK0!;bgXIF/%H!.k3&!.k3&!.k3&!.k4;!!$F(^AtD(!!"_L^AtFm!!AXrZshtp
JcLB&JcLB&JcLB&_uPAh^]4@0qlKjgmJm55qQ0agk5b5V"2rO3Ll_Ug!.k3&!.k3&!.k3&!7h,M:]%0m
RI1%T-MjbCRF)"d!.k3&!.k3&!.k3&!.k4:!;kmYGjPM-joBhA!.k3&!.k3&!.k3&!5nkh!5JR7IJ^bZ
P3r;MC\kdGY3,fZ!!AXrZsf$rJcLB&JcLB&JcLB&JcO@%!,283!.F88!*B$!!1hpG"2rO3M"q%&!.k3&
!.k3&!.k3&!.k4;!!$^0WrRP8!!$0uWrSR"!.k3&!.k3&!.k3&!5nkh!5JR7%/]/e...'8!rD$ZIHLT^
!.k3&!.k3&!.k3&!.k4%!!$7#^At_1!!&kl^AtFm!!AXrZsib1JcLB&JcLB&JcLB&JcLB&li7#WqlKjr
mJm6MqQ0agh#IPqcd.F-!.k3&!.k3&!.k3&!5nkh!5JR79)GXhU[A*^O8>mWRHFR%!.k3&!.k3&!.k3&
!.k4$!;kmYZgIen=Sh.[IF/%H!.k3&!.k3&!.k3&!.k4;!!#+W^Ap.\!!#"S^AtFm!!AXrZshtpJcLB&
JcLB&JcLB&_uPAh^]4?eqQ0`Hn,NG>q5jXfk5b5V"2rO3Ll_Ug!.k3&!.k3&!.k3&!7h,M0)DUK.I[<;
/GZ=HRF)"d!.k3&!.k3&!.k3&!.k4:!;bjG!;YaWICfK2!.k3&!.k3&!.k3h!.k3d!!"):^B(VQnc/\+
Vtn(-Y3,fZ!!AXrZsf$rJcLB&JcLB&JcLB&JcO@%!#GF5!MU(p!!*[rq5jXfh#IPqcd.FC!.k3&!.k3&
!.k3&!.k3&!:0[c(](05T+:Dl!>1LjWrSR"!.k3&!.k3&!.k3&!5nkh!5AO1joCb;!!$C%joBhm!.k3&
!.k3&!.k3&!.k3&!7h,N"M4HE!3>\k!E$E&^AtFm!!AXrZsib1JcLB&JcLB&JcLB&JcLB&li7%gX88pu
RI^CZ6)jX]!1hpG"2rO3LuSJe!.k3&!.k3&!.k3h!.k3d!!*2"qPsU_o)JeXV>.(kRHFR%!.k3&!.k3&
!.k3&!.k4$!!(@AjoB>j!!'t4joBhW!.k3&!.k3&!.k3&!.k3&!:'UbJ,-h\[=B@p!!3OHYP,^2Y2''[
RC'>0irFZ2JcLB&JcLB&JcN^hJcNOc!,;82!i9WJq#CI%>+bMj!1i9QpAb<6cd.E/!.k3&!.k3&!.k3&
!.k4$!!$a/Wrf#1)#4.5#[EkmWrSR8!.k3&!.k3&!.k3&!.k3&!:'Ub%f,5fX:Ft)!<\)MjoBhA!.k3&
!.k3&!.k3&!5nkh!5AL7$b#iF$,3@&G"PtePbkq_^AtG"!;?HqRC'>0O8sk4JcLB&JcLB&JcLB&eGoUU
W;!D"Q%*7)8SEX;Wq<CnS_X8J`6Zbcq#H!HJcLB&JcLB&JcLB&JcP*:!=5LqWsFo<@Q[7rIZLAuWrSR"
!.k3&!.k3&!.k3&!5nkh!58F5\G51miaXJD!!!EY=N^9u!.F#1JcLB&JcLB&JcLB&JcLB&e,TJike@,.
qnE-6h#IPF['X9;!.k3&!.k3&!.k3&!.k3&!9sOa?g+TlWr&muS_X8J`6ZbcirFZ2JcLB&JcLB&JcN^h
JcNLb!+>#k!2fXo!1E!MJcLB&JcLB&JcLB&JcLB&e,TIPkiMldqrRm,d/\auJcLB&JcLB&JcLB&JcP'9
!<KOm^B2)^Y5>s6Y2''[RC'>0irFZ2JcLB&JcLB&JcN^hJcNIa!2Jk^!j#CmqlKjhk5b5V"2rO3Ll_Ug
!.k3&!.k3&!.k3&!7LoJT^/W[W`GPbWrSR8!.k3&!.k3&!.k3&!.k3&!9jI`T'PM?gAua"joBhA!.k3&
!.k3&!.k3&!5nkh!5/@528&=k"+("JY5>s6Y3,fZ!!AXrZsf$rJcLB&JcLB&JcLB&JcO7"!@b,;XTN/8
!1j"h!1hpG"2rO3M"q%&!.k3&!.k3&!.k3&!.k48!!+OJmAg>$!!&GaWrSR"!.k3&!.k3&!.k3&!5nkh
!5&:3fC%c(isGbdIJ`.,IHLT^!.k3&!.k3&!.k3&!.k4!!!#U[^B1m.,Q7ZCY5>s6Y2''[RC'>0q#H!H
JcLB&JcLB&JcLB&JcP!7!'9VO!i^VerVuqhqlKjhh#IPqcd.F-!.k3&!.k3&!.k3&!5nkh!5&:34RfBQ
V0s?_!!&GaWrSRN!.k3&!.k3&!.k3&!.k3&!7:f9joN1Fr;ZhGqrRm,d/\auJcLB&JcLB&JcLB&JcOs6
!\&o7p:g[<O[8jEq1IK'".?O'@H.?>!.k3&!.k3&!.k3h!.k3_!!43^WV3FqWI6T"!;UKp!;?Hq`6Zbc
O8sk4JcLB&JcLB&JcLB&d/X4jEM`B0!i:6$qZ-G/d/\auJcLB&JcLB&JcLB&JcOp5!>iQFjoN1Cq>g=(
])[E_JcLB&JcLB&JcN^hJcN=]$O0@MQ)^^NN-f25.FnLn!!AXrZsf$rJcLB&JcLB&JcLB&JcO*s$NrY'
J=)OUG@jf=*m=Td`6Zbcq#H!HJcLB&JcLB&JcLB&JcOm4$Nr\(J!H.LF_4W=+K>En!.k3&!.k3&!.k3h
!.k3[!!``]CL&tA$3AWVJcLB&JcLB&JcLB&JcLB&NW90L['X9;!.k3&!.k3&!.k3&!.k3&!2KSs`6Zbc
irFZ2JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMSH".?O'@H.?>
!.k3&!.k3&!.k3h!.k3&!;?Hq`6ZbcO8sk4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&_uPAhJcPNF".?O'@?:J@!.k3&!.k3&!.k3&!0.$]`6Zbcq#H!HJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&JcLB&JcLf2".?O'@JKnT!.k3&!.k3&!.k3&!.k3H!!C0c
c\UT]JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&U]:Lb['X9%
!.k3&!.k3&!.k3&!5nkh!.k4F!!C0cc\RY_JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcN^hJcLB&pAb;`['X8'!.k3&!.k3&!.k3&!.k32!!C0cc\VAsJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&NW90L['X9;!.k3&!.k3&!.k3&!.k3&!2KSs
`6ZbcirFZ2JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMSH".?O'
@H.?>!.k3&!.k3&!.k3h!.k3&!;?Hq`6ZbcO8sk4JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&_uPAhJcPNF".?O'@J(q:!.k3&!.k3&!.k3&!.k32!!C0cc\VBarBl;>JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&JcLB&JcLf2!1EPfrj2YOL&cf*JcLB&JcLB&
JcLB&U]:D5o?RD(mf7q>JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcMSH!1EGc!%%(6JcLB&JcLB&JcLB&_uPAhJcPNF!6"KT!(37VJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&pAb2]o<\KDS,e-@JcLB&JcLB&JcLB&NW9'tp<W`a!(2J@
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^h
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcN^hJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&_uPAhJcLB&JcLB&JcLB&JcM/<J,~>

%%EndBinary
grestore
np
338.59 45.129 mo
234.425 45.129 li
234.425 29.6867 li
338.59 29.6867 li
338.59 45.129 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.1134 72.212 ]ct
[104.352 0 0 15.6294 147.218 26.9894 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 1115 
/H 167 
/M[1115 0 0 -167 0 167 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 1115 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1115 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1115 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1115 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&ec::%JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO@%JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&ec::%JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcO@%JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&ec::%JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcO@%JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&ec::%JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO@%JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&ec::%JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO@%JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcN"T!1EGc!%$Y*JcLB&JcOd1"$OE60;SZ#!.k4%!.k3&!;?Hn`:M:T6_"..!.k3N!!=mVXX)^&JcLB&
JcLB&JcLB&JcLB&`W-)pX/dP_!.k3&!.k3&!.k3&!.k3&!9!qXk+i!/!.k4%!.k3&!;?HnRIdcc-(Fse
!.k3M!!Ae,^C&ftJcLB&JcLB&PQ1^%o?RJ*!!%TNJcLB&`;g!rXfViF!.k3&!.k3&!.k3&!.k3&!9!n[
L9%?[V>u2JJcO@%JcLB&JcLB&JcMbM!^5].h#N$,JcLB&JcM#8!1EGc![RgHJcLB&JcNai!tMWO]#"H!
!.k3&!.k3T!!'t/cN$>m!.k3&!.k40!!<S&XfJ<!JcLB&ec::%JcLB&JcLB&W;m#-T<"mH!.k3&!.k3&
!.k3&!.k3&!5nj=RHDi4!.k3&!.k3&!3cG*RC'>0od/VuJcLB&JcO^/"$F<4Y,;8O!.k4%!.k3&!;?Hq
`6Zbcog>5LJcLB&VuQoPXf\/O!.k3&!.k3&!.k3&!.k3&!5nj>0<;.A_Z58gJcLB&JcLB&JcLB&JcO[.
!oi?jVZ;;KJcO@%JcLB&pAb;`['X8'!.k3&!2ff!DSNrThuJ?/JcLB&JcM#8"2rO3M":Uu!.k3&!5ed=
=fnf[_uPAhJcLB&JcLB&JcLB&JcO[."'_h,K;\d%!.k4%!.k3&!.k3&!.k3K!!<>cju;2uJcLB&JcLB&
PQ1fR['X95!.k3&!.k3f!!AJ#^O*p"JcLB&JcLB&YQ+dDcd.F!!.k3&!.k4-!!@_QX_+O4JcLB&ec::%
JcLB&JcLB&V>p^IX/fjk!.k3&!.k3&!.k3&!.k3&!5\^</*>t$`;kJiJcLB&JcN"T".?O'@FkL2!.k3&
!8[\Y"KfGR<2oqM!.k4%!.k3&!;?Hq`6ZbcO8sk4JcMYJ"9P*qX[D(JJcLB&JcLB&JcLB&JcLB&_>j]?
RB*AV`W1SjJcLB&JcLB&JcLB&JcOU,!da"kW;qMMJcO@%JcLB&pAb;`['X8'!.k3&!2TYu0"es1.cUM\
!.k3&!.k38!!C0cc\V/mJcLB&JcNUe"=("MX!#F_JcLB&JcLB&JcLB&JcLB&h#IR'WN2p?WrR_OJcO@%
JcLB&JcLB&JcMSH!nZS\iW+Q1JcLB&JcM#8".?O'@IjJN!.k3&!5JR:BtqEX`rL\kJcLB&JcN"T"2rO3
Lt;WY!.k3&!8IPV<NWBbWrR_OJcO@%JcLB&JcLB&JcMSH"';P(NoL+k!.k3&!.k3&!.k3&!.k3d!!<;b
k#9;#JcLB&JcLB&YQ+cn['X8n!.k3&!.k4*!!B@<^M9hMJcLB&ec::%JcPNF"2rO3Ll_Ug!.k3G!!A^m
X]FK_JcLB&JcLB&JcLB&JcLB&^AnA'X/f@D!.k3&!.k3&!.k3&!.k3&!8@JUG37ogX8mhPJcO@%JcLB&
pAb;`['X8'!.k3&!2BMs9Y\?Q)s%'O!.k3&!.k38!!C0cc\V/mJcLB&JcNOc"?ilhWYEPTJcLB&JcLB&
JcLB&JcLB&gAh@?X/i*4XT3qQJcO@%JcLB&JcLB&JcMMF!p8Xdj8ac3JcLB&JcM#8".?O'@IjJN!.k3&
!58F8T>/./aT-nmJcLB&JcN"T"2rO3Lt;WY!.k3&!87DTN3048XT3qQJcO@%JcLB&JcLB&JcMMF",X(Z
K&lua!.k3&!.k3&!.k3&!.k3b!!>^Qju(6\JcLB&JcLB&YQ+cn['X8n!.k3&!.k4)!!"hS^Aq9:!.k3&
!7h.%!.k4F!!C0cc\RY_JcLB&U&Y0@riH/gjoBu5JcLB&JcLB&JcLB&JcNLb!%@iI!(G$1JcLB&JcLB&
JcLB&JcLB&f`2*8k2rcGJcLB&ec::%JcPNF".?O'@?:J@!.k3E!!J@t^U"70!.k3&!.k3&!0dHc`6Zbc
o)O@BJcLB&]`81]Xf\B'b5d+oJcLB&JcLB&JcLB&JcOI("F7&KTa%\#JcLB&ec::%JcLB&JcLB&T`>0=
k2rH$!.k3&!.k3&!0dHcRC'>0o)O@BJcLB&]`80Q]"c"<b5d+oJcLB&JcN"T"2rO3Lt;WY!.k3&!8.>T
'<A7;G-:mt!.k4%!.k3&!.k3&!.k3E!!Et5X/gC+!.k3&!.k3&!.k3&!.k3&!5&:6dH9R2b5d+oJcLB&
JcN"T".?O'@FkL2!.k3&!8%8OHN(YZ6*L?@!.k4%!.k3&!;?Hq`6ZbcO8sk4JcMGD!+l/3!&Ng=JcLB&
JcLB&JcLB&JcLB&]DqqCri6#VbQ*4pJcLB&JcLB&JcLB&JcOF'!"/_fY5j.SJcO@%JcLB&pAb;`['X8'
!.k3&!2';p"LGkXV<@o2!.k3&!.k38!!C0cc\V/mJcLB&JcNF`"9P@#Xcgm.JcLB&JcLB&JcLB&JcLB&
fDl$UTW>,SYQ07TJcO@%JcLB&JcLB&JcMDC".nZ;=Qfa:!.k3&!.k38!!AXrZsiP+JcLB&JcNC_!-eFW
!'&4'JcLB&JcLB&YQ+dDcd.F!!.k3&!.k4&!!$O.XT0oW!.k3&!7h.%!.k3&!.k3&!1s5kA,`M//Em.d
!.k3&!.k3&!.k3&!.k3_!!!9'k0*gW!.k3&!.k3T!!AXrZshPdJcLB&JcOC&";SVb^R)2*JcLB&ec::%
JcPNF"2rO3Ll_Ug!.k3C!!En8Xf[3>!.k3&!.k3&!.k3&!.k3&!4r46&ZVn4JB\(G!.k3&!.k3&!.k3&
!.k4%!!D$=jtX+@JcLB&ec::%JcPNF".?O'@?:J@!.k3B!!JS%^V1fT!.k3&!.k3&!0dHc`6Zbco)O@B
JcLB&\c;_\riH/:c2`FrJcLB&JcLB&JcLB&JcO@%"FmJQWYi#AJcLB&ec::%JcLB&JcLB&ScAjFk2tXe
!.k3&!.k3&!0dHcRC'>0o)O@BJcLB&\c;^nrkAGcc2`FrJcLB&JcN"T"2rO3Lt;WY!.k3&!7h,M0E/'R
D6a.n!.k4%!.k3&!.k3&!.k3B!!"_PWrR#%!.k3&!.k3&!.k3&!.k3&!4`+/jo?%>!.k3&!.k3&!3cG*
RC'>0f)UC&JcLB&eGo`Q^V@8bZN,RWJcO@%JcLB&pAb<6cd.E/!.k3&!1a)mRB<Tj#3u8@!.k3&!.k3&
!.k3&!.k3]!!JXhX/-$H!.k3&!.k3&!.k3&!.k3&!7_&ODs$2tZ2fIVJcO@%JcLB&pAb;`['X8'!.k3&
!1a)iB)]OFDX.:S!.k3&!.k38!!C0cc\V/mJcLB&JcN=]!)rm!!*RVJJcLB&JcLB&JcLB&JcLB&eGoSK
ri6$'ZN,RWJcO@%JcLB&JcLB&JcM>A!!3)]!!DNeJcLB&JcLB&PQ1fR['X95!.k3&!.k3]!!EM9^V@#!
!.k3&!.k3&!3cG*`6Zbcf)UC&JcLB&eGo^TWNE:qZN,RWJcO@%JcLB&JcLB&JcM>A"9bR%X.APVJcLB&
JcLB&JcLB&JcLB&\,ZWHk2qTJ!.k3&!.k3&!3cG*RC'>0f)UC&JcLB&e,TK(rkAG2ZiG[XJcO@%JcLB&
pAb<6cd.E/!.k3&!1X#hErN0@6L4](!.k3&!.k3&!.k3&!.k3\!!%$<WrPN6!.k3&!.k3&!.k3&!.k3&
!7UuK(]NR'!.k3&!7h.%!.k4F!!AXrZsf$rJcLB&S,`O<rkAH+li;V;JcLB&JcM#8"2rO3M":Uu!.k3&
!4W"/*r`8ANR.ZW!.k3&!.k3&!.k3&!.k4#!!"/@WrS$a!.k3&!7h.%!.k3&!.k3&!1Nufjo@s=!.k3&
!.k3&!0dHcRC'>0o)O@BJcLB&[f?Q8^V@Jod/\auJcLB&JcN"T"2rO3Lt;WY!.k3&!7LoNT<55s%(-(e
!.k4%!.k3&!.k3&!.k3?!!JgmX/ZTq!.k3&!.k3&!.k3&!.k3&!4Mq1M!!jVciAXtJcLB&JcN"T".?O'
@FkL2!.k3&!7LoJMuLHkA[MMi!.k4%!.k3&!;?Hq`6ZbcO8sk4JcM8?!-\@D!)i1aJcLB&JcLB&JcLB&
JcLB&[f?DNri6#td/\auJcLB&JcLB&JcLB&JcO7"!$)"#!!0J-JcLB&ec::%JcPNF".?O'@?:J@!.k3?
!!#dn^At%r!.k3&!.k3&!0dHc`6Zbco)O@BJcLB&[f?ClriH0^d/\auJcLB&JcLB&JcLB&JcO7"!'gI`
!0+AdJcLB&ec::%JcLB&JcLB&RK3?L!)`+`JcLB&JcLB&PQ1fR['X95!.k3&!.k3[!!NM>^V@JudK"k!
JcLB&JcN"T"2rO3Lt;WY!.k3&!7LoJ"9#>%&[h[k!.k4%!.k3&!.k3&!.k3?!!NJ)X/i64mJqh=JcLB&
JcLB&JcLB&JcN4Z"6&D)im@aX!.k3&!.k3T!!AXrZshPdJcLB&JcO4!!3?+6!,K"CJcLB&ec::%JcPNF
"2rO3Ll_Ug!.k3>!!&GdXT2Gj!.k3&!.k3&!.k3&!.k3&!4Dk-QN!ob=jd;%!.k3&!.k3&!.k3&!.k4!
!!$m8jo>Ik!.k3&!7h.%!.k4F!!AXrZsf$rJcLB&RK*>9rkAH1mJqh=JcLB&JcM#8"2rO3M":Uu!.k3&
!4Dk-B`>+6PL9G_!.k3&!.k3&!.k3&!.k4!!!$^3WrS9j!.k3&!7h.%!.k3&!.k3&!1Elf%0#Ah?1%]E
!.k3&!.k38!!AXrZsiP+JcLB&JcN4Z!&+;c!$0MgJcLB&JcLB&YQ+dDcd.F!!.k3&!.k4!!!";CXT0-G
!.k3&!7h.%!.k3&!.k3&!1Elf-2jkE(@M6T!.k3&!.k3&!.k3&!.k3Y!<2*\jO+$[!.k3&!.k3T!!AXr
ZshPdJcLB&JcO0u!5&6F!-#CIJcLB&ec::%JcPNF"2rO3Ll_Ug!.k3=!!')!XT2Vp!.k3&!.k3&!.k3&
!.k3&!4;e,W;`gt?./e*!.k3&!.k3&!.k3&!.k3u!!(OJjo>On!.k3&!7h.%!.k4F!!AXrZsf$rJcLB&
R/d5ZrkAH4mf7q>JcLB&JcM#8"2rO3M":Uu!.k3&!4;e,MuKgYQdYqd!.k3&!.k3&!.k3&!.k3u!!%lT
WrSEo!.k3&!7h.%!.k3&!.k3&!1<fe7/l<KC$u%R!.k3&!.k38!!AXrZsiP+JcLB&JcN1Y!,DMJ!PJ]e
!.k3&!.k3&!3cG*`6Zbcf)UC&JcLB&d/X/IriH4&"LnG`!.k4%!.k3&!.k3&!.k3=!!$.#Wr]4'n,S%?
JcLB&JcLB&JcLB&JcN1Y!!</^!8Z*(JcLB&JcLB&YQ+cn['X8n!.k3&!.k3u!!"SK^ApF,!.k3&!7h.%
!.k4F!!C0cc\RY_JcLB&R/d41rN-&Qn,S%?JcLB&JcLB&JcLB&JcN1Y!$_BB!&2n&JcLB&JcLB&JcLB&
JcLB&ciF%,[fD![JcO@%JcLB&pAb;`['X8'!.k3&!13cb^ArKI!.k3&!.k3&!0dHc`6Zbco)O@BJcLB&
ZiL',!+XLYJcLB&JcLB&JcLB&JcLB&ciF$F!+WM=JcLB&ec::%JcLB&JcLB&QiI-HroO1cn,S%?JcLB&
JcM#8".?O'@IjJN!.k3&!42_+YPu9:U=90p!.k3&!.k3T!!C0cc\U0QJcLB&JcO-t!1s1l!0=ViJcLB&
ec::%JcLB&JcLB&QiI,Uri6$Yn,S%?JcLB&JcLB&JcLB&JcN.X!/1@6!)M)EJcLB&JcLB&YQ+cn['X8n
!.k3&!.k3t!!&)Z^AtmU!.k3&!7h.%!.k4F!!C0cc\RY_JcLB&QiI,4riH1$n,S%?JcLB&JcLB&JcLB&
JcN.X!."RE!3"BIJcLB&JcLB&JcLB&JcLB&ci=%iroO41\,_*\JcO@%JcLB&pAb;`['X8'!.k3&!13`d
>5c29.IdCi!.k3&!.k38!!C0cc\V/mJcLB&JcN.X!(d'j!$9YjJcLB&JcLB&JcLB&JcLB&ci=&;rMoo@
\H%3]JcO@%JcLB&JcLB&JcM,;rT<SLJcLB&JcLB&PQ1fR['X95!.k3&!.k3X!!")=^Aquu!.k3&!.k3&
!3cG*`6Zbcf)UC&JcLB&ci=%]rN-'"\H%3]JcO@%JcLB&JcLB&JcM/<!#PU7!*A[jJcLB&JcLB&JcLB&
JcLB&ZN0sd!!:[NJcLB&JcLB&YQ+cn['X8n!.k3&!.k3s!!'\2^Ask9!.k3&!7h.%!.k4F!!C0cc\RY_
JcLB&QN.#eriH0XnGn.@JcLB&JcLB&JcLB&JcN+W!3,su!/T/*JcLB&JcLB&JcLB&JcLB&cN!suroO2I
\H%3]JcO@%JcLB&pAb;`['X8'!.k3&!1*ZcWW'X4\a]ZO!.k3&!.k38!!C0cc\V/mJcLB&JcN+W!13\e
!34QLJcLB&JcLB&JcLB&JcLB&cN!s0ri6$r\H%3]JcO@%JcLB&JcLB&JcM,;!,);n!6F[1JcLB&JcLB&
PQ1fR['X95!.k3&!.k3W!!%ZM^Anbp!.k3&!.k3&!3cG*`6Zbcf)UC&JcLB&cN!r^rN-&,\c@<^JcO@%
JcLB&JcLB&JcM,;!,_\8!"/8sJcLB&JcLB&JcLB&JcLB&ZN't<rT;W1JcLB&JcLB&YQ+cn['X8n!.k3&
!.k3s!!$O-^Ap4(!.k3&!7h.%!.k4F!!C0cc\RY_JcLB&QN."_rN-&Mnc47AJcLB&JcLB&JcLB&JcN+W
!)icr!%ZV#JcLB&JcLB&JcLB&JcLB&cN!qGrT:WjJcLB&ec::%JcPNF".?O'@?:J@!.k3;!!#1\^Aqj9
!.k3&!.k3&!0dHc`6Zbco)O@BJcLB&ZN'tYrN-&tec::%JcLB&JcLB&JcLB&JcO*s!&4AP!)pH/JcLB&
ec::%JcLB&JcLB&Q2pmG!!2WjJcLB&JcLB&PQ1fR['X95!.k3&!.k3Z!!=<:D4UX?"Sn7)=>&;-JcLB&
JcLB&YQ+dDcd.F!!.k3&!.k4!!!=<8B9`@s"SIOe<%blbJcLB&ec::%JcLB&JcLB&Q2pla!'0TMJcLB&
JcLB&JcLB&JcLB&Z2jjc!#a>fJcLB&JcLB&YQ+cn['X8n!.k3&!.k4$!!4Zc\,FGL_#D(Ks8C(B_h'rT
_>o/fJcO@%JcLB&pAb<6cd.E/!.k3&!1a)k.qGXX\H&f3XT8D"\HB0_3X5E\JcLB&JcLB&JcLB&JcLB&
Z2am(ri6#uec::%JcLB&JcLB&JcLB&JcO'r!9O4B!+EG=JcLB&ec::%JcPNF".?O'@?:J@!.k3C!!,^%
qT8flrkAHsqT8l[Bajn>JcLB&JcLB&PQ1g(cd.F=!.k3&!.k3_!!,TiqRHULriH1TqRH[9@gh2pJcLB&
JcLB&JcLB&JcLB&c2[j-ri6$N\c@<^JcO@%JcLB&JcLB&JcM):!5e`t!424rJcLB&JcLB&PQ1fR['X95
!.k3&!.k3a!!,-cprWU:rkAHKprWWV<T*q0!.k3&!.k3T!!C0cc\U0QJcLB&JcOI(!BHqM\H)[/XT5O!
\H0'8`;kJiJcO@%JcLB&JcLB&JcM):!*oN(!3#GgJcLB&JcLB&JcLB&JcLB&Z2alQroO4@ec::%JcLB&
JcN"T".?O'@FkL2!.k3&!8@JS*1cfG!<<#4!7ghd!P1;3!.k3&!7h.%!.k4F!!C0cc\RY_JcLB&UAt<7
OS63bs8B&"a7m+HX>g1[JcLB&JcLB&JcLB&JcLB&Z2aksrN"KLJcLB&JcLB&JcLB&JcLB&c2[i.rT:Zk
JcLB&ec::%JcP`L"Tg#CC585VZiQL;OT9t5JcMSH!B.piaoMJ?^B!NkaoPZGJcLB&JcLB&RK*Zq-:_To
NQf_p[3G5CJcLB&JcNRd!B%7W\H)X-XT7AR\H#^l!.k3&!.k3&!.k3&!.k3&!6tQE/H)W\!.k3&!7h.%
!.k3&!.k3&!1!Tb&cLk_!.k3&!.k3&!1a)l!^Msjr5o8X['[`n`.p>H!.k3&!.k3e!!#jeaoM;:^B"<+
aoHqQ!.k3&!.k3&!4`(3!C)@Lr4*'Wcd0_D[!Xge!.k3&!.k4,!!#dc\H)=$XT8=l\H$co!.k3&!7h.%
!.k3&!.k3&!0mQ_WrO".!.k3&!.k3&!.k3&!.k3&!3lP&jo>S:!.k3&!.k3&!4r44"^8b<aof>a[);jb
!P(t]!.k3&!.k4-!!$s.aoLK#^B"<*aoS=Hb5d+oJcO@%JcLE'!!E=(Z2(p4c-O_XrODs09U5[1!.k3J
!!$^'\H(=]XT8Cm\H/**KE-T(JcLB&JcLB&JcLB&YlOa'!'o-9JcLB&JcLB&JcLB&JcLB&blI_)!%GM[
JcLB&ec::%KE)$;^%]YO]sP/aqoSrG1RJ/o!.k3K!!$EsaoL)m^B"<*aoTYVKE-T(JcLB&TE#!VY4oI/
c-O_Xqmca(1A_''!.k3&!5ed:>k,?)bl+XDs73]#P32gs!.k3&!.k3&!.k3&!.k3q!<&qu;S)p\!.k4%
!.k3&!.k3&!.k39!<)$[<V$3B!.k3&!.k3E!!%?<aof>a[);^^!+c!-JcLB&JcN^h!(67u!7:\Z!<;T3
!-dW,JcLB&JcLB&]`8%Posk1Lcd0`/\H$!p!.k3&!.k4/!!#=S\H'JEXT8+c\H$Nk!.k3&!7h.%!.k3&
!.k3&!0mQ_WrQQ!!.k3&!.k3&!.k3&!.k3&!3lP&joC=k!.k3&!.k3&!5AL7&#Aj?"22(K_t_@TMuqu=
JcLB&JcOa0!%IE[!O8$j^B!*ZaoGDc!.k3&!7h.%!/COT%[[1*pULCNcd0`.\H.6^RfJ$?JcMbM!%IEJ
!MbSOXT6]=\c0,>;2,(&!.k3&!.k3&!.k3&!3lP&WrS44!.k3&!.k3&!.k3&!.k3&!6kNBjoE--!.k3&
!7h.%!/LUU&[D;WpW<TO['[aFaoRt5S,e-@JcMeN!=-4-ap">1(B=HJrkAQL#s<n7b5KH_08BOZ!.k3&
!2KSq&>Sj-"3o0<anN=JNrf:]JcLB&JcNdj!=#Xs\HS'f('"?9rN-,,4*gD-!&*U;JcLB&JcLB&JcLB&
JcLB&bl@aCri6%!])[E_JcO@%JcLB&JcLB&JcM&9!87A6!9!GKJcLB&JcLB&V#UN"Wq+:7]sP/ap<!Gt
!!%TNJcLB&`W-!QoZ@3;2uEXU[f*rD#ljrHM=epjY3H"=!.k3&!.k3e!!*4no!nkIcd0`,\H%<C!.k3&
!.k41!!$O$\H/B^qu?_qrN-2,!!"'hoXOsqc2`FrJcO@%JcLB&JcLB&JcM&9!2TRo!!`&qJcLB&JcLB&
JcLB&JcLB&YlFd6rT;]3JcLB&JcLB&_#OIin]CsI['[aDaoH/:!.k3&!.k42!!!i-aoGT@!!'8%^AoJV
!!+srou[8'cN&OsJcO@%JcLW-!.4URpULCNcd0`+\H$-1!.k3&!36)"(\G6<<Vc[qTDbkl)>sO91pm+i
r4)epL]E#,JcLB&JcLB&JcLB&YlFcorMoo;fDpL'JcLB&JcLB&JcLB&JcO$q!/UU9])[E_JcO@%JcLZ.
!)<=4pW<TO['[aCaoFDm!.k3&!36)"IJ(__4o#'XVZ"705PtK^*3oC`r5o#ML]E#,JcLB&V>pThn@8YG
cd0`*\H"R?!.k3&!65'>FS30E4S\sWPPqT`1&M"P*2E5<!3>DcJcLB&JcLB&JcLB&JcLB&bl@a+rMooR
]E!N`JcO@%JcLB&JcLB&JcM&9!+#Qco)O@BJcLB&JcM\K!><KCaof>a[);OY!4W"0K)gK'JcNjl!$q6[
!&40J!1Wr%!*oC$!=Q:.aoGH.!.k3&!9X=aVeJ'sTE'QD_Z0]L\+$p1c-O_XoXOt%jT'l4JcLB&j8]0*
osk&Vp](;LrN-&lqZ$X(VY7P#;U>Dq!/(=QPuRi8#M9$.!.k3&!.k3&!0mNaK`.qO9_8=:!.k3o!!ABc
.gN]eJcLB&JcLB&JcN%U!':)@f)UC&JcOs6!FZ&$!.k3g!!%32aof>a[);LX!*84^JcLB&JcOj3!-e.Z
!)*%d!0$lk!-n>?!?oPYaoK!!!.k3(!<8r#Vl,Vj2[\=?JcL]/!,_PBpULCNcd0`)\H#R#!.k3&!3?/#
DYCU@8G<)aGQ"WDA,60++h.E\qmc^-M#`,-b5hL+"+4*!#J^=k!.k3&!.k3&!3lM(FoA?@A(Ud5!.k46
!<&&_H<2U%U]>uHJcLB&JcLB&bl@_arT4(c]E!N`KE2$\"(>Ua!nmX+!/pmX'_oiFaof>a[);LX!Pec0
!.k3&!3?/#^A#bMEqTJ5Jc3=`LA:fL3rR4taoEZD!.k3o!;WMpOD-W\_uPAhVuQf2m^WGEcd0`)\H/r9
KE-T(JcNjl!3c.-!,D3-!,MP8!-%`6!'0b`!$gk2JcLB&k5b=C"+4*!#H.WS!.k3&!.k3&!6kKDC]1:6
E4c1&!/(@PP5CCEH<2U%huJ?/JcLB&JcLB&PlLdprT4(poDjICJcNsoq-a:M!l=qh!2okt?1,i;]sP/a
o?%*V6\GGk!.k3m!!"G@aoE%I!!%BE^As5f!!&\daoGf9!.k3&!9X@TVZW#p2[ZVdJcN^h!*Sa#"3o0<
amutB60A6"!.k3&!9F1\./(1O&G?)(B)Sh3GPD.<PP;Tf>1!>%!/(@PQ1pOGHrV[%j8ac3JcLB&JcLB&
PlLerrMop@oDjICJcNsooo]E'="=Ns!.k3&!.k3&!.k3U!!!B)jo?FS!.k3&!9X@T@0%YUWW7VN_uKeF
m`GXF['[aAaoJO+-\<^t-\<`--NK%uaoI(e-NKD0^AsAj!!"VFaoJZn!.k3(!<8tgVZW#p2[\aKJcL`0
!2oV&pULCNcd0`(\H&J!7=ms[7BJuYM>+O\K_7b6TDbklI/![A/H33V\H&@]!.k3o!:c<VHrV[%bQ*4p
JcLB&JcLB&YlFbhrMopEfDpL'JcOs6nWF!#="=N[!.k3&!.k3&!.k3q!!!B)jo?^?!.k3(!<6L!@0%YU
joBu5N;rqtpWE6Q"22(K_stkLQ(a=lOb/^tOT<;naoIh%OT<Z)^Aso#!!9+Ab5'0[(5i0E!6YB0VZW#p
2[[n3JcMbM!#t=9"3o0<an*%E\[fG.^Oj4P^WF4j](``8^@f5@s8B&"RJ-[]SG0Po(%)'R!.k46!:?$R
HrV[%ZiG[XJcLB&JcLB&bl@_NrMop:]E!N`KE2%8mudd!="=OB!.k3&!.k3&!.k39!!!&ujo@40!.k3&
!6YB0@0%YUc2`FrW;logmE,OE['[aBao]`.V1k%`Ob/_<OT:[@aoK3KOT<K$^B*@8p](:ppW<IpmJqh=
JcOs6l)+WFBf?C/!.k3i!!#IT\HC+&ccP^f!5.O1K"loPK"pH_!5A3<!4qg;!<<#"!WP+R!!#sl\H"P9
!.k3(!<8>MPllD6.gPPDJcLB&JcLB&JcM#8rMoojoDjICJcNsol&l-p="=O*!.k3&!.k3&!.k3T!<)$[
37n4_!.k46!9mnm,m*?3!!gdZJe#a0!.aIZ"22(K_stkL[HNs/Q\(QUQfaV7U%c\0[.K[bc2GBYkE6YW
%KJ'SaoGMk%Y>1E%K[0?Vrsr[OD-W\oDngi!!J&aN=#Z1pUU%/"3o0<amlnA^7iMt`Ic(3`;mdL\H'D:
`;or:XTJO<,P_ZJ._3+c\H#Qd$A&W/$3:O$k*6$r<@\=D!!!/e$A&Va$JGK3!.k3&!3lM(#lUe*;?-^m
$M=De$A&V:$Kqft$^Kk;"+"$!#J:%g!.k3&!.k3&!6kKD!WD-\;S3!]!/(=QBjp15!@7g<!!<3$"ac!%
NMcd&pWE6Q"22(K_stkLhkB7ck^r$$kQ(>NaoM/-kQ'B9^B2RAbkS+9b5'0[fC>aDWN<;.ZaI3FUSi^A
bbkQA]=+d$VZW#p2[]6Y!<ZruQ%G:#PlSbi\HC+&ccPdh!kGkuL&Zc)K)`smpUTnq!9a<_!l4impltij
ppgCRnWa0BR[sYUUSao]LR!IVkEQ+MW0u_3"+4*!#PJ,u"(of@Js+*9f)Y#:JlmV,Jlq/;!&aKN!&X=M
!-nIC!gd#(plb=NnWF-AR$sV?U8"4DP(JjNOogiGU]?_AOop#3.gPhLrVup*L1-'Mp&O(PTkAsiJnM6!
!#YG1!#P9?!2f_W!mtXnpgO1&p]0hm#A8.0P+f(aMka^4@E`-^A(A)+jC&'8!qZHmJ*<e^Vl?QobjEOT
]sP/ao?%-Wb1D@2K'7gMb3/j#pW<L/o]Q;3rP&ETkiVZ<!6k5\!7U_@"gGMJ]=krW^\tnI["kQ2Vs(#\
W4T[Ni26[=Bf?Cq!!$`WQ%G:?PlSPc\HC+&ccP^f!79s0K)^H&K)as4pUTnq!:0Tc!l"^7pltinppgCK
pltuTWN*&$poOOllBQsdKU)S=!3"h@"+4*!#Q+Q'!!$_eP)YXu!9+!P=FsY,=KYa++85a87J'[^FoA?B
QrmYhP5bOW!;M]\SY`3^WiGlq!260NJs+?@"-][^Uu7C<H<2U%q>^L*k[B'OWF=K\rW%XbJnK[Jb%C\Z
pAb1JoOe/trT411B4UdGp&Okr#)g:@e_T3FroX1A!2YHZJmmkO"(Tm3]\m3!,m*oCrt!;NJu?Sc!6acP
"22(K_stkLe*-"Ik^r#MkiV(/oCpB-me#]Ci;LCm`ouWhq545<prWT`q545!o=k:2lDK63Kr5!N]=S*U
XkflXOD-W\$NCKeQ&V%/]D&l1\HC+&ccP^f!6:f5K)^H&XoJ.+oD\gZrN-15s8StlPl\e5q7-LFq3:rT
o;r"eUQpFrbE`(.!1_l1#(0E$#6tVEkE:F[WKPs8rW%XSJlmV,b#eWFpAb1joN2*4rMp$h=BL:QP4enO
OoV0LX8T(!T8/S]P3A&/PQ%K\RGF#1H<2U%#64bI@=hq,@FkMCB7acJB7adYBD)<*;tO]&Sc.[Qen8W,
q-issq-a8poB$%>l=#9QKjb$me^X]NGhld/,m+&Grtg?dNMlKmpW<TO['[a@aoKk`k^r#MkcX+Lnb:0+
lh'B@j8H^p`9?Efq548?b5'0[chXI=^%8u=WhZJDVp)%=W;aC/Y2#oYRs.:i&eaAmJsE=#!4qR."3o0<
an*%E\[f_6s+:9&s2t?ArqEtprrD]iXTQ'4s/GgZ!64fE!6"\u!3GpsrN-'eLR!IVkEZ%J!1ho1"c$SH
2\HbHP(Jk9P1K]t=FsY,=FsZ;=S;^p<:j8mD>gL;S6/mHq3(FOq2t`Xo;_kVlB6a^KouM$W2K`qRG<r-
KO[#&rr@^\NFDM\iW,ZbJnK[JY%RG.!+,;1!13ZH"5%7!B),m8!;HQi@0#'RjoB1l@=hq3@/sg:eGt$Q
@0&Cor;Zhakbj$1WM]a?mE,OE['[aBao]`.eV34=k^r$@kQ(DPaoM)+kQ'W@^B;@:kc+BU!6t;]!7L\@
!NN^0]`>eE^](tJ^4rP;Vs(#]W4T[QW8OQURs.::qZ$VJba!dF`K^G:mC<>Dcd0`'\H'k;s+:9&s+::4
s7a(qrrDckXTQ!2s-`\J!5SB?!6P&%!LTndXS8j]Q%G9SQ2docX5B0ELLW7Tr;Zm!!.]cdNKWu8iW,ZS
JlmV,Y#kZ=pAb1boN2*-rMp$l=BLX[P5bOW!;VcYQ)=M[q5XLqU6:+kb`W*mW2QVXi0"1q@lY.u!!"b;
@=hpe@G1_\!/5';B7ad=B)i)/!!#.RB)n1pjoa=MB4C[Fp&Ons!Gf^SgAp41k5OKCi.bZl@H_,&A(B,T
A)Lbr3X>H\!A:(jVh1hcVZ>!/aof>a[);FV!8Qf%K'7gMK';@\!;?00!;H-L!9=$m!lX<Spnn,8prWTf
o;;Vm]_fGD\`p#DVhM#MW4TYAYiDV`Rs.::q#CKs!$dMYQ&V%/_Y:V8\HC+&ccP^f!8+"FK)^H&XoJ.+
oD\g_rN-.1s6fZI!P>o<\H(%KPl[JXqlKjtU6U=qbEW.1X.SF;",CAF&bc8+,`CoMJs**rg&V*PKiiq/
Jlp/t!&+'H!'9aS!,_\8!h<A'plb=No9'-CWW&stWrSuNP(Jk\OopoHW1;n2",(/E&bZ2)9?gms@Du[,
!9e'IB7acJBBEh,'))A+*qX(FQi6%JfOngk@J0]m@0(r3qrRmsl!]0PKjb$me^OSTj'_sL#PS5t!!*Bm
LJ3\$!3>k:pW<TO['[a@aoKAR[">Z:['$b9](a>I_"=u6h>P(ihR$qk9EJ>=b5'0[L@S"<U&2S)M5![q
9[$03:9gh]VZWE472GFo!<tCG4b>hr4TM2C\HC+&ccPdh!kGkaL$+'NK'1;>!8R=Z!7LN&!<<#"!q#/k
q)n^MpUL9RniZu4riQ1%!-ErYJj&<\!^<9Ek*6%(@lG"j!!*9^c9?hD`BM!9JcLB&JcO$q!&"5N!cn>b
q*"d0p&OYI!/p`T!-@BgJj+lP!^E9Ak)oh"@lY.o!.k3&!.k3&!.k39!!!T/joD%G!9jI`8c.WM)PR4`
!6Y?CODEue!BLJ;!.k3M!!$'eaof>a[);LX!m8ZbKoptLJs"3<!13H&!4qfb!4`!B!U)]A!!#C\aoFTq
!!&,[^](tJ%Yat8!9X@GVZWE372EE6JcNai!)r9q"3o0<amlnA]]d+^^Oj4P^ZN92^A#/<](E`;mJX-f
s'ka'!($@i!'KfP!.=[G!".rjJcLH(s-;l7",C>E&b,jQ!.k3&!.k3&!0dK^WrQ/l!9jI`HMa`C$DINP
!6YB+OopAH3>'dAJcLB&JcLB&JcN"TrT4)cg].=#roX4BK`H])k5a^S!BLIp!.k3i!!"M9aof>a[);FV
!1N,6JrtYIJs#/W!64fV!6Fep!5AEH!5A1-!06fr!$Lh4!42U<!4M(kJcLH(s/5:_".OI&(@;*R!0$sY
.egLJ\HC+&ccP^f!5>/AK"loPXhXS?oY1CurN-(BpAb8H\[hOH!$Lh4!2TOp!2uRkJcNsom$.[.@Q+nH
!.k3&!.k3&!.k3T!<&quC"r[gU&M(oX/i%M!.k46!:5jNKOQqR[/bdYJcLB&JcLB&bQ.V(!)qYQ!2KJS
!4_4mJcLH(s'b>(!BLJO!.k30!!'t4b4j$\]sP/ao#^sGTO!.TJmGKa!3c.>!0?eY!2]Y/!1rrc!tiYt
b506\^@D7($i@[=PbA)/!6YB3VZWE372F,JJcM_L!4;1)"3o0<an*%D\[7$DJq\f1ab9_upUL9son<Cl
rN-'Wp](=+\G3T7YOVYn#lUk,Xf[,-!.k46!:Z6ULLN1SYlK@UJcLB&JcLB&bl@_QrMopRh#IE\ql9^G
kQ$27KE2%8nra*.@Q>%b!.k3&!.k3&!.k38!<)$[5kG'@!;kmY/>3&q!6YB3@0&Cob5d+oVuQgEm`GXF
['[aBaoTXiKE-T(JcNmm!'9ks!4;D!!,DJI!1NZ_!-7hV!-n&7!)!4)!l)KOK`H])k5b.P".OI&(9IRg
!5nj;F7-R@c-O_Xo!na&k5^)6JcLB&jT#9@pUL:#o`+tmrN-'Rp](;/pUL9Cnc/YOqlKifkQ$27KE2%;
p6>`8@Q+n\!.k3&!.k3&!.k39!!$."WrReE!9sOa4Su/Z8"fp7!6YB7OopAH3>'@5JcLB&JcLB&JcN%U
!!<,]!&r[5rT=.BKE-T(k5b-_!BLId!.k3h!!"M:aof>a[);IW!#F_tJcLB&JcOm4!!`/>!)<.e!-%nO
!1!?[!$:jV!&a<I!/LHd!"e>oJcLH(s/5^k".OI&(?#7F!/pmX.epRK\HC+&ccPag!#;.,JcLB&XT/>)
p:1/rp&G(trN-'Mq#CC9rOMd8!&X6H!-7t=!">P$JcNsopltr:@Q+n<!.k3&!.k3&!.k3U!!$='WrRY*
!!%$;Wrf?&%#"\5!9X@WOopAH3>&4jJcLB&JcLB&JcO$q!!N8_!&!(-!#POpk5^)6KE2$\qI'Cc#N#N5
!/ggWT_Zb)aof>a[);LX!.CI>JcLB&X8i6bpW<NY,PM0<G5]/UOSJkVV>\R6aoTQbnc/Zmr4`6CTE'QD
b5hI<".OI&(;U!&!2fesPOH$ac-O_Xo=4jCK)gK'JcNjl!/UB[!OsBK!!$L,XT3bE!!&G]\H0/@nc/Z\
rN-+&X+UJ)!9X@[PlleN2\DkdJcLB&JcLB&JcO$q!+Po-!.*H$!1Ebc!2nu[JcLH(s-!AE",(,D&`!G=
!.k3&!.k3&!0mNa#Q<cb-1h3&!!%HFjoEf%!.k3o!;p7+3X<D"JcM\K!&!`_"22(K_t2"N)M8$A!.k3l
!!#+SaoSpZp](;BrP&>kq>^MFp<!AZnGrL%!PaqR!.k46!!K3hG"!1?!.k3g!!"Y?\HC+&ccPdh!#ju"
JcLB&JcOj3!'9ha!N6D$!!$^2XT3SA!!%08\H$O;!;ikuJ`d#b!/(=QQ%oEM2\F^CJcLB&JcLB&JcM&9
!,2>3!-Ro6l2^^^!.^^BJcNso"HnFI3>&q)JcLB&JcLB&JcN%U!"Ahg!$0kqr8n%B08'=W!9X=`@6+Xc
!.k3f!!%?7aof>a[);OY!+"[dJcLB&JcOg2!35b8!M0ku!!%WL^As#c!!$j.aoE:L!!#=^^AqI#!.k3(
!!*i8ec::%M?!WrqRQ@2"3o0<an3+D=e5VF!.k3O!!&S`\H.j(q#CD2rN-'=qZ$V-qmlU7!#Y8,!&OMS
!(`a_JcNso!"laAJcLB&JcLB&JcN%U!,VV7!-$cp!&a\T!NSeF!.k46!!!V%!.k3&!.k3&!.k3q!!!W0
jo?.P!;kp@!.k3&!7h.%!/^aW#IjTQpW<TO['[aDaoJ3-!.k3&!36)"2"eul\gR=S!0I/o!-nGB!==td
b5BB^C%20'LAS^c';,>W!.k3&!2]_s#-%.'"3o0<an<1FQ2lL:JcLB&`rH)qosk+)-i*fCHi:&HA,QB.
#`&)`!+YO!!-%k<!Nclc!.k3&!.k3&!.k3&!.k3q!!%?DWrQYd!!%!8WrN[n!.k3&!7h.%!.k3&!.k3&
!0mNa,lQj*#kS,_!!!c2k+;X*!.k3&!2TYq-h5=]]sP/ap<!HN('&pdJcLB&`W-"'oZ@2?"oJ?#T)HD(
>lF^(5dp@.!Q>K;!!'5#^Au!#!.k3&!.k3e!!"D:\HC+&ccPmk!O!7!!.k3&!.k41!!%iI\H,h9qu?_S
rN-&lrVus`W:d\%ZjZC(!2'.jjoBu5JcO@%JcLB&JcLB&JcM&9!/LNR!)3"blMppSr2TgtT)aHCJcLB&
JcLB&JcLB&YlFbhrT;o9!/CF6!8rJ0JcLB&JcNRd!'0Vm"22(K_tV:S`[BdHJcLB&JcOd1!%%6Z!l%GD
rVuqsrP&G!#!&XRaoGB1!!!,u^Asng!.k3&!7h.%!/LUT3;g>]\HC+&ccPpl!OaAG!.k3&!3-#!-1eYK
YY,Z/!!&>`XTL9]31T`RrODo)nGiOjqlKjVT)aHCJcLB&JcLB&JcLB&YlFcgrMooRhZ*WXql9^RK)gK'
JcLB&JcLB&JcLB&bl@`TrT;o9qrRlHjoBu5JcO@%JcLQ+!'1##pW<TO['[aGaoT=-RfJ$?JcMbM!)i@0
"0,KlaSijRWV"@4aoICi!!#Ib^AqN2!.k3&!.k3G!!#"M\HC+&ccPsm!O4*Q!.k3&!.k3i!!#gb\HAC&
6G!,t!28qn!.jV>!&seW!(qkDJcLB&JcLB&JcLB&JcO$q!/UTSh>dO9ql9]jjoBu5JcO@%JcLB&JcLB&
JcM&9!13ZHo)S(VqrXIMJcLB&JcNso";!%@)$/On!@bSPaof>a[);^^!N[4<!.k3&!.k3h!!%-0aoL2p
^AuRMaoS^Nn,NHFqnE+GK)gK'JcLB&k5YSm+=\&[!!+OLosk1Lcd0`/\H/?Ai;eH0JcLB&huEann$rGC
rN-(6o!ndq"n2KlFSi0?&`s(F!.k4%!.k3S!!<WQ.MLG7JcLB&JcM&9!0R5\o)S+W!-A%<!"kh'JcLB&
JcLB&JcLB&JcN%U!5\Wrh>dNoqrWJ1JcLB&JcP0<":InkZF]qJ"1YOR#N,R_%"e2q"22(K_tqLUD;P>F
!.k3&!8dbVSaac%`;[LO_=G_L`#S4G!3uF9jT'l4JcO@%JcN1Y":./CU9"0n"0%ks"Q07]$[B5V\HC+&
ccQ$o!,%Z!JcLB&VZ6^Yn@8P*riH1)o=4q5ZlJN7!204kScF?BJcLB&d/X:T5(]E)ql9gqRp?05!.k3&
!.k3U!!&ViWrT!Q!!&VfX+C>'!.k3&!:'Ue1mu\OrT44C_Lr&f!.k3&!.k3q!!(dQjoF>r!!&,Xk2cSp
!.k4%!.k3\!!4s&Vt7Y)[XJnJ!!"nWX8'g>]sP/ar5o&0.@1$d!.k3K!!*S5n]LgF!8[7h!Qm4e!!!6#
^At.&!.k3&!.k4#!!4NZQ1M*ZW+Z_"!!+sKppgLOcd0`2\H.a?q>c*IJcLB&_Z0]HU@GemXT6]<\H"DR
!!!0!XT4Q:!.k3&!.k4?!!4Q[P4P^UUhC::!.k3&!.k3q!<&quO5Bp;"T,5"OlZRp!.k4%!.k3[!!*F8
oB$(b%Gh):!.k3&!0mQ_joE0f!:0^_joA\Y!.k3&!.k4%!!,llm_8e4>2K;\1lhFT#edUP_og-BJ1C<o
JcLB&JcNXf!=P.`aoKfe^B"<+aoT+&mJm5ZqnE,DJcLB&JcLB&nc/\TPO>ORWCYnH!Af?(\HpI+ccN`.
[Wa4V!.k3&!.k4-!!*F_o=4k<rN-(ooXP")...'848Z,[<94+3!.k4%!.k3^!!,?Hm]-Ab8`0T#!.k3&
!0mQ_WrQQ!!:9ad4Su/Z<Ls2B!.k3&!7_&L>OLVR_SZA*!.k3&!3lP&joC=r!;kmY!J1<'!.k3&!;$6l
?*rn3!0#b7%1,".TY&=g]sP/O@ke)>!.k3&!.k4+!!$m.aoL,n^B"<,aoS1Km/R-GqnE+IjT'l4JcO@%
JcNF`!DB6RXT3S(!<)s-#WH7WXgkpdcd0I70`mO=JcLB&U]:C-oXOtGrN-)"osk*g&a]PuGl+TC&tT)T
!.k3&!8%8P9qgjQ!-Q6\JcLB&JcN%UrMoorhZ*Y"ql9]0JcLB&JcLB&o)JcelK/'eW;qMMJcLB&blI_)
!*.nV!$D+#j8ac3JcO@%JcNIa!&!HL!2e`Up](F%S$]P2O8sk4JcMPG!)<./!9=$m!<;c8!d=VEm/R-l
qnJ[%JcLB&JcOI(!$g[/!0c(9"9uikc\V/mJcLB&JcNOc!)*!q!87=Q!<;c'!,h*&!2B@m!!%TNJcLB&
JcPHD!$pa.!0O8]JcLB&JcO$qrMoo`hZ*YKqlAcXJcLB&ec::%]E%-W!+"RaJcLB&JcM&9rT4)/o)S.X
!1E`HSH+6AJcLB&f`2!loY1I?['KD?!.WZ%".?O'@IjJN!.k3&!58F6(k;;&!;l`0!<;i:!MqL9!!!?&
^B(G:qZ$a06[;iVN<"P1JcLB&o`+t,oW81rUn[Rb!,:*d"2rO3Lt;WY!.k3&!87DR(j5S`!;6;m!<)]'
!LYY-!!!6#XT4mf!!EZeA4RL*!.k3&!7h.%!5/@4(%eO.WM-!YWrQko!.k3&!.k39!<&qu)"Raq!!!6#
WrSRa!!EZgA4[T:!.k3&!.k4'!;,CTfVk>6jo>n3!.k3&!.k3U!<)$["lB=WjoKc.q#CC$MZA>/JcLB&
o`+t$q7d'8E%r+/rW!$)4a4X9^Ap:J!!AXrZshPdJcLB&JcOF'!@=!+aoMJ?^B!NpaoSk5kl:]YqnE,Q
r;Zm5K=(Qk!k=t;o)O@BJcO@%JcNIa!"&J'".`XC&cD\2">=9[XT0s6!;?Hq`6ZbcO8sk4JcMGD!@<Qt
\H)X-XT7>V\H/QjquH-b!'^:^!+>a*!YB4Fr2g%"O&W1\JcLB&JcOI(!"&J%".<CA&cD\3">F>cq5XKI
a8gelJcLB&Z2akVrN"fU!'g@]!FPp,!!3^KUAV%nV2SE9!.k3&!.k4C!;YaXI099F!=.NXk,SK6!.k3&
!6tQE')gtL!;kmY#5eH%&utll!l@Y4o)O@BJcO@%JcNF`!5AEH!j?kmp&G+R[/.N<[1D@!pAb;`['X8'
!.k3&!1j/l-uZZoaoMJ?^Aud^ao]S<4Sf'G!!&,X^BGVX!#1'srP&B9^AYeIVE(dZJcLB&JcOF'r2g$m
A/Y(@!A1/EXT>7+gAh>ocd.F=!.k3&!.k3^!!4Q^X8KL.s8B&"`r3FL[<t(!!!%BCXT91;!rrmLX8T.#
Sc#SjP:_ptJcLB&JcPECr2TmgA/b.A!A1&BWr\q&XT3qQJcLB&c2[i;rN"fU!.+OC"Vq(<&8e?DWr\Wg
rMos]/bK*q!.k4%!.k3`!!)$WjoL2CoDelkqW7dZj8ac3JcLB&Q2gnOrT<YNmJm54qr[hW!><fZjoXUl
i;Md<?*+*Y!.k3&!8%8S\\Gne?Le's&#T3<!0l4<".?O'@IjJN!.k3&!4Mq3,$gnUb5_IU"i8?tYB2M[
!!'A&^]+9ABY(snX+<J:!!$-,rP&>kP5p17JcLB&oDf#oXf\Honc/[uPPVB]JD1&+`6Zbcf)UC&JcLB&
df9Oq=d?/#q>RK"YIUp4CbauN!2TLo%0-B.X0&LlCG>hi!(Wa]XT3S=!.k3&!7h.%!5&:7VQ6bl:@\Ac
$^(:d!.O#0JcLB&JcM):!+>f,!2f;emJm6\ql:/+!*6"uX-RNV!<<*jTDbejFftds!.k3&!8%8R`ocEe
n,NGoqW7c/aT-nmJcLB&Z2al\roO4>hZ*YOqr[nY"Td$5k%tY,!!&8^jo?Ec!.k3&!.k4C!!9I@M!k<D
0`&Nb\d@-l".?O'@FkL2!.k3&!7(WG!PSKI!PJZq!!!K*^BUtDKtkC:Fnl";Ac9@DQ1k91!.k4%!.k3`
!!8msF70)/-2O_EWs7\dpAb<6cd.E/!.k3&!1!W`XT>R-o)S4Z!"&P)#,2*9Xf\[5q#CCmrN-'MYQ07T
JcLB&fDkuGX)dY/!%.QC!N-.E!.k3&!.k3V!!&_lWrSID!!!?&WremnDZd&@WaY]'!)ris!.U45JcLB&
JcPEC!hABimK!+G!7.bIJcLB&JcO'r!6>*$!2\QQqrS*N!#4SXh?NcU!!3&\!&"!GJcLB&ec::%]Dqu&
$1.]mRJOYu@cd[b!!AXrZsf$rJcLB&Q2plu!28r`mf3>cqnE;cPJ=l//b]5FVu=@1Fg1pu!.k3&!8%8P
LBd,G!/(-M!)VGN"2rO3M":Uu!.k3&!3uV'XT4C>!!#@_XTE9eXTGVg,52';Q2Rfb@?ghE!.k3&!;$6l
Ka-oE!.t'J!)]m!JcLB&JcO'rrMopVhuEaEql9m9IB0E1,PM0<P5VE]@JBhS!.k4%!.k3`!!#+I!!"kP
jo>GE!.k3&!.k3:!<)$[9C`)N!;km]%k6Z'>P8$s@K#<g#-e/[!.k3&!5\^90`&NaV;)%QRC'>0o)O@B
JcLB&ZN'tIrP&>bhuEb@qnE3(^V9c(o`+tcr4`5)Q2lL:JcLB&h>dO%qQ0a\g].Gpcd.F!!.k3&!.k3s
!!!i6XT34r!!%KFXTOH_X`F(7!'U7^!'L&WJcLB&ec::%V>pTCqPsUWjoBu5JcLB&QN."&rMop8nc8+Y
!.FaF",O"YEV0;355_G]4gG'>!.k3&!5S[3joAN+!.k3&!.k3V!<)$['&W`i.Jr6/6K[D1(\@_*k*5pu
!.k3&!8RVTVu"..%c%*eRC'>0f)UC&JcLB&cN!r6rP&>:huEbbq7coso)JcmrP&BB%f-0W!.k4%!.k3I
!!&;\XT/^k!;?Hq`6ZbcO8sk4JcM,;!&skY!(l_]mf3?aq5jXKo)Jc[rN-+"$F9_a!.k3&!5SX8P5;3Z
$HiF$!.k3&!4)Y*3;olX9&K[LUA:hiJb&jAR/O&dV$`OhJcLB&JcOU,!+G`dXoO%RJcLB&c2dh*hZ*YX
q;qZ4o)Jc6rT4*oq#H!HJcO@%JcMVI!0I&l!&s'@pAb;`['X8'!.k3&!1*ZcC]2!J0(K#3!!!T+^At&"
!!&Yh^AqTH!.k3&!.k3e!!%BBXT0m-!!C0cc\V/mJcLB&JcN+W!*B-$!$gG&!"A\*!K[<Q!!%uUXT2%]
!.k3&!.k4,!!%?AWrOZR!.k3&!.k3s!!$1#WrOF(!!!H'WrS1N!!%lRWrPok!.k3&!7h.%!2TYq,l6Zc
!.k3&!.k3;!!!*!k4&H?!;YaW;t9ng7f;DS!.k3&!.k3e!!%!7^Aqj$!!AXrZsiP+JcLB&JcN+W!0@)n
!!hH_!*B$3!j)b/o)JcOr4`6*QN2U;JcLB&h#IFZqQ0`qh#IPqcd.F!!.k3&!.k3s!!%?DXT/L_!!#Lb
XT=prnc/Z8r2fsZq>c*IJcO@%JcMVI!*oB$!)r%\JcLB&JcM,;!."OD!!Mimn,NGYqPsXb#4_`oGl4TB
MmED8!.k3&!5SX8"8_-[!QtIp!.k3&!4)Y*,5pZ]!;bgZH2ms:!!"2?joA&@!.k3&!.k4,!!#7[^As,H
!!AXrZshPdJcLB&JcO*s!3cC:!4:Ya!1*Ms!OX!=!!%3>^Anc@!.k3&!7h.%!2TYq1&A!PFQWYu!!C0c
c\RY_JcLB&QN.#WriH0snGr%Y!.k$L!MpS%!!$L*XT/^8!.k3&!.k3e!!"eNWrR4a!.k3&!.k3W!!&Mf
WrSmP!!%QHWro(4!!)Tj!+Pi+!",(nJcLB&JcOR+qW7brY5j.SJcLB&cN!ruroO3\huEa1qrRm[n,NFn
qr[_TJcLB&ec::%V#UK,qS*$+k5b5V".?O'@?:J@!.k3;!<'Y4Q14kD!!'J)^AqL-!!$*t^Ar/Y!.k3&
!.k3e!!!H(XT4L>!!C0cc\V/mJcLB&JcN+WrN-'MhuEbTqlKiirW)Ni!(Qjf!*PZhJcLB&JcOU,!"A_)
!045_JcLB&JcO*srMopJhuEbPql9]hn,NGYql9^$qZ)3JJcO@%JcMSHqW7cXk5^)6JcLB&QN.$GroO25
nGr%Y!4D^dmK!.H!!BS.JcLB&JcNRdqS*$5h#IPF['X95!.k3&!.k3X!!"SK^AqNt!!!`1^AtP;!:p0j
5Pr1qPaDH&!.k3&!8ISNXT4pJ!!C0cc\U0QJcLB&JcO-t!$V<C!(u2M!"f%0!28i]!&=AQ!.aqHJcLB&
ec::%U]C7l!1E!MJcLB&JcM/<!$_BB!)2n_nGiP#ql9^gmf3>Cql9^GZiG[XJcLB&^]=5n!.E#jJcLB&
JcN+WrT;u;qrRmAr;cBgqrRl0QiM^<JcLB&g]72c!3Y,X".?O'@FkL2!.k3&!71]GCAkmI+Q3;#>l289
KC8d?5Pr1qV>C7E!.k4%!.k3H!;`etS`^"I!!C0cc\RY_JcLB&QiI+erN-&:nGr(Z!)!-j!,_0)!&=AQ
!0X\hJcLB&JcNRdqPsUab5d+oJcLB&ZiC).rMoo9i;`jOql9^6r;cEh!&FGP!0<KIJcLB&JcOR+qW7d+
Y5j.SJcLB&ci=%IrT;u;qrRkkmK!.H!*K*uJcLB&ec::%U]C8+!3YJbpAb;`['X8'!.k3&!13`dRJsr$
\aTUh!!&Ga^Ap4]!!#7\^AtRH!.k3&!.k3d!;`etS_X8J`6Zbco)O@BJcLB&ZiC)ZriH1#huEb1qlKiK
r;cEh!&=AQ!25b[JcLB&JcOR+qPsUaY5j.SJcLB&ci=&tri6$rhuEb/ql9]Imf3>Cql9^hqZ)3JJcO@%
JcMSHqW7d+k5^)6JcLB&QiI+DroO4#n,VtY!&aZ9m/[%G!0jhjJcLB&JcNRdqS*$5h#IPF['X95!.k3&
!.k3X!!'D*^Asna!!'M+^AtkC!:p0j@Jde>\sNJL!.k3&!8ISNXT4pJ!!C0cc\U0QJcLB&JcO-t!2TUr
!/ob8!3,mu!3>Mf!)NKo!3>tsJcLB&ec::%U]C7l!1E!MJcLB&JcM/<!29Cm!/^1FnGiQcr2TgqmJm5`
ql9^pZiG[XJcLB&^]=5n!.E#jJcLB&JcN.X!2]\W!(>`F!5ABn!7C]Eo)JakqrRn)QiM^<JcLB&jT#Pq
5?)?DMO'p6qS*$5h#IPF['X8n!.k3&!.k3u!!!0#^Ar?6!!!i4^At+u!!%fN^\\"_!.k4%!.k3Q!!ilc
6WI`@JW5ulXT4pT!;?Hq`6ZbcO8sk4JcM2=!!E2%!+53qnc/Y&qlKj]mJm6-qQ7+)JcLB&JcNmm#RN7S
=(ZQ)MNmt<!1D"1JcLB&JcN1Y!!E2#!+=ac!##10!0@$Xo)Jc1qQ#t`JcLB&JcOd1"Tf#M01][NjoBh5
!.k3&!.k3t!<)$["lKCXjoANO!!!i3k5,.1!.k4%!.k3V!!FBDL8VTP^AtG"!;?HqRC'>0O8sk4JcM2=
!'C.o!'0NKnc/YuqnE,XmJm6_qnE-BZiG[XJcLB&c2[t`6u\BjnZ;e^h#IPqcd.F=!.k3&!.k3Y!!"YM
XT0s3!!#glXT2u2!:p0jOo)6\X-`m=!.k3&!9sOe(e&D,VX^\eRBHUB!.k3&!7:cH0)_gN/`?[0;#@9n
B'oX!Nr,jWVu$IG!.k4%!.k3T!!3mBaRSBmIHLT^!.k3&!13cbk3i<@!!!&sjo>bV!!$$rjoE]6!.k3&
!.k3u!!5TS]^3B5Y2''[RC'>0o)O@BJcLB&[/^2NrkAKI"Q9=\SGU&$2Z*RH!!'M*^AtO+!.k3&!.k4<
!!5*0XR*%hS_X8J`6Zbcf)UC&JcLB&d/X/VriH4&"5s4[L\n1R.dd9:W;E[sT_e_@!.k4%!.k3Y!!501
WU-YcRHFR%!.k3&!1<feA,`M0WWV_jnc/ZDql9]HmJm6_ql9^fZiG[XJcLB&ci=)!f^.`#IEMVB!.k3&
!4;e,#QEicgY`&348\1;!:p0j]_ggkNL0]t!.k3&!:Tsi>arCj^AtFm!!AXrZshPdJcLB&JcO0u!3,t4
!3+lV!4i$B!5._"!"A_=!2KDkJcLB&ec::%\,ZS&L90XA!1i9QpAb<6cd.E/!.k3&!1<feQi=)eQgXqF
!!'%sXT5Hj!!!<$XT4Hi!.k3&!.k4#!!5iIWTgG`REGS^!.k3&!4;e,Pl@]`Q/DWBVYmIpWVZ\f!!!<$
WrS-H!.k3&!.k4>!!,(3l/htoY5j.SJcLB&d/X/ZroO2phuEbsr8n"4m/["F!)`UnJcLB&ec::%\c;b2
YNES"Y3,fZ!!AXrZsf$rJcLB&R/d6$rkAGPmf;qZ!#POI!3#;c!(Hb!!0FPfJcLB&JcO@%!CWOAXT4pJ
!!C0cc\V/mJcLB&JcN1YrN-')i;`ijqlKjaqZ-6g!&sbV!.1(5JcLB&JcP?A!C`L?WrSQk!.k3&!.k3u
!<&qu?/Yb`')S^0PjSMO3;TZUHM[\o!.k4%!.k3]!!%]7joBhm!.k3&!.k3=!!)$Xjo>PQ!:g-ejoAu[
!;bgX,d[Q'!.k3&!8%8P4J_P_#.h+;Q%3I8qS*$5h#IPF['X95!.k3&!.k3Z!!#@a^Ao;5!!$$r^ArNU
!;$6kJ,6n[G*i8]!.k3&!;$6l/s5_,#-4J^J8/"AqQ0agh#IPqcd.F!!.k3&!.k4!!!"kSXT0-q!!#Fa
XT2l!!!$a0XT2i-!.k3&!7h.%!5&:4095V(#,e)UIqhqCqPsUak5^)6JcLB&RK*=GrMoo6mf;qZ!(Hdc
!+YEs!,;;1!+N;8JcLB&JcOC&!*/UP#18cC/e.m^qW7d+b5d+oJcLB&[/g3g!9E#;qrRkaqZ-6g!"Skf
!!ekkJcLB&JcPHD!-n4P"LY"W=!m_CqS*$5h#IPF['X8n!.k3&!.k4!!!&#X^At.h!!&&V^AonS!!&kl
^Aq@4!.k3&!7h.%!5/@4A+m#-VN>Xa*Vf^3XT4pT!;?Hq`6ZbcO8sk4JcM5>!-nLF!0cgNo)Jc8qlKiC
mJm6NqQ0`eZiG[XJcLB&f`2"^p8\=jNGV0,q#L8l!1D"1JcLB&JcN4Z!-\@B!0Q1>!-e=@!$qFAoDelQ
qPsTdQiM^<JcLB&o`+stp>uF[;%iU'qW7d+Y5j.SJcLB&dJs7hroO2dhuEa"qr[8G!*f<^q>c*IJcO@%
JcNLb!(H[t!kO=?oDna&!3YJbpAb;`['X8'!.k3&!1ElfZ2VK<C[M2o!!'5#^Au"8!!'V,^AoLc!.k3&
!.k4)!!"tQXTGPI+S5[1XT4pJ!!C0cc\V/mJcLB&JcN4Z!20=n!*A(Y!1s(iq>g-f!3>su!#h4)JcLB&
JcPKE!''bS!iL/aoDn`g!1C"jJcLB&JcO4!!1s1j!*S4[!1Wne!35Dd!2o[o!$(k9JcLB&ec::%]`@ii
!RVqZ!;bgXIHLT^!.k3&!1ElfOT+AB!q$'[!!%]MjoF?,!!(@Ak-G&>!.k3&!8@JS)7KCV!jm%[nc8O$
!3Y,X".?O'@IjJN!.k3&!4Mq.'`PiJ^)#W,qnE-4q>g0g!$qEU!3hdiJcLB&JcPNF!>DF.XTG>,$h=;o
XT4pJ!!C0cc\U0QJcLB&JcO7"!"f+2!"n,hqlKjemJm5+qQ0aiq>c*IJcO@%JcNOc!>D:*Wrf#'$h=;o
WrSRN!.k3&!.k3?!!!T0Wr]44mJuhYql9^`mJm5,qPsUdZN,RWJcLB&g&M,aqW7gY#4V]ijoBhQ!.k3&
!.k3Z!<2*\inj_9j8A$>EV]\-!;bgXLmJ*n!.k3&!;?HnV#%h,V\eh&qS*$5h#IPF['X8n!.k3&!.k4"
!!$F+^At%e!!"\L^As#V!!%KE^AqpC!.k3&!7h.%!5AL6Onu0\PS3HcqQ0agk5b5V"2rO3Ll_Ug!.k3?
!!#dnXT4IM!;$6k,l=\DE:*]+B_nh2<3lRV!.k3&!8@JRO8>mXOqR6aqPsUab5d+oJcLB&[f?D(ri6$Y
huEa'ql9^9q>g0g!,250!*,?cJcLB&JcPNF!*B$Z!+50pqW7d+Y5j.SJcLB&dK':/!)_VRqrRknmJm4r
qW7bYq>c*IJcO@%JcNOc!5/3D!06IIqS*$5k5b5V".?O'@?:J@!.k3?!!&Ab^Aqj4!;$6k9DcI(9C;c[
Y55m5%^Q.e!.k3&!8@JRXS]+"GjYS.XT4pJ!!C0cc\V/mJcLB&JcN7[!.t3P!)h_T!'L.\!'L)Xo`+u_
qQ0`)QN2U;JcLB&pAb2mql9^@mK!*a!1C"jJcLB&JcO7"!.b'L!)qeU!'U4[!'T`M!1E\a!"/Q&JcLB&
ec::%^An8dqrRl$mK!+G!.F#1JcLB&JcM8?!&=K8!!2Heo)S[Mm/R-7qW>'`JcLB&JcOR+!%IcZ!"ePu
qS*$5h#IPF['X95!.k3&!.k3[!!K[D^V19;!!$=%^Anc?!;6Bm(AbcGS<a/,!.k3&!;HNo*r;u=%.4,l
XT4pJ!!C0cc\U0QJcLB&JcO7""Jr6&X:4"e!)*3k!"//p!"o(0!/L@MJcLB&ec::%^]4?WqPsT)mK!*a
!1E!MJcLB&JcM8?"JVrtWXS7poDekcql9](mf3>"qPsUMZ2fIVJcLB&gAq-5!9EMIqW7d+b5d+oJcLB&
[f?N1k2tOW!;kpS!;-?gjo@K/!.k3&!.k4G!!$F(^AtD(!!"_L^AtFm!!AXrZshPdJcLB&JcO:#!($V!
!2/3L!,qeM!4V@r!+l#A!)iUmJcLB&ec::%^]4@0qlKjgmJm55qQ0agk5b5V"2rO3Ll_Ug!.k3@!!"hS
XT4@I!;$6k>5YK&WU9`d;YmKq6F$TC!.k3&!8IPS:]%0mRI1%T-MjbCREGS^!.k3&!4W"/2?'WVMVeC6
>l:W&V>1,b!!#soWrPMQ!.k3&!.k4F!;kmYGjPM-joBh5!.k3&!.k4"!<2*\8DaCI"8q9]^?tt$!W(sR
!.k3&!7h.%!5JR7IJ^bZP3r;MC\kdGY3,fZ!!AXrZsf$rJcLB&S,`PWrkAG1li?YX!.Fd[!3>Mf!2KG+
!Or3:!.k3&!.k4+!!$^0XT3e;!!$*sXT4pJ!!C0cc\V/mJcLB&JcN:\!/1?R!(#KB!,2;4!1EW_p&G)S
qlKmu!L<_;!.k3&!;HNoB`"h1I-pt7=o,0!RBHUB!.k3&!7UuKK)VeN6JhbCB`+n2QL4_QNr,jXV#gAl
JcLB&ec::%^]4?CqrRl,mJm4gqW7d+k5^)6JcLB&S,`OHroWMHoDek"r8murmJm5cqrRmoYlK@UJcLB&
g].=YqnE->mJm6`qS*$5h#IPF['X95!.k3&!.k3]!!F7T^V?u/!!%6@^At&)!;?Hn/Gd*]GEi/[!.k3&
!;HNo8c,UiVsXNbP5;9\S_X8J`6Zbcf)UC&JcLB&eGoR`riH0lh>dOcr2fs\mf3>2qQ0a-p],mGJcO@%
JcNRd!)!-h!2Jr^!0?uW!1E!MJcLB&JcM>A";Rr;X.&>SoDel$r2TgWmf3>3qPsU+YlK@UJcLB&gAq-5
!42(n!*K*[!.E#jJcLB&JcN:\"5r>(J_gA,#Q3]a;>C4c!;bgX#F,:@!.k3&!;HNo48Q\l2=LSG3;L;h
Y2''[RC'>0f)UC&JcLB&eGoSsrkAGGh>dOZr4`6$mf3?EqnE-2pAfdFJcO@%JcNRd!&",M!%IC;!%drJ
!1i9QpAb<6cd.E/!.k3&!1a)iBE#"5<9jPV!!#RfXT4+E!!%-<XT4`m!.k3&!.k4+!!"YJWrOU<!!"SG
WrSR2!.k3&!.k3]!!$[2WrQ/V!!#UgWrRhK!;?HnF8N!<Q';9#!.k3&!;?Kik3`6FjoBh5!.k3&!.k4$
!!!E+jo>G<!;tsZ3:?hI)Z/XsC\Ig\!.k4%!.k3d!!"):^B(VQnc/\+Vtn(-Y3,fZ!!AXrZsf$rJcLB&
SH&f!^V@,VlN$PW!'C+n!0H[M!=$(2^Ap@"!.k3&!.k4+!!!f2XT>.+nc/\&PkhE]S_X8J`6Zbco)O@B
JcLB&\Gu`-Xf\GU!!"YLXT3_D!;HNp"KD:#!%sK9JcLB&JcPQG!#PL4!M9km!!*[pq5XL`Y5j.SJcLB&
eGo]FX/huN!!"YLWrRJ8!!*5!ql9]LpAfdFJcO@%JcNOcqW7dEn,NGqq;q[*k5^)6JcLB&SH&bek2r]/
!:p3gjo?[q!!'n6joFMH!.k3&!.k4+!!*56qS*$2o)Jeg\bNo>Y2''[RC'>0o)O@BJcLB&\c;_1rkAGY
h#IErr4`5aq#L0i!,h\K!/6U:JcLB&JcPQG!<]D!XT4d\!!,BbpoOOeh#IPqcd.F!!.k3&!.k4%!!#Fd
XT2nf!!!f4XT35-!!$1!XT3;5!.k3&!7h.%!5JR8"/l!r!139W!CEXXWrSRN!.k3&!.k3B!!#IeWrQ\q
!;$6k(]:<6D=@N*>PkH$Dm'.m!.k3&!8@JRchcc(Dt3l.`;&HpIEMVB!.k3&!4`+/jo>_C!;tsZ');P&
!!!,ujo?*Z!.k3&!.k4F!!%NE^B1fn+8Gm<$ZE6B^AtFm!!AXrZshPdJcLB&JcO@%"J``H\e*Zt!!N57
!1WKY!=?13^B(SBp&K[EJcO@%JcNOc!,;82!i9WJq#CI%>+bMj!1i9QpAb<6cd.E/!.k3&!1j/nOKGXc
%-dib!!!-!XT4+G!!*;$r2g!m!j;TU!.k3&!8@JRC&+e2U1tP@!!3F2S+`l_REGS^!.k3&!4i.5NiT4Y
%,Cm`"8o2"K_YWD!!*:ur2Tji!g<V9!.k3&!;?Hn%f,5fX:Ft)!<\)MjoBh5!.k3&!.k4%!!?0^k0Mc^
r8mu=n,NHlr8n!@o`0RDJcO@%JcNOc!=Q@2^BqWQP]fZ'I?^S=oY1C/k5b5V".?O'@?:J@!.k3C!!"VM
^As)S!:p0jWr9[4WUTrgIJ^bZ9<J8H!.k3&!8@JS#cRL"#aKmK4%X+9P,e/V!1hpG"2rO3M":Uu!.k3&
!4r42,6"\EF5$ZpR/O,eQh^XW!!$^0XT1JH!.k3&!.k4F!!*A$pT"R`IUYE3BRZ#>oW%t[Y5j.SJcLB&
f)Pdqri6$>gAh5=rMop`nGiQ&ql9][o`0RDJcO@%JcNLb!4_gd$0#GF#64`4/6L'ejoBhm!.k3&!.k3B
!<2*\)!M%l!!$g5joB,c!!!H)k,eW8!.k3&!87DQF6L@=\bj,AY2''[RC'>0o)O@BJcLB&])Vtl^V@K-
gAh4[rP&?=q#L6k!?euO^ArnK!.k3&!.k4E!!$BiXT5BuXT4pJ!!C0cc\U0QJcLB&JcOC&!-\@D!#jSl
!)3?n!2K)b!>qm8XT351!.k3&!7h.%!58F5@-FWkVYdCoRHFR%!.k3&!1s5kFoJEA*9dIp!!#dmWrSja
!!*t8r2Tg7XT3qQJcLB&g&M*VkiMldqrRm,b5d+oJcLB&])VpQk2t[V!<)$[U%n]a!!(@Cjo?$V!.k3&
!.k4E!!*,,lb<M7BWh6I!3Y,X".?O'@FkL2!.k3&!8%8S*k]8&QeDE>%fO-B]CGq%WVjL2KC](p!.k4%
!.k3a!!&e[XTGS(SboMhS`^"I!!C0cc\RY_JcLB&TE#*1XKAUVkQ(2S!"/\,!3>Yj!13Vc!,\e;JcLB&
JcOI(!2/YY!if:hql9^bb5d+oJcLB&]Dr'NWN3(Mg&M*[rMopsq#L6k!1!J_!,[etJcLB&JcPHD!1rN=
!o!a(qrRm,Y5j.SJcLB&f)Pp)k2nDO!!)'YjoEp%!!$a2jo?%c!.k3&!7h.%!5/@528&=k"+("JY5>s6
Y3,fZ!!AXrZsf$rJcLB&TE#+X^V@B(kQ(/R!2'5)!&X<J!1`u%!/%<PJcLB&JcOI(!@b,;XTN/8!1j"h
!1hpG"2rO3M":Uu!.k3&!5&:7IBBWQ);+uiN;]jY./Er@!!%fPXT34!!.k3&!.k4D!!+OJmAg>$!!&Ga
WrSQk!.k3&!.k4'!!I\MX/Hri!!%lSWrOR?!!%`NWrR#-!.k3&!7h.%!5&:3fC%c(isGbdIJ`.,IHLT^
!.k3&!2';o.-B[Bk5b&Q!(QqLo)JbPr8mtlWrR_OJcLB&fDknCn@o%6P9^&,!3Z46!3Y,X".?O'@IjJN
!.k3&!5/@42u^PlFk?Zo48lnoT)&Hb!!&)X^ArnH!.k3&!.k4C!!#(LXTGJN)ZB^:SboMhS_X8J`6Zbc
f)UC&JcLB&f`2"&riH0/fDkn(rN-'Wo`+u<r2fs9nGn.@JcO@%JcNF`!'KbO!i:;brVuqdql9^bk5^)6
JcLB&T`>'Cri6$-k5b&Q!&"5N!/U:J!."LC!,\_9JcLB&JcOC&nE'bc.K'5HIJ`.,IEMVB!.k3&!5&=2
jo>V;!!)'Yjo@aE!;lfs,5gR'&rlsD!.k3&!:p0l.>PG,^B1m,62LZXKA?M0RC'>0f)UC&JcLB&f`2,K
^V?l$!!%6A^Ap^s!!&A`^AroU!.k3&!7h.%!4r44*ce7RXTGJM1]%1JD<Con!!C0cc\RY_JcLB&T`>1U
Xf\&S!:^$hA,WM02tm:PK)D_ND5dMe!.k3&!7q2P+E=7OWrf,E2>[CLD9Dp2!.k3&!5/@7N2s"Gec5\[
rMooYqZ-Qp!.b!J!,[\qJcLB&JcP?A!>iQFjoN1Cq>g=(Y5j.SJcLB&f`2+Kk2p[7!!!9&k4ScT1&U/6
'(>mQ!.k4%!.k3]!"0!+GEo2*RuD],:FXippAb;`['X8'!.k3&!29Gn;Z=E26081:!!&_l^B(5Fq>^O<
Zi.W>ZWj@.JcLB&JcO=$$NrY'J=)OUG@jf=*m=Td`6Zbco)O@BJcLB&^&S."riH/VeGoT/riH3d%f?;/
!!!h2rN-*q8W3Y$!.k3&!:^$s"@$CGQ'$`BAlV)=ScF?BJcLB&g&M+?ri6#VeGoT-ri6'_%f-/+(npo/
!MN-S!.k3&!7h.%!4Mq5#;0dt3ZSP.e,Y(#JcLB&T`G)SjT+cM!(m1P!+GX&!2KMT!26:jJcLB&JcM#8
".?O'@IjJN!.k3&!58F8Y.q`4e,TLUZi7]?^30AS!Y/5CrkANKK*R;7JcLB&JcN"T"2rO3Lt;WY!.k3&
!87DTSZT#>e,TLRU].@rXC;&-!X_>srN-*;"RZ8A!.k4%!.k3&!.k3&!.k3F!!A[jX*E_+n,NInT`1tm
WaYi+!X_Aqri6+#D$6a:JcLB&JcLB&JcLB&JcNLb"+TIq+k$DkT)RjQh?NoY!WW5QroO7@&rH[@!.k3&
!3cG*RC'>0f)UC&JcLB&gAh@o^V@2fdf9FPID#Qo"07WRZM_H<Te>[3JcLB&ec::%JcPNF"2rO3Ll_Ug
!.k3G!!HH,XeuQg!:Kmh")+e8XTOu?K;/:G!KJD$!.k3&!.k3&!.k3&!.k3c!!HN,X.p'O!!379WW&q#
Q[OIYr2TjV,`)MQ!.k3&!.k3&!.k3&!8@JU"6SaRd/X1Uf`("8D^dN5r8muPlMuM:JcO@%JcLB&pAb;`
['X8'!.k3&!2KSt%(<pcA)mXW!!47-\,3oB^85s(UB#lGJcLB&PQ1g(cd.F=!.k3&!.k3d!!ES*XfYII
!!3seWVik$XfR^p,)6/M!.k3&!.k3&!.k3&!8IPW#c"H$;U>CF(k8CZWroA`@3b%;JcLB&ec::%JcLB&
JcLB&UAtD(k2l^*!:0[d0#%5F!o@,cU&]cFJcLB&PQ1fR['X95!.k3&!.k3d!!@kg^S8pP";!e:K7a.d
K)gK'JcLB&YQ+dDcd.F!!.k3&!.k4+!!@)?XcL[+"Um+iD/Cof!.k3&!7h.%!.k3&!.k3&!2KSsD6'^s
irJ?E"Um.kD/Cqu!.k3&!.k3&!.k3&!.k3d!!<krk"j,"!Ws&JJcLB&JcLB&YQ+cn['X8n!.k3&!.k4,
!!H-5^Ubnq!.k3&!7h.%!.k4F!!C0cc\RY_JcLB&V#UW`Xf\WHirFZ2JcLB&JcLB&JcLB&JcNUe"@9)h
V]j(\JcLB&JcLB&JcLB&JcLB&g].E<k0L%-JcLB&ec::%JcPNF".?O'@?:J@!.k3J!!F7M^V<b-!.k3&
!.k3&!0dHc`6Zbco)O@BJcLB&_>j]QW3*0h`W1SjJcLB&JcLB&JcLB&JcOX-";R`5X$irfJcLB&ec::%
JcLB&JcLB&V#US0k2tV&JcLB&JcLB&PQ1fR['X95!.k3&!.k3f!!At1^O*p"JcLB&JcLB&YQ+dDcd.F!
!.k3&!.k4-!!A:aX_+O4JcLB&ec::%JcLB&JcLB&V>p^XX/fjk!.k3&!.k3&!.k3&!.k3&!5\^<:ZgdH
`;kJiJcLB&JcN"T".?O'@FkL2!.k3&!8dbYI_WXdVuVDLJcO@%JcLB&pAb<6cd.E/!.k3&!2ff!BW\Cj
huJ?/JcLB&JcLB&JcLB&JcN[g")+a9K>[bA!.k3&!.k3&!.k3&!.k4.!!<\mju94=JcLB&ec::%JcPNF
".?O'@J(q:!.k3&!2ol"8\`$ChZ/6.JcLB&JcM#8"2rO3M"O.8!.k3&!.k3h!!>9aXe!?0JcLB&JcLB&
JcLB&JcLB&huEjAX/hYd!.k3&!7h.%!.k3&!.k3&!2feuk2q*L!.k3&!.k3&!0dH`RIdce,ldps!.k3&
!6"p?'Xb]e_>o/fJcLB&JcN"T!6"KT!(5cHJcLB&JcOa0!t_?3X/5lK!.k4%!.k3&!.k3&!.k3M!!<e,
X/FeSJcLB&JcLB&JcLB&JcLB&_uKkBk0LmEJcLB&JcLB&YQ+Zko<\KDirFZ2JcLB&i;`tP^V:,Q!.k3&
!7h.%!.k4F!!'t/cN$>&!.k3&!3#r#N302eh>i--JcLB&JcLB&JcLB&JcNai",X(Z#JpIm!.k3&!.k3&
!.k3&!.k40!!5XPk+r'0!.k4%!.k3&!;?HnRIdcc-(Fse!.k3N!!>I#^G"CCJcLB&JcLB&PQ1^%o?RJ*
!!%TNJcLB&`W-)qXfWkb!.k3&!.k3&!.k3&!.k3&!9*t\197H%V#Z)IJcO@%JcLB&JcLB&JcMbMs5r):
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&ec::%JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO@%JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&ec::%JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcO@%JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
ec::%JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO@%JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&ec::%JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO@%JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&ec::%JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcO@%JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&ec::%JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO@%JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&ec::%JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&\c@6~>

%%EndBinary
grestore
np
454.713 45.129 mo
350.545 45.129 li
350.545 30.4875 li
454.713 30.4875 li
454.713 45.129 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.1134 72.212 ]ct
[104.355 0 0 14.828 263.338 26.9897 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 1119 
/H 159 
/M[1119 0 0 -159 0 159 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 1119 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1119 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1119 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1119 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&r;Zp0@:9Cu!.k3&!.k3&!.k3&!.k3:!!=C#L_9.WJcLB&JcLB&JcLB&JcLB&JcLB&
JcNpnJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&Q2h!s@:9E2!.k3&!.k3&!.k3&!.k3&!3Q;(+c(pd
f`6U(JcNpnJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMqR!h$E^fDpL'
JcNpnJcLB&JcLB&JcLB&rW!$$`QuGY!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3n
!.k3&!.k3&!.k3&!<)s#L:"*&M#`,-JcLB&JcLB&JcLB&QN.,ocd"B:!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3n!.k3&!.k3&!.k3&!.k3&!.k3&!1a)iRIdfY!.k3&!.k3<!!?`<ZpX9^JcLB&JcLB&[/^3Fo?Z4m
JcLB&JcN"T",tRPB\*69!.k3n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3Y!!&GY
[+t_6!.k3&!3lM+6aX4Gec::%JcNpnJcLK)!lWF2p!8WuJcLB&JcGoRC!Y,$LB)o+JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&aoI"nK`D1B[']M5NW=Y2JcLB&"=^[aSHO]JJcLB&JcM>A!6"KT
o`0RDJcLB&RK*I\cd0W=mJqh=JcLB&JcLB&JcLB&JcLB&JcLB&aoI"nJcLB&JcLB&JcLB&JcLB&JcM>A
od0UEo`0RDJcLB&RfER(VR3WSm/V_<JcLB&JcN1YogA`)h#N$,JcLB&ZN(+Ubg4U#eGt1$JcNpnJcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMeN!%%WOh#N$,JcLB&ZiC41QaF+re,Y(#JcNpn
JcLB&q#CC^rm-T)JcLB&KE)#W_ZJ01GD-$K!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!6P:n!.k4H!!">E[#P-<!.k3(!!-uE!ORT7!.k3&!.k36!!#Ccch.9i!.k3&!1X#kR*X*blMuM:JcLB&
JcLB&JcLB&JcLB&JcLB&aoI"nJcLB&JcLB&JcLB&JcLB&JcLr6!%%WOo`0RDJcLB&SH&d=['[%RlMuM:
JcLB&JcMeN!(6b3h#N$,JcLB&[/^1orm(Qrdf=t"JcNpnJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcMeN!%%WOh#N$,JcLB&[/^;o['XDm!.k3&!6P:n!.k4H!!#Ccc]/!W!.k3)!!:$`cN'#Y
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3n!.k3&!;QTp-2t93!.k3&!/:IU::.C*
!!e,VJcLB&JcLr6!(6b3o`0RDJcLB&ScAn9cd0iNl2ZD9JcLB&JcLB&JcLB&JcLB&JcLB&aoI"nJcLB&
JcLB&JcLB&JcLB&JcLr6!%%WOo`0RDJcLB&T)]!+XL,?-kl?;8JcLB&JcMeN!(6b3h#N$,JcLB&[f?OW
cHjgWd/\auJcNpnJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMeN!%%WOh#N$,JcLB&
[f?M\['Z@M!.k3&!6P:n!.k4H!!#Ccc]/!W!.k3+!!KFMcc,s:!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3n!.k3&!;QTp-2t93!.k3&!/LUT2#ai_2ZSF0JcLB&JcLr6!(6b3o`0RDJcLB&
TE"slrm(RIkQ$27JcLB&JcLB&JcLB&JcLB&JcLB&aoI"nJcLB&JcLB&JcLB&JcLB&JcLr6!%%WOo`0RD
JcLB&T`>2tT!Ykck5^)6JcLB&JcMeN!(6b3h#N$,JcLB&\Gua9aNr2FcN&OsJcNpnJcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMeN!%%WOh#N$,JcLB&\GuV<rj2YNcN&OsJcNpnJcLB&q#CC^
rm-T)JcLB&M#[O3rm(X2!!%TNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNpnJcLB&
q#CC@rj7[cJcLB&M?!b_W3ip`rW%NMJcLB&JcLr6!(6b3o`0RDJcLB&U&Y<+c-O_>joBu5JcLB&JcLB&
JcLB&JcLB&JcLB&aoI"nJcLB&JcLB&JcLB&JcLB&JcLr6!%%WOo`0RDJcLB&U&Y0grj2YTjoBu5JcLB&
JcMeN!(6b3h#N$,JcLB&\c;_Qrm(R8c2`FrJcNpnJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcMeN!%%WOh#N$,JcLB&\c;i*['Z:H!.k3&!6P:n!.k4H!!#Ccc]/!W!.k3.!!C?hcc,h_JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&aoI"nJcPTH!%%WONW=Y2JcL]/!'L7f!(d%g
JcLB&JcLB&OoPJLrm16;JcLB&JcMPG!+GlQ!,ps!JcLB&JcLB&JcLB&JcLB&JcLB&JcNpnJcLB&JcLB&
JcLB&JcLB&JcLB&OoPJ.rj;=uJcLB&JcMPG"IHL&Ws@_dJcLB&JcLB&WW3#drm0C#JcLB&JcNC_"N/R3
c4S;$JcLB&aoI"nJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&WW3#Frj:J]JcLB&JcNF`
!%n2W!-$-^JcLB&aoI"nJcPTH!(6b3NW=Y2JcL`0!)<I=!1NfcJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&aoI"nJcPTH!%%WONW=Y2JcL`0!0$oa!$(n:JcLB&JcLB&OoPJLrm16;JcLB&
JcMSH!4i*T!&rs=JcLB&JcLB&JcLB&JcLB&JcLB&JcNpnJcLB&JcLB&JcLB&JcLB&JcLB&OoPJ.rj;=u
JcLB&JcMVI!$D3I!0H4@JcLB&JcLB&WW3#drm0C#JcLB&JcNIa!':,*!56PUJcLB&aoI"nJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&WW3#Frj:J]JcLB&JcNIa!-S:J!'/4&JcLB&aoI"nJcPTH
!(6b3NW=Y2JcLc1!20>;!*oC$JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&aoI"n
JcPTH!%%WONW=Y2JcLc1"/iN5WVQUH!.k3&!.k36!!#Ccch.9i!.k3&!2]`!!mT';c/J_T!.k3&!.k3&
!.k3&!.k3&!.k3&!6P:n!.k3&!.k3&!.k3&!.k3&!.k36!!">E[.OEN!.k3&!2]_r0`JEZM;eMe!.k3&
!.k3N!!#CcceSSQ!.k3&!58F5;#\c@\&n]&!.k3n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3N!!">E[+t_6!.k3&!58F5I/^JQ9?I6d!.k3n!.k3&!;QTp6iPDl!.k3&!0.$ZW;b*CEV]Ze
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3n!.k3&!;QTp-2t93!.k3&!07*\!il7,
!#>>1JcLB&JcLB&OoPJLrm16;JcLB&JcM\K!=-mKcN#KT!.k3&!.k3&!.k3&!.k3&!.k3&!.k3n!.k3&
!.k3&!.k3&!.k3&!.k3&!0R<^-2t:E!.k3&!.k3K!!"nUZiHo\!.k3&!.k3&!3-#!6iPEf!.k3&!.k3c
!!$(!cN)/1!.k3&!6P:n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!3-#!-2t:-!.k3&
!.k3c!!%WMZiGQs!.k3&!6P:n!.k4H!!#Ccc]/!W!.k33!!'5%cN(!@!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!6P:n!.k4H!!">E[#P-<!.k34!!*8)rj2Yaq#H!HJcLB&JcLr6!(6b3
o`0RDJcLB&VuQi-cMl,i=lB@4!.k3&!.k3&!.k3&!.k3&!.k3&!6P:n!.k3&!.k3&!.k3&!.k3&!.k36
!!">E[.OEN!.k3&!2okt3rQDc"lTH5!.k3&!.k3N!!#CcceSSQ!.k3&!5JR7?2`(L%ESU%!.k3n!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3N!!">E[+t_6!.k3&!5JR7M#Oa]SB(\^!.k3n
!.k3&!;QTp6iPDl!.k3&!0@0\[/SAOa7oXd!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3n!.k3&!;QTp-2t93!.k3&!0@0\W;a.(@JBhS!.k3&!.k36!!#Ccch.9i!.k3&!2oktc2Q#hLu88b
!.k3&!.k3&!.k3&!.k3&!.k3&!6P:n!.k3&!.k3&!.k3&!.k3&!.k36!!">E[.OEN!.k3&!3#qu)#^fA
/`6V\!.k3&!.k3N!!#CcceSSQ!.k3&!5SX80E'2s9um<d!.k3n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3N!!">E[+t_6!.k3&!5SX862e.j#KQms!.k3n!.k3&!;QTp6iPDl!.k3&!0I6]
B)U$U'DMQZ!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3n!.k3&!;QTp-2t93!.k3&
!0I6]H2b/NVtU1C!.k3&!.k36!!#Ccch.9i!.k3&!3#quV#J[?c//MQ!.k3&!.k3&!.k3&!.k3&!.k3&
!6P:n!.k3&!.k3&!.k3&!.k3&!.k36!!">E[.OEN!.k3&!3#quU&MD!Mr+Md!.k3&!.k3N!!#CcceSSQ
!.k3&!5SX8b5T]e\]4]%!.k3n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3N!!">E
[+t_6!.k3&!5\^9$2q42;TAch!.k3n!.k3&!;QTp6iPDl!.k3&!0R<^(]DY[H1q;j!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3n!.k3&!;QTp-2t93!.k3&!0R<^/cE$V,52(h!.k3&!.k36
!!#Ccch.9i!.k3&!3-#!:&WB<52Q?l!.k3&!.k3&!.k3&!.k3&!.k3&!6P:n!.k3&!.k3&!.k3&!.k3&
!.k36!!">E[.OEN!.k3&!3-#!BDo1;!oF!0!.k3&!.k3N!!#CcceSSQ!.k3&!5\^9Oo<T+"igUp!.k3n
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3N!!">E[+t_6!.k3&!5\^9S,TbpTuI(a
!.k3n!.k3&!;QTp6iPDl!.k3&!0R<^`W"0`b4Yge!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3n!.k3&!;QTp-2t93!.k3&!0R?\ZiGRK!.k3&!.k3&!0R<^6iPF)!.k3&!.k3N!<(4DWnm`-
!.k3&!.k3&!.k3&!.k3&!.k3&!6P:n!.k3&!.k3&!.k3&!.k3&!.k36!!">E[.OEN!.k3&!36)"'E,9<
:Yl)'!.k3&!.k3N!!#CcceSSQ!.k3&!5ed:./hHlG/aN6!.k3n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3N!!">E[+t_6!.k3&!5ed:0`A?Y0ZF*E!.k3n!.k3&!;QTp6iPDl!.k3&!0[B_
;>nf@;"am@!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3n!.k3&!;QTp-2t93!.k3&
!0[B_<rKB*(\Ri\!.k3&!.k36!!#Ccch.9i!.k3&!36)"If7Rm/`$JZ!.k3&!.k3&!.k3&!.k3&!.k3&
!6P:n!.k3&!.k3&!.k3&!.k3&!.k36!!">E[.OEN!.k3&!36)"K)N%V"5X$0!.k3&!.k3N!!#CcceSSQ
!.k3&!5ed:Y5QZH#fZjr!.k3n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3N!!">E
[+t_6!.k3&!5ed:S,TbpXMk0k!.k3n!.k3&!;QTp6iPDl!.k3&!0[B_`r=9acLh0h!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3n!.k3&!;QTp-2t93!.k3&!1Elm+&$O/V7FIOrj2^.0(o9s
!.k3&!.k36!!#Ccch.9i!.k3&!3uS0+%g0qRB*[>rm(Vh0&?S[!.k3&!.k3&!.k3&!.k3&!.k3&!6P:n
!.k3&!.k3&!.k3&!.k3&!.k36!!">E[.OEN!.k3&!4;e..r)QjaoKQ^Zj"7f_h'rTiW+Q1JcLB&JcMeN
!(6b3h#N$,JcLB&bl@eqA?#I:!5/9V"jFN`GWH&O!.k3&!6P:n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!3-#!-2t:-!.k3&!.k3s!!,^%prWTXrNlRBrQ52^Bai2cJcLB&aoI"nJcPTH!(6b3
NW=Y2JcMDC!Cs0b\H'MFcN))c\H93L$iC!V!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3n!.k3&!;QTp-2t93!.k3&!20An3jJD$!64uE!64oY!QA(;!.k3&!.k3&!0R<^6iPF)!.k3&!.k3]
!!,*Tp:11CrQbJ`qmca7;WRn1!.k3&!.k3&!.k3&!.k3&!.k3&!6P:n!.k3&!.k3&!.k3&!.k3&!.k36
!!">E[.OEN!.k3&!4r43*1c`E!5ncB!6FuY!P1;S!.k3&!.k3&!3-#!6iPEf!.k3&!.k4"!!+($oXOtD
rQbJ\q7-O-36qSV!.k3n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3R!!E?M8nt+"
ZiXi.,2`HQ!.k3&!7UuL2T>:1!5SQ?!6FoW!*[_LJcLB&aoI"nJcP`L"9Bi>A?,XT!anA>OT9t5JcMSH
!B%7U\H'hOcN(cT\H,b3JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&aoJUF!>$s9
!.k1R!!5ELaSs<^a8WIFao]M:30XDp!.k3I!!#jcaoK-R[.VQAIt@ZP!:9ae+9e,4`rH,c:qcpt!!<6d
LUd>o!5e`]rj`*;HoLp&JcLB&JcNIa!)E'p!6tJg!58*:!-RN+JcLN*"$6kj!.k3&!.k3&!.k3&!.k3&
!.k3n!.k3&!.k3&!.k3&!.k3&!.k3o!!Nof>)8;$^&XW&!X2cDqoSoZrj;RF!P(u(!.k3&!.k3b!!$s,
aoK$O[.MKAV$lShJcLN*"-AXb6NJ;5KE1$4"XHrr[D,tD!4)Y,"BVl*\H'MGchk6RX%_UTJcLB&JcO@%
!,1l4!7(Ph!4qj6!LX;D!.k3B!!U'NSS:.nlN#'-JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&k5YSq0Ns;1OT7D=!42_,5J?m8!6>)Gq8r`E1Znai!.k3&!7q2N@.25<\,N`7[e%WAT$m[k!1j/j
OSk4CEC1iPmf:K1[f?LU;1Z.Q^AqNi!/(=Q5-F^l!5e`]q7-O&17/&n!.k3K!!$9m\H'qScN)8_\H07(
KE-T(m/R."r4`?)Bfc]q!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3n!4r45&27:DplPP:
ec:C(!d`#3q8r]Xrj;FB!+_JtJcLB&VuQfbn&bXPrNlR7oZ@6Xb'/O>JcP0<!0Hu<"*$[N"f).I!!=KD
J[P9f!*m5<SH&Y0pUL:@rm1>L!FGhY!.k3&!5JR7612;^cN)8]\H$O6!.k3*!!'_3^\bbJSS:.pMu\G0
JcLB&JcLB&JcLB&JcNpnJcLB&JcLB&JcLB&JcLB&JcOC&!t[.iM"Hf03PGKc!!*V+p<!BUrj;CA!/pmZ
K)gK'JcNUe!%IE[!jS,LrNlR:n]Ci2m/V_<L&_48rfQr;"*$[N"cr`Q!!=KDJ[P-b!*lB$[f?F=QhIri
_Z%mT\H.6^l2ZD9JcLB&f`2"$n@8UqMhh8W!7(,F!)_8HJcMAB!58$>".a-f%JKkF!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!:p0m&27:Dn<!]2V?"++!>2U0aoKK][.VQBRf_mUJcLB&JcOL)
!=-4-ap">1(B=FUrNlWn4G<:J!&)n'JcMAB!0H]4"*$[N"oA;B!5ed=,Z0-#n@ns.ec:L+!>)%)\bWc9
_Z%mS\H.`mS,e-@JcMeN!=#Xs\HS'f('"=nrQbP_4*gP1rODn]LB)o+m/R."n@o'rBfcd*!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3n!65'A&27:Dm#_9.ec:O,!<oM$b5'0[a8WI<aoIKm!.k3&
!3-#!C%TOKXuH7Y!&4AY"Gm*Y*f9[7rQ5,CLB)o+m/R-Jm#_Bi6QcQ:!8dbY,Z0-#m(WO*^&Xi,!<etc
\H'MGch4gL\V,V9JcLB&_>jRGoXP!r2Z*OT;>nfD[f?CLIe:/NU$_o4!/:IR^&Ge8^B:$@3t7PWJcLB&
JcLB&JcLB&JcLB&aoI"nJcLB&JcLB&JcLB&JcLB&irB/m0Ns:rOT7DU!20AmL@`Ofa8WI=ao]`.BnZP=
!.k3g!!!i-aoGT@!!#LeZiG=K!!+srou[8'mf7q>L&_48rfQN/"*-aO"e5Si!!=KDJ[O^V!*lB$\GuVV
o=4k<rm12H!+Y?qJcLB&JcOO*!#P:<!*/jq!,VV[!29>k!Aq1V\H#"K!.k3B!!'^r^B'm>!BUb7!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!!N?&&27:DjH0F&V?"1-!)<%,!6>)Go#^qlm/V_<
JcLB&gAh5%ou[7tq#CD'rNlQ5qu?a;Z1c<?\^ph5!1j/jOQMZ/OcaZO+9g*lcN"%m;1Z.9^AqNi!/^aV
9DZ3p\H'MGcgnUH2kC#$!.k3O!!%-6\H"bf!!%iRcN&e!!!+(7qmlX8!3:nUJcP0<!57I.".a-f%CcCi
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!6P;j!!<cd>);+!!'/U1MZ<bjaSO'TaoKK][.;??
\,i3%JcLB&X8i5Gou[7gp](;,rNlQ.qZ$X)[/A)DaoGFu!.k4<!!&,>OT^ibM+\Dm!:'Ue,Z0-#i4f7s
^&Xo.!>2g3\H'MGch4jJ\H&Xa!.k3&!5nj;,k\\J0_bVJOo<T+JboEJ$E!O-!)i:dJcLN*!58BHj1b]f
]kJ:Y!.k3&!.k3&!.k3&!.k3&!6P:n!.k3&!.k3&!.k3&!.k3&!:Kmi&27:DglVRs^&Xo.!-[nT!6>)G
oud6U!*4jTJcLB&_uKd]p<!A.pAb22rNlQ(q>^O>aS3gW\aTTN!/:IROT(C'OT:RC]E>Eq9+\6+"XHrr
[D0K5^AqN9!4r42D=P.:_Z%mO\H#Rr!.k3&!.k4+!!$p1\H#1p!!&GccN&:f!!+7PpUL:)fDpL'ScAc(
k.gf.rT44@]kJ;8!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k30!!<cd>)<'<hN7duV?"7/
!#4qF!6>)Gn]CmJ!q-,@!.k3&!8IPS^A#bMEqTJ5FoAZI:&+bh3qg\r,M<'K!1j/jOQM]'OT:R?]E>Eq
9+]kYgAh=$;1Z.-^AqNi!/pmX'DT-6\H'MGcgeOHYlUKtJcLB&X8i7(pUL9=p&G)crQbIbq#CCTrOMd8
!$d@$JcP0<!57=*q;qe<]kJ;$!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3n!8dbY&27:D
e<'_kec:X/!+#BBq8r]Xrj;1;!(3CZJcLB&aoD_S*&C2sH&S5jKC/^>./(d`&bZ2)I/UDP7ecr`T`3+1
aoGe+!.k4<!!&,>OT:R;]E>Eq9+]/EpAb:@;1Z.)^AqNQ!2KSp=n&s%_Z%mS\bru<6&5Mm!.k41!!riE
-Tb19GDDH#mJm58p:1/7p&G)krQbI[p](;XpUL9-nGn.@L&_4erkIL.p#ZA8]kJ:e!.k3&!.k3&!.k4I
!!riE-p1C<FbGopP5p17JcNpnJcLB&JcLB&JcNdj"T\oM3aiZ=!.k3&!.k4J!!<cd>):Uh!gB'`^*f^(
!5%aC!6>)Goud3T!1AWCJcLB&k5YVfIBg;rpV-]\mf3?"pW<JCp&G*pOo;WeC\T7W;YS<6\+(ht-\`uN
R[9/!jH0G*n[nt/M+\E"!!=KDJ[P*ai4f?0`K$fa]L;h(n@8P9rm1)E!0-FIJcLB&JcGrS!!?o-WV3Fo
D=7H)@/%23>4qps"MXi\!1!=J!+Yc6!3FjBJjl8"!QN(@^\be9joaSUBc#h1JcLB&JcLB&JcO*s"9W>/
V5j9j!,]XSJcLB&JcLB&JcLB&JcLB&jo>JlOMKfKjo?$q!.k3&!13`g&27:DmucUl"I,[_XIlAP]o`;d
n&bXNrj;.:!!hunJcLB&JcGiP!0m)i!']iO!4;LC!"Sc(!s(cMWr9:)T_FQK_"YtOS(a!VOe.[;X/r7i
l&kn+!0Z`^"0m\U&Ej,W!!=KDJ[Nk>"N&@-cH4YPNP>J,pUU+1!5e`]n$rE&T`BZEJcO*s!.XUB!&3jA
!2fM$!"J]'!s*)JcMc&hanNOO]",BI\H'@%^Oj5f^B;d,c,\kZmH+N0]kJ;0!.k3&!.k3&!.k46!!%K>
WrOlU!.k3&!.k3&!.k3&!.k3&!!3-#/+_ne!.k3&!6P<-!!<cd>):Fc!LKebX8nmDOc>J'XS9m5aoKK]
[-u-;0;/At!.k3s!!&S]^[D.&#5?7?U%eTj#&o]eX8TC*TD+HLZ-(5baoJ>tOb/__OT;H]X8nsUOT:R/
]E>Eq9+]YS!@1MCJ[Nb;!6"i]!6MsiV8!#Bn$rG8rm18Jqmc\[M#`,-JcOs6!/U6Kmf3=kpUL9hp](F-
S%l_`rQbJbpV-^?pUL::o"TdkL;3]4!6XB;l/i*,]kJ:q!.k3&!.k3&!.k1P!!%cFX-3O8!.k3n!.k3&
!.k3&!.k3s!!#1Rk/.1N!.k3:!!!8r%L!k8AWE%@b`r3pWVrmuU:unhPlSA`aoKK][.VT=aoGk,%Y>1B
%d+<&/TC]I!Md:'^AtJ+%KIgLaoG]A%KL>EPlRrbZiHcnPlRNPaoJX9Q%G9UQ2RcbXJ+dA!LCF]]E>Eq
9+^Fi!!Mp$"#42E]B@&l_?%R"rQbJeVS^$`!5%^1!5e`]n$rF(n-XaSJdR):!t#AZ>lJmIOK85[!1rWd
!$_0J!*K"'!1*W$r6GAcpVHpGpUL:;g;8HYT#1EO!6XWEr5&KPkN:n/iOrqAn,WCe!!Mp$PQ6:8iW,YZ
JdR):cO'[t?2esINMu]S!1N?`o`4aol2ZD9JcLB&JcLB&JcLB&JcOp5!!N9@!E%ACjoBt5!.k3&!3cG(
"ag!A"1uk!^>lle]E#M?[K*k8]Y1uGaoKK][-u-;e*s8eVh1guVtd.i]DK>C[dU*ochGQ^chXI=aSiaO
[f*Q5](Wf2aoKN:]Rmef]E#A;[K*r+]_f>Cc,[QZ]E>Eq9+^^q!rr<'B(qPmbkM/'`o[9Wr7(f'f&htS
!6"WBq7-LBrm1&D!6h.%JsCqQaHZb+qlKjrn!*mkpUL:Cq3:sDrT4+1rQbK#p>uCe\bWc9cAUh:k3_=/
eH"1^joY2DkN(b-iOrqAnc/[mB(qGh>U]CJJcLB&q>cA8Js(_Ki0")=ql9^lmudZApAb1_q2t_BdK"k!
JcMtS!"/I/!B^_J!.k37!:XEK@=hp>@JF72e,/8-[I7N(+SPj9*r04E*4c-%!.k3n!!3-#J,6&F]?\I2
_RolXr3cU9f"@!Tp<*3R!6>)Gn&bXVTr3L?Ju?\f!4i!A!3kpi!7pne!5eQ0!6>&N!4Mj5!4qm:!QiL[
aoKPA]Rmf`]E#A;[K*o$]E6@&aPa]5Z&)*bp&G),qNV0,p]'RRk02rffDO/!h7i$JjoE0b\H'MGch4jG
\H'U*Q%G9QQ/Io-Wr&muTC8$FchFsM[J?'fs8D'[eG[\nhtH14^\G>>b4=\Hk(`$seH4:Ohra&&o^qY2
joaSUBc$IC!,;:m!F.&/!.k37!:Z/'P(JjKP5(1?VYdCoSF;U@0D>GH@/5tr!.k3&!6P9C!!!N*@0&It
NW=Y2iW,Z\Jmj7>aC,(kqrRm7mpQ2)pAb1Rq-iLfJcLB&RK3?urMKb0cH!Zj]Ze%c[K*kP]VW:/aoKK]
[.VT=aoK\CVh1guVr4HQ^AG\5VZ>EEaoJ^BVZ=R3]E#D=ZiI]2]_9M=]RmeN]E#A=[K<nG\`UR(blGN7
]E>Eq9+_"$rsSdj"3gN>leCR`joFN?eH"F&k.TmW]C391_Z%mM\H'J8Q%G9QQ%G:rQ27WNPlT>.\H&;u
PlU=PjoEp0cN)krjoE<o\H'V&k(;`ek53[/h!F2#k5OuQkhYA'iOrqAquHa)rK71d.#J"V!9+!PP(JjK
P/rddWr&jbOoQ*g!!%KDP3Dsu!.k3<!<$=,4::TYJcLB&q>c@\Jmj7>i*cWDqr[<T!!2fo!*&c&d/\au
JcN(Vrtk[4!lN=%ft?FZ!5&-:!4eu>]tEdU!6>)Gn&bXTn>Cl9Ju=3uq544pqnE-Dm\^'<pW<K;q545.
rO`-=rNlR9p:U+Ag:W$MT"G'2r3cU9m(E5.rlkGYgq3a!RpIrM!<3]2Plfe@pq5bdeH"FVk)JL'](`c2
\H'MGcgSCE^nI$FQ%G:CPlR<NXT5HjPlT>.\H&)oPlU4MjoEs1cN)hqjoNH3q7-LDMroWRmH4;r!8Q`!
rq$3Tgu\_#c%J[e!<3]2Oo\5ln,S%?JcPWIM3<IRJs,)U!1<Ya!3,CL!"8N$!/LB5d/\auJcN"Tra>gV
"5!U*!0[EP@=hp>@=hq`@/tKJjoF$$@/p?&!!$7!@CZAi!.k3n!!3-#Qi*``Wl*-#^qBQQ!4g[nNP+u-
q8r]Xrj;.:!7%:9Ju=3uaeo-FqnE->m\^';pW<KKq5453rO`-=rNlR8p:LFJb5'0[ac!f`]^<?3[J[H5
\`UO+c-=Ji]E>[5?6T%C!.t-6"/"EKq"<dnjoF!1eH"F>k,%2?^$iK3_Z%mS\bio;_hjY1Q%G:[PlRTV
XT59ePlT5+\H&f.PlUUXjoEs1cN)epjoE6m\H'_Ak(;`Mk5Eg3e^`O=joY2IoAA[4jirH4pAb2Dr/q,9
9GZC`JcLu7n</BdJs(_Kq2t`Nql9^lmZIPrpAb2.q3&8gJcLB&aoDJC!&=C[!aI/VN<"P1iW,Z\Jmj7>
a^G1@qrRmbmU6)#pAb1\q-iLfJcLB&QiI.>U%tSgWl*-#q7Oqa!4_s8!4fhVV7c6=!6>)Goud0S!7?Y$
Ju=3uiMQ[dqnE-7m\^'4pW<KZq545<rO`-=rNlR8p:U.B!6F`DK"QiN!4Dg7!k,PLk.Cc?c,&GQ"1Xh,
+nG[7,EDSb"/"EKpu1ArjoF06eH"F&k.TmW_XG#8_Z%mM\H'b@Q%G9QQ%G:sPlRf\XT4s\PlSo"\H'G@
PlUXYjoF!2cN)epjoE$g\H'n.k(;`ek53[/j6Yq*joY2IlJgq-c%IeD!!<3$,`DJ]!esAaOT9t5iW,[8
Js(_KacZY#ql9^dmZIQ9pAb1hq2t_'l2ZD9JcM,;!)*,r!aI/Vp],mGJcPWIM.)!EJmmVH!6"cs!/0cK
!#bM2!%7SN!!q!QJcLB&Y5eS06M=(T:0VUujeCh1!2]Ut!3)ii]qPMCn&bXNrj;.:!0cnGJkUbiJkYu6
!4Md>m7[LipW<J]q+LfbSGo5_YPkg.WqW4fVt\=6\_<d0U7S+WYQ1cjUALYc_S,*E"1Xh,+n5R3!!*9\
p,rLGEhL7ic2c5gdFQU&c2bZS\bWc9_Z%mM\H%S^4b>hK4ioheW;E^a4TJRX\H$UE4TS!orltMkrQbJk
pW`ia\[hOH!5sf@K$Nc/qpFNN!UAk0joWe\0^\oA"uc0=!B:G`!.k3&!;Z\P5(YtM52e[*V#.4[4ocPq
!;SeY2pq\X!.k3&!.k3&!.k3&!.k4H!!'V-k)fXq!.k3n!:9ag!ZF17bE2dqrN$!kerbrS!3u:@q8r]X
rj;.:!'HqTJcLB&aT24Q!3,>c!"AVE!/C7K!$;-%!3,q(!29.L!isJdq8r]:MiiURm?%CLri?-tP3.l,
P3BO\\=$YHf`2*V1LZKj^Au@Rc2bu#^SS[F]C391_Z%mS\bio;4,Erh!.k40!;ikuQgFbQ$hq13Hh[R@
3W?bnc2Grgb4iXN]D&i9]^igh^P9N%c2l2*jhL!@!mH<O]`<WaJcLB&JcLB&q#L;m!0rZHJcLB&aoI"n
JcLB&JcLB&aT25#!,97LJcLB&JcGlS)*DTXOT_2RXK8&.Oen0?U[Q>*a8WI=b59<]'o;pB!.k41!!#4[
^ArKE!!'b.aoKET!!=-bOf85c!2B4M!5&!J!2/nFJrteM"08N)U]?V?OT:R2]E>[3?6R\r!s:8dPO6-E
^Au=Rc2bt`^V.A^^$iK3_Z%mM\H!?5!.k3&!.k4I!!"_MXT2kt!!'4t\H'#2!!>!P^Wl`'!6Y&N!4qp8
!57+$K"mnlrltPf_!8]3^[("`b_.\7!.k3&!.k3&!.k3n!!"bNWrQYG!.k3&!.k3&!.k3&!.k3&!9!qT
jo>Xc!.k3&!1!Te!Z=+6nWDdm"-T4MN2Bmn>l_q7aoKK][.)3<ZL7dF!.k3&!;ZZqKDWC`0'iQ<JG71d
4n\jV,FJG:!0d1`!,VDP!6!PrJmFsR!i)EUk`Pe*!0Zia"1Xb*+lr^c!!<<X@?]'Q!lrKpeqK':!4Va6
q7-LBrm1)E!2Q7fJcLB&aoDEYqlKiCli7$0pUL8dp&G+X`;S!^_"`T`N;gBa\H''qKn>$GK`]H>`8\Q#
joWb[0[0TL!.k3&!.k3&!9*tYD>U@6,cLcq!.k3&!.k3&!.k3&!.k4I!!!Z/k)]Rp!.k3n!9!n[!Z=+6
dZFMiec:X/!.4L`q8r]Xrj;1;!*l/sJcLB&aoDFDqnMFs!'9ks!4;D!!,VV@!*8jp!-8(]qT8e_M?&5.
m/R-JiK4,'oXk:9R9h&Y!;QTs"#45Jd_>ce^&Xr/!-@Y?!5e`]ost"2!*G$WJcLB&iW&tKqlT/a!'0ea
!2]>g!1*T0!.FVB!,D8=!-%H.JcLN*!58BHj1k3J!mH<OYlK@UJcLB&JcLB&q>^M`ql>eYJcLB&aoI"n
JcLB&JcLB&aoDEfqrYZoJcLB&JcPHD!s0?&B\&:G3PGKh!!"M<aoKK][.VT>aoE35!.k3&!9+"U^At8!
!!!5saoG00!!$U/ZiFA,!!")6aoF<h!.k3*!!&,[OlVW)P5)Zl\=$YH\Gu^60k$:A^YZ^*>c%M6!!"M<
\H'MGcg\IF(%2-S!.k3&!;Z]mXT4^R!!!2r\H#:r!!&)YcN&Un!!")6\H"J>!.k3B!!'^p^\be?joWb[
0\l_\!.k3&!.k3&!6P<=WrSF#!.k3&!.k3&!.k3&!.k3&!9*tYjo"6@BrD#`!.k3.!!<9?4D=\UhN7du
V?"4.!2/l)!6>)Gn]Ci[mJqh=JcLB&qZ$UYqnE,Pl2UgKpW<NY,PM0<>5bf.Abc<+V>&+5a9(#pJcMAB
!0H?*r/guBr4E-AR9h&i!8.>S">O>Kg:mVmec:U.!0d5hq7-LBrm1,F!-Fh5JcLB&b5_MpqlKj*l2Ug?
pUL=7,PM0<Jc3mpO8/bURJj\n\H0/@M?&5.m/R."i4o0O!mH<O_#T&eJcLB&JcLB&irB'4ql9^)VuVDL
JcLB&JcLB&JcLB&JcPWIqrRk^O8sk4JcNpneGo[Q)*DThOT7Dm!/ggW0)<ZcaoKK][.29=)P7"]!.k3o
!!%TI^Ao_J!!#+SaoSpZp](:ZrNlQPq>^MFr6"oZ!-a8"JcP0<!0H0%"d6O.R9h&M!:9ag"#45JhS0%q
^&Xo.!&!fP!5e`]ost%3!#gUmJcLB&irB'pqlKi?l2UfFp:14&$hs]%Ac9pTW;6JoFnW?GDX[XX!/:IR
^&Ge,^BE]]b_.[H!.k3&!.k3&!.k4J!!$g3WrO<)!.k3&!6P:n!.k3&!.k3&!6Y?B&GtV)!.k3&!.k48
!!<9?4D<`:!'.anU&Y1>o#^sQrj;@@rlP4HL&cf*JcOg2!3Q.5kPtU_p<!E-&GZ;+.fH^SNr&eVD"YpN
)"7NW!/:IROT(C)OTU/4.NtJc!s:8cPN'=W>c%M4!!%$0\H'MGcgnUH=mZ3@!.k3&!;c`rS,9>O!!&S`
\H.j(q#CCcrQbJUqZ$V-osk&>fDpL'ScAc(k.go1"0Ql>0[TlP!.k3&!.k3&!6Y?BR/<r!!.k3&!.k3&
!.k3&!.k3&!94%ZG5LF"!.k3&!.k4L!!<9?4D<l>!'-nV\c;a9\+@`Ba8WI;aoJ4'!.k3&!.k4J!;jM2
WTX<^2"eul\gR=S!#PU@!1Ecc!==t_aoH/-!.k3B!!&,DOT9q6;CW(!!6kKG"#42Ik.^n$ec:R-!=#P#
\bWc9_Z%mQ\H%qd!.k3&!6YB>XT4^O!!"hJ\H/cZq>^LJrQbJ^r;Zj(L\eRZ\H$,q!.k4<!!'^q^B:W`
8/nr:JcLB&JcLB&JcOg2ql9^^VZ;;KJcLB&JcLB&JcLB&JcPZJ!9F(?!,7JoJcLB&aoKN`!s0?&B^1][
3S"1e!!"DDb5'0[a8WI<aoT3lSH+6AJcO!p!'0qk!-76&!0m,u!F5m,!!!9&ZiHm#!!,?nq9&ZY!Q>J'
!.k4<!!&,HOTU/4.LWK]i;`r^0jp41^AqNQ!20Am-hFkK_Z%mS\H9=F'nlX>!.k43!!"VJXT2\j!!%iI
\H,h9qu?^0rQbJerVus`W:d\%ZjZ=&JcLN*!58BHm_8k,GXrgB!.k3&!.k3&!.k4K!!"VJWrQLf!.k3&
!6P:n!.k3&!.k3&!6YB>jo>S"!.k3&!.k4,!!<9?4D=/F!'.anTE"sPoZ@0Srj;@@!QHMW!"03(@<mm)
X.kVp:^iusJcLB&j8]11qnE+Vk5YK.o?%-L9bdO+!4)U2"0;\eW:S.3;sjX;!/:IROT(C5OTU/4.LVLA
o`,'r0jp45^AqN9!4W"/3:s`]_Z%mS\H0,dnGi^u2c!t/M?TE/G[<W@L]E#,JcP]K!,DD5!#t)$!%%6I
!jG<2r;cfB"3q'0SFa8k:t>Vu!1j/j^$i]<Y'<JWquFk>JcLB&f)Q0a3Da71LmO*F?U4t-!.k3&!6bEC
CAY%3*5;K*!.k3&!.k3&!:9ak!=9l8DbhJZScF?BJcOj3!"SngV>u2JJcLB&nGiXm)*DU'OT7D=!4Mq.
3VCMpa8WI>aoT=-oDet/;N%jX^\bbIThtiK!.k3&!;lfsXS]co!!#peaon_I6nk\?[.29=N7@o[!1j/j
ORnS:JPms*p]/G:_#OQ>0jp49^AqNi!/COS3;pD`\H'MGch=mMYpo;F!tdkCU%PMgNBt,UJcLB&bQ%X3
qlSr[!)N-q"J&OZ0[BXCoXXt3!.fk)JcP0<!58!="0Ql>*2rpi!.k4B!!<g#FeA?-!K0:=!.k3&!9=+[
Qi!h\!.k3&!.k3&!/^aW*0g?_qrRlMM#`,-JcP]K!-.nuNW=Y2JcNpn]`8-9)*DR*OT7Dm!/:IU.CmUD
q8r]Xrj;FB!N[44!!+mFn%Sn5E4c1&!.k3p!;jM2WT4$ZFRI9O]D]):an<dYb0$pmL&cf*m/R-JpQ5Q.
;CW'N!7_&O"#42Gp:gT4^&X`)!@b)D\H'MGchFsNTGmJ'!@NZkXT>D+U]>uHJcOj3qlKjbj8]0rm^W>B
rQbJUo=4mr"ml;A!/:IR^&GeC^B:T_80!ThJcLf2!@WWqX8/dsV-T#[JcLB&quHVp!0rQEJcLB&aoI"n
JcOR+!'9T2!PeiN!.k3&!6bECj8A$>BtaS!!.k3&!7:cK!Z=+5qN1b<^&X](!=XSTaoKK][.qcFD#aS1
!!+C?lb<FkV#Z)IJcOm4!&sei!-7r:"r]R/I:bDIn,NHZn&bXFrNlRHoZ@3Q*:*ZW!/:IROT(CAOTU,3
.LV(5kl:ef0jp.?^AqN9!4;e-$[DHW!5e`]ppgB;o`,"4O7fXLXT46<!.k3&!;ult/,QFK?Ma^,'.upk
;_&1D!!&,L\H'kPcN(]O\H0&We,Y(#ScAc(qnE68GXrhD!6P:n!.k4.!!++!l`1#@]`<WaJcO$q!%[rI
!+5U'"r&[aBN-Jgb5d+oJcLB&JcLB&p&G(elfJ14V#Z)IJcOj3qrRk^p](='!O2WV!.k3&!9F1_!Z=+5
rfI1@V?!q&!B."TaoKK][/.oGRjn"1!1i_rp:gU9NW=Y2JcP`L!.Og[!$M4?!FiA2^B1j.)=mh/%^5BE
!5\W@!6FfT!&N((JcMAB#*=t0J5Rj)li>0.[/^:20jp.C^AqNi!.t7O2#s6E\H'MGchb0QO"'`%!/]pA
!2mO2JcLB&bl@`WqlKi8r;ZjpU&(kmW.,KP!!*P'n@8PArQbJ[osk+615#XZ!:9aj]t_=aGXrgF!.k3&
!;HNoL?PZ<US\$C!.k44!!$^0WrO%9!!,rhqPs[nIM9-iJcLB&JcLB&OT5AGoB,c/!4@geJcLB&r;Zg,
qr[eV!<JG]joN%DSH+6AJcNpnYlFk-)*Bq1!.k1P!&T`6aoKK][/J,Ka+,Z2!!&eW^Atj[!.k3&!6kKD
X8B[2!!,s!rP&H9K;ZH_^B(lbo)Je!Pjulr`;R%C`qIOT])X73!.k4<!!6%J$^h":!!<<X?sLDGR/d7D
K)E.Z_Z%m[\H93`.f9;A!!&,DXT5E"!.k3&!9F1\RJX,c!!,BTrN--iD3b(%!NKGs!!*F_n[SY@rQbJ^
p:14+.-^ea!/:IUGXreSJcLB&OT5B@o;hPb!2kkXJcLB&r;Zh`qlB\r!CE1PWrn`+P,eM^!N'1q!.k3&
!6P:n!.k4/!!#mZjoE]A!.k3&!6kKDD>WJo!!%3Ajoj^d&n0_tjoNU-cN&OsJcLB&JcM,;"UR/&TY&8D
Zimq-@ke)^!;HNoPPMs#[=`9l2&ZTEBUca3^ArPX!.k3&!9F4X^B:G8!0I2p!eWfBrVusGX8Td6X;(7+
!,_;L!64uE!6"WS!ML.j!.k3&!.k3&!3ZA+#WH7WXht(`"KRMg0`pkF!.OaG"f?-=5Ud?K!Zb9qpoOO,
O8sk4JcP`LqlKse!!%BFXTE>r"9&9$*LZl.!LaSk!!$[&\H'SHcN)&\\H.s-d/\auJcNpnJcLB&huEb*
q5XjsD-B4S'ET=VKW=jK!+`kFJcLB&blIXA"-iidHN'rHD)MLq!!+.,rMosc&CCK0!.k3&!.k3&!;HNo
.J`*-Y7^p7!!30\iVDU9$)diU!.k44!!)'Wjp,T#!$p^hitD4h!,_\s!-,LKJcLB&JcLB&WW3#Frj;"l
!.k'_!k!b:qZ-Qp!B[U_^Apoh!.k3&!<)ru2>b,mEY51`^SWma!!#^k^At2&!!#abaoKQ^ZiIu<aoHY3
!.k3&!6P:n!.k4H!!#Cccg1W3C](:9VJmjU!!+^Hq5jWZ_#T&eJcO'r!%IfI#$qb&Xf[d9q#CCXrN-'b
nc/Y_o=4k:rQbJdppgHD!!%TNJcLB&JcLB&p](;0r2TmnE$k;Z!A:#?WrP;^!.k3&!9O7].Jp.M?O`-u
X-"k,!!#4]WrS<n!.k3&!.k3&!0I6]&,bPjY8-m6qu?_`q<!b=JcLB&r;c`W"U+m3k2otD!<)$[@A*[Q
!.k3n!.k3&!;QTp-2t:<!!%$<^B(T9o)JdnS,0l#[h-CVJcLB&c2[ilqnE7o[_K@hp&G)jrP&>bnc/\-
J+^qaao/RH^A>tQV(hlKJcLB&JcLB&OoPJLrm16;p](;"riH3p5k=sV!f$QR!N?L-!.k3&!9O7]BD\e6
/Z>eO=S;^pQ2RfbD=RZ-(j5J]rQbJfqRHWp0]i@e!.k3&!.k35!!$@)Wr\eXp]13l!<RrNWr]%*OoU(6
JcPcM!,)20">-FMVHWZn!0[;]!,\G1JcLB&aoI"nJcO^/!!N;`!0ZjP!''i;!5?8LJcLB&c2[hPqrS"]
\E:p8p&G)$rT4(mdK"k!JcLB&JcLr6!%%WOo`4ae"(AsZKC8d?WqsI1E2ini!.k45!!'"o^B(nqo`+tG
r4`5(nGiS9PkN6"\c/r9])9\OZp*ONJcLB&JcLB&WW3#drm0p2"&H&$D>!u+!!&D_XT2Rg!.k3&!<)ru
Qhd`aX!%'8!%%QF!'B]N!@<Qq\H'qScN)8g\H/QjbQ*4pJcNpnJcLB&huEjUX/g++!!&;\WrQDA!.k3&
!6tQEQ2.H]V]k^5!%.WE!'J^1JcLB&JcLB&JcPQG!s.QE'(5f#C\m/n"0)?Q!.k45!!$a/joEa!!;tuj
!.k3&!.k3&!3-#!-2t:<!!5o_"SDck!!$-t^AtF"!.k3&!<)ru^A5MD5k=sUWVsR3ZL7bp-uZZlaoK-S
Zj!n\b/T3!aoI"nJcNpnJcLB&q#CC^rm0p2!^;2;mJm5WqQ0ag_>o/fJcO'rpoONOo)JcWrN-'omf3D;
BWLs>!6tJg"M)(NHoq0)JcLB&JcLB&JcPQG!^D5;mJm5XqPsUaWW7VNJcOp5!35jq!&X9I!1!M`!2$k'
JcLB&JcLB&O8o89oDn[eqW7d+OoU(6JcPcM!93k;!9<VM!,;Do!10G\JcLB&aoI"nJcPTH!%%WOli7#(
lMpphqS*"R_Z58gJcO*s!&OGc!*Jdl!1`u%!(Q>U"!V$E^&?(R_YphBIkgZtJcLB&JcLB&OoPJLrm16;
p](:-lMppWqQ0`8WrR_OJcOs6!%7TE!(ZS[!/LKS!''?G"!Um5Y5Pm2b5KWeI50UZJcLB&JcLB&OT5@q
o)SRd!1`nd!#h%$JcLB&!WW3Kq5XKdnc/ZDr2TfYU]>uHJcNpnJcLB&aT)<sqW>WpJcLB&c2d\&nGiPN
r8uH.JcLB&JcLB&OoPJ.rj;=ui;`jlqS*#_WrR_OJcOs6!.+LV!-%H.!/UQf!1i?S"9B#U/T(Hn!$9ts
JcLB&JcLB&WW3#drm0C#q#CCpqQ0a7P5p17JcGiP!+l#/!*o$o!-A(?!/Th=!tHG)N;_'&35trM!.k3n
!.k3&!6G3@=8JrtD8Q@*!.k3s!!$U,WrQGq!!%';WrRn(!.k3&!.k3&!.k40!!!)sjo?$p!.k3&!9X=^
$Mrlb"RuHl)#WLr4hLcH!.k3&!.k3N!!">E[+t`X!!"YJ^As[c!.k3&!!3-#W;F=0KCAj@E;RBM'BT8p
./gLQ35trM!.k3n!.k3&!;QTp6iPE^!!"8?XT4$l!.k3&!7(WFQM[caD=@N*>PkN&&*<il7fCX5>P8&K
!.k3&!.k3&!9!nX,l4PAJu\m'!.k46!!&8\WrR#+!!$:$WrN[D!.k3&!.k3&!.k4G!;bgX23S#l!.k1P
!!$U-jo?%`!!!,uk+i!/!.k3n!.k3&!;QTp-2t:%!!!T,^At7N!.k3&!7(WF^AP_H\eOW6!)NL,!/'D6
!"Ah5!*JppJcLB&JcLB&OoPJLrm16;i;`idqQ0aaWrR_OJcOs6qlKn"&F]Z"5PqP_D<:fu*rXCbJ)10W
!.k3&!.k3&!;QTp%/R")P`l*!!.k1P!!'%sWr]+0n,NGRql9^6V#Z)IJcNpnJcLB&a8l)!!,'1LJcLB&
cN!t(r8n",mK!.H!#!f^JcLB&JcLB&OoPJ.rj;=uhuEbkqnE-<WrR_OJcP!7!&4;b!0?RK!)3:)!1DpK
!3cC/!/o\6JcLB&JcLB&WW3#drm0C#p]1/m!2PeYJcLB&!<=GCXT3\9!!#1ZXT4%9!<(4D\]+W$!.k3n
!.k3&!6>-?Wr&gsTu-k^!.k3t!!"ACWrRG6!!#4[WrRb%!.k3&!.k3&!.k4/!!)!TjoD6Y!.k3&!9X@Z
jo?Un!;kmY28'!A!.k3&!.k3N!!">E[+t`W!!'M*^Atp1!.k3&!!*(EqnE+mmf3?'qnE-1jT#:Drj2['
`W1SjJcNpnJcLB&q#CC^rm0'o!3,jt!3F'<JcLB&ci=&UqlKiNmf3>hqlKjbjT#:qrm(Shp&K[EJcLB&
JcLB&huEbRql9^rWrR_OJcP!7!+Yo,!&!^?!*T3"!0k.sJcLB&JcLB&JcPQG!5A?m!83P9JcLB&!<<E&
k3`3L!rM*[B;GT[!.k3n!.k3&!;QTp-2t:$!!'1u^V^&'!.k3t!!&qp^Atb2!!%ZK^AtY&!!$."ZiC@*
!.k3&!.k3&!0R<^6iPF)!8mhWSbfIh!.k3&!9aC_Q2I`aWU9`dD>UF8Uu_RVJ,R[n'AieA!.k3&!.k3&
!;HNoRJNtJ!.k3&!!*(_r2TgomJm6(ql9^jV#Z)IJcNpnJcLB&a8c3gqW>ZqJcLB&ci=&Sr8n!nmJm5"
qrRmTeGt1$JcLB&JcLr6!%%WOo`3nM!3Z15WrR_OJcP!7!5ABG!2Jr^!0mAq!5.Cn!$qNM!%m(.JcLB&
JcLB&WW3#drm0C#p](;bqQ5q]JcLB&!!)nu!0HUK!.XmJ!3G8^!'pM/!):K6JcLB&aoI"nJcNjl!1E\a
_Z58gJcO-t!35st!0-CH!.OgG!3+KKJcLB&JcLB&JcO^/!.F_+WrR_OJcP!7!9!e;!)`.a!%[s/!85$c
JcLB&JcLB&WW3#Frj:J]p](;sqS/3oJcLB&!&"/`!.O>9!29;)!5@Op!!E2,!+EnJJcLB&aoI"nJcPTH
!(6b3e,TK>qQ7X8JcLB&d/X.kqlKj3mJm6IqQ8iZ!!rPL!/U@LJcLB&JcLB&JcO^/!1E\aWrR_OJcP$8
!$qHB!,1d#!/p]S]`<WaJcLB&JcLB&p](;BqW<tAJcLB&!!)oY!"J>r!)*4O!90gTJcLB&aoI"nJcPTH
!%%WOe,TKOqS0oJJcLB&d/X/iqnE,#mJm6gqnE-<j8]1Krj2ZhpAfdFJcLB&JcLr6!(6b3o`3nM!1itg
WrR_OJcP$8!+Pi-!''BH!1Nee!2SZU!6+r`!5RIlJcLB&JcLB&JcPQG!1E\aP5p17JcGd[ql9]XmJm6R
ql9^jV#Z)IJcNpnJcLB&a8c3gqW>ZqJcLB&d/X.Oqr[8G!-.nu!3"EJJcLB&JcLB&OoPJ.rj;=uj8];b
&g]H=qS0'2JcLB&kl:^\qnE+<mJm7$qnE-,j8]0prj2[-hZ/6.JcLB&JcMeN!(6b3h#R?Q"9K&Q.\6F<
P5p17JcGe7qlKi'mK!*c!0Q=B!0mK/!7&UbJcLB&aoI"nJcO!p"9K&R.[g.6_Z58gJcO0u!0R/Z!!hol
!35ps!0>Y1JcLB&JcLB&JcO^/!.F_+WrR_OJcP$8!+#Kam/R.DqrRl[]`<WaJcLB&JcMeN!%%WOhuEfm
5AUIaWO'+JotQ[jJcLB&!5ABG!42(n!&+2`!0#t=!&je_!"[-NJcLB&aoI"nJcPTH!(6b3huEun0j&dh
UT(?fXht-j!.k3u!!'+uXT5-a!!";@XT3S+!!$+!cN#3b!.k3&!.k3&!.k4;!!a&j>'cF+V5j3hWrR_O
JcP$8!35st!28f\!%%KB!-PsTJcLB&JcLB&K)blQ"XI`P_V=/Fk*#ds!.k1NhYcL9U$VjVjo?Eu!.k3&
!6P:n!.k4H!!">E[,_2h)gem)mD$O=JcLB&dJs7oqnE-#mJm64qS*#Ej8]/jrNlPbp],mGJcLB&JcLr6
!(6b3o`4I]!Yf7?m&d;gJcLB&l2Uf)qlKjQmJm5tqQ0`tj8]0(rQbIJhuJ?/JcLB&JcLW-!u5F?WrB'g
X-3O8!.t7O*rDu<K^Jg?AGW>,=/>nK!.k3n!.k3&!7q2P$C'H8k/.1N!.k3u!;kmY3:6bH$2Wca!n@:&
!.k3&!.k36!!">E[.OFj!!3^DW9M't!.k3&!9sOaB)B=CB^Pj#W;=7/5N;_DU].V#GMiIQ!.k3&!.k3N
!!#CccfY90$r`GfXmiHV!.k3'!!#spXT2Ah!!&;\XT1*9!!(4AcN'Z[!.k3&!6P:n!.k4*!!3R.PNf-c
!.k3&!7CiI<;W]r<pfqfPPV<[1=ZAV!.k3&!.k3&!:g*j!FtBVWrR_OJcP'9!!2uZ!!2Kf!+Ylf]E!N`
JcLB&JcMeN!%%WOkl:c0QG3./n@t.eJcLE'!1<Yu!%.+6!5/0C!#FSp!-A.H!3!s=JcLB&aoI"nJcPTH
!(6b3kl:`&J`a)P!.k3&!7CiIK);YM*UWn-XST%!&`WikT)R%9c1h9j!.k3&!.k3&!;-<n*.Y'PX/c5P
!.k49!!%TIWrO4/!!'"pWrNaF!.k3&!.k3&!0$sZ0AlQenE,o7JcLE'!&FH6m/R.>qW=RRJcLB&aoI"n
JcPTH!%%WOlMptqK>$ch"2;@RY55oN!.k3&!7CiI[/@Z=^?tt$2Yt/g]A`ej./gLQ)>O8a!.k3&!.k36
!!#Ccch.;4!!3IDXRE7mWhc3^XfDGR!.k49!!&hlXmQ/h.f-7IXPs3[7fCX51#W+a!.k3&!.k34!!3ID
WqNLjWroB!TpbbXP5p17K)bnFr2TgtmJm5:qPsUpU]>uHJcNpnJcLB&h>dQhh=0P/iQS6KqW>ZqJcLB&
dJs9Dr8n":m/["F!7fR!JcLB&JcLB&OoPJ.rj;=up](>5[e7B=Y`N-I*tA/K!3Z15WrR_OJcP*:!!W87
!35Ge!.=XX!0?(=!29D!!+4[bJcLB&JcLB&WW3#drm0p2!EuGpXT4srHqPk($2ji(SbfIP!.k3(!!*2(
r2fsdmJm6"qQ0aCi;`l#rm(S"aT-nmJcNpnJcLB&huEd_V"LblS9dmX(^^-@!1E\a_Z58gJcO7"!!E,!
!0usP!,)//!-lunJcLB&JcLB&JcPQG!<]k*joXV"-2@N@IJW*,!.k3&!9sR]joB2b!!!E'jo?R;!.k3&
!.k3&!3-#!-2t:=!!$9u^BCZ_4U1u^!!'1u^QSYL!/(=Q5JR-2!.jP<!2]P,!&`^8!+l/:!1V(1JcLB&
aoI"nJcPTH!(6b3m/R,YpT4Oe@kRuZ!!&SdXht-j!.k4"!!"bNXT3/)!!&2YXT0g/!!&)ZcN(u\!.k3&
!.k3&!.k4H!!#^eWrn`!0Eh+M!1E\aWrR_OJcP*:!&FGP!,M!&!0?uW!%GP\JcLB&JcLB&OT>.<!Hn_I
!;HNoIJW)i!.k3'!!)0Zjo>t\!!$-tk+_p.!.k3n!.k3&!;QTp-2t:>!!+^dqS**?M)=f(!3Z15_Z58g
JcO7"!+Pi?!(-)R!5&-C!4C_b!$D0H!"8W'JcLB&JcLB&OoPJLrm16;q>^L?q5j^rF=?_\!1itgWrR_O
JcP*:!)WQp!&X*D!3?"!!2eZS!':))!$'tuJcLB&JcLB&P5kV/WqratUN7j]!;HNoRJNtJ!.k3(!!,rt
r2TfUmJm6cql9^kUB#lGJcNpnJcLB&i;`l9qW7gd)Y*k.IJW*D!.k3&!7LoJ!W2$H!!(LFjoDU6!.k3&
!.k3&!0R<^-2t:E!;c`s#I"!=!0lsQ!3Z15WrR_OJcP*:!.k$^!!_ll!''hi!/'//!1a%q!(GlIJcLB&
JcLB&WW3#drm1$5!<f"jXT3nI!;HNoSbfIP!.k3(!!-l;r2fr%mf3>=qQ0a7hZ*Yrrm(RZaoI"nJcNpn
JcLB&irB)_Rej&bIdd=;RJNu%!.k3&!7LoJC\t.4"Rc<j/GcCID:8K:!.k3&!.k3&!;ZZqJbnL//FWW>
IJW*,!.k3&!:'Ub&,YMV!;bgX'"\-q!.k3&!.k3N!!">E[-mtpDYh*JFSGk2!!'1u^QSYL!/(=QRD8^8
!42(n!-e:S!&`X6!*K6-!/\huJcLB&aoI"nJcPTH!(6b3mf3>jqQ0a*mf3?YqQ7X8JcLB&df9B$r2fso
mJm5sqQ0`HhZ*Y,rm(SRq>c*IJcLB&JcLB&qZ$V#qPsU(mf3?UqQ$XsJcLB&lMpp:r2TgkmJm5sqPsTF
])[E_JcLB&JcM#8!!E)[!!`2up](;BqW<tAJcLH(!B'$<joD+C!!!9#k+Vj-!.k3n!.k3&!;QTp-2t:?
!!&_i^As\i!!'1u^V^&'!.k4"!!'(t^At%s!!'5"^AtOq!!!i7ZiR3/qZ)3JJcLB&JcLr6!(6b3o`4jh
!06rY!/'\>!1itgWrR_OJcP*:!1Ebe!0HUK!1s(i!286L!%n2r!R:f-!.k3&!.k3&!0dH`Mu0OTK(f9?
!!&G`X-3O8!/(=QQE0tb!0-CH!1Nec!1onbJcLB&aoI"nJcOg2!)*4O!&X*D!.F_+_Z58gJcO7"!,_Yr
!)`.a!.k%0!0Yb1JcLB&JcLB&OoPJ.rj;=uqZ$W.qnE,4mJm6nqS0'2JcLB&lMpp[r4`5nmf3>TqS*#+
h#IG?rj2YWirFZ2JcLB&JcMeN!(6b3mf3?gqlKifpAjsg!2TInP5p17KE)%7Xo5@%Hg^q72>XET5MZ;>
_Z%j]:!3Ng!.k3n!.k3&!94%ZW;EUq8+$?WU&(h-!.k3&!7LoJNr5pXHLCh62u9QT5gfXa!.k3&!.k3&
!;c`reGJCq!!&ejk,SK6!.k4:!!#sqjo?[p!;big!.k3&!.k3&!3-#!-2t:@!!"VI^\.[&!!'V,^QSYL
!/(=QOh^k0!-[f2!1Nf"!05h7!([$q!.rAoJcLB&aoI"nJcPTH!(6b3n,NG4qQ9,b!3>su_Z58gJcO7"
!.FdI!+PBs!/:<P!-m9!!,he^!3Z2!JcLB&JcLB&JcP]K!$h?@m/R-aqQ$XsJcLB&lMpp3r2Tg,mf3??
ql9^@\H%3]JcLB&JcM#8qW@JOp](<?qW<tAJcLH(!@Ht-jo>YT!!"tTjo?Nt!.k3&!6P:n!.k4H!!">E
[."%q)>_)J614dR)Yq.c!.k3&!7LoJHMkMX=7?1j)nu6b!O2mb!!NM'['["EquD<KJcLB&JcLr6!(6b3
o`4mi!#,42!&O'D!#,11WrR_OJcP*:!+l)1!(QGX!#5=4!MKYO!!*GOrm(Qaj8ac3JcLB&JcM&9!#,40
!&aKNq#CC/q5]\ZJcLH(!G/>1WrPZZ!!*h7r2Tji"JGgI!.k3n!.k3&!94(Uk3W-KjSJ#V!.k3&!7LoJ
$N0&S!!)!UjoCRk!.k3&!.k3&!0R<^-2t:E!;c`r]_fGDM!k<DR/+Lt!.k3&!:'Ub?MqP<9(2f\Nr-Qk
7G7_A@K*V6:?2D,!.k3&!.k3N!!#CccgLi6XS]+"F8#\1!!%WHXcia:!/(=Q9We8q!'BZM!-nCC!&rU3
!/UX#!-QKcJcLB&aoI"nJcOg2!3,jr!-7N.!.jsH_Z58gJcO7"!)EHm!'K`N!-e=@!'/C+JcLB&JcLB&
JcPZJ!8783!#Y/)!&FB4WrR_OJcP'9r9!GJ!$M1$[fD![JcLB&JcMeN!%%WOmf3?hqnE0>-MRT;!!$*q
^QSYL!/(=Q5JR03!.+/8!'g@q!/B/,";%fE[$o2=JcLB&aoI"nJcPTH!(6b3mf3?VqlKmr*Us+07ej+'
!.k3&!7LoJ1&S-RAaoa#1&J'QES1<l,lZ*i`V]^f!.k3&!.k3&!;c`rR/<obU)rh)!(ZgbWrR_OJcP*:
!&FJQ!+k[#!&FGP!-#CIJcLB&JcLB&PQ1]*qrRm^pAk!hpu[b?JcLE'!9X7B!"/2qqrRkoT)aHCJcNpn
JcLB&q#CC@rj;+o!0m>p!OX9G!!$*p^V^&'!.k4!!!'S.^Asbn!!'(t^AtFg!!%BFZiDBM!.k3&!.k3&
!0R<^6iPF)!;c`rJ,68JVB,7.!(Q^bWrR_OJcP'9!36""!/L(E!1Ebe!1h^A!2fbA!'oWGJcLB&JcLB&
PQ1]4qPsXk*r,g5!!#O`X-3O8!.t7OVZ!OqK^f$BQMdc`R[sM2!.k3n!.k3&!94%Z/,JB.YOMVek/.1N
!.k4!!!(%;jo@I4!!$m6joBnV!.k3&!.k3&!0R<^-2t:E!;c`r7ese#[<EA[!!,NPp:mX.JcLB&l2Ug:
rP&?9nc/Z7r4`9?-J&4t+o\hKFQELS!.k3&!.k3N!!#CccgLi63;KZXVIL58!;ulu2h(J&P5p17K)bmg
rN-'knc/Z"r2g!s*S18k4T<Y,T?R@f!.k3n!.k3&!94%Z3r,fXU14f0!!,'-p8c(2JcLB&dJs8arMope
nc/Z"r2Tjm*mOb;!.k3&!.k3&!;Z]kjoMXjo`+t@p?&CUJcLB&l2UesrT4*2nc/Xqr8n!_[/bdYJcLB&
JcMeN!%%WOmJm6XpqI$HQ#9#."<dk6AqRSb^QSYL!.t7O2>t8i](5n%5lA@t[3jE("HTpsWs-cKJcLB&
aoI"nJcPTH!(6b3mJm6CpoOn)J6=fE!uWpoD5m00_Z58gJcO4!!%IlK!3>\k!&FJS!N$mf!!Ks\cd!%"
!.k3&!.k3&!.k4I!!%cKWsYkV><!8u)E(Q3V=^gh!.k3&!9sOa.K-:IVt0lg2#OBTU)p]BJcLB&JcLB&
P5kSGpuVY5/d)%P!rr?7^@^QO!.k3&!<)$[cgh)6joDTT!.k3&!6P:n!.k4H!!">E[-dnp/AC)X_Z58g
JcO0u!3uL;!(Z\^!"Ae?!OX9(!!"hSZiEGl!.k3&!.k3&!0R<^6iPF)!;ZZq+lKK'!.k3&!9jI`U&D(n
3V<@P#lLe*VB+.d!*&sD!,(EoJcLB&JcLB&P5kS,nZ2/[P5p17JcGeBrMoo[o`+str2Tjm*h34^!.k3n
!.k3&!9!nXio0%;!.k3&!7:cHP5XP7!!)*YjoDU.!.k3&!.k3&!0R<^-2t:E!;QTpM<VbTT)-4&!.k3&
!9jI`;>n60U%JBc[f*rA[3j<%".Za*PNDjs!.k3&!.k3N!!#Cccg:]4FRlR/XT47TXcia:!.k1N62dnc
NqEAPVu<^uVB+(b"3/[5^s2q3!.k3n!.k3&!9!nXF6T_*M#+0i!.k3&!7:cH6N*qbMtI&MU]%4oU)qJX
JcLB&JcLB&JcPTH!#k+a!(-PEWrR_OJcP!7rT4)Qo`+uurT4*`Z2fIVJcLB&JcMeN!%%WOm/R.hWq4"%
^B15V5Pi-Y!.k3&!!*(]rP&=jp](=(\c'8DZR4'"!($Uk!'SX.JcLB&aoI"nJcPTH!(6b3m/R.gR-^pV
Or?(OXht-j!.k3t!!%EFXT0jG!!*D+rN-*q*ROieB)^*X@K6C[!.k3&!.k3&!;QTq!gW,Q!fn<VqQ$Xs
JcLB&kPtU/rMooJp](=$VZ!OrTcUK>JcLB&JcLB&OT5AsoB,o3!a#F&qW<tAJcLB&!<=GEk4ScTaSk6$
TpYn4!.k3n!.k3&!;QTp-2t:<!!*_=n%T"0:B1AZqS0oJJcLB&cN!sOrkAK92>R:QC&PdJ^4Q[:!!S:f
[%RR%JcLB&JcLB&OoPJLrm16;p](=)U[P;fT0E;U1&A#Q!.k3&!9X=^V#IIsRjn16!*/s!!Gqtc!!KgX
ccQLV!.k3&!.k3&!0I6^%\WHpr2Tsj5QCd>qQ#e[JcLB&!WW4ori6'e.Ja#E=8f0$Wbhm,!.k3&!6P:n
!.k4.!!&VZjoC59!;biq!.k3&!7(WFU]0BUG52+=!p0FD!TFa5!.k3&!.k3&!0R<^-2t:E!;?Hp-',Y0
^B1Qj5Q(Q^5Pi-q!.k3&!9O7]\Ga/HQ5T`'&PIcT^B(#\bl@k_Y-bQ@kQ$27JcLB&JcMeN!(6b3lMpu+
HE6bA"KeesD)(th!&=>PP5p17JcPcM!3,q!#([Ef!"D&-rN-*\,L$2k/^D\gK?sUM!.k3n!.k3&!8dbX
*I4RTWre]+1Aq1Q1A\&h!.k3&!6tQEV>[G!J.qt`%6\S,Wr\,(`rL\kJcLB&JcLB&p&G+;dIcQ%I1lDW
qW=gYJcLB&jo>CsrT4)5qu?^0rT4)QXoO%RJcLB&JcMeN!%%WOkl;)$Djmi?^UpnVUmQo<:C)URJcLB&
r;Zh,rP&EJ['onI!O5kO!!H3,[&t(i!.k3&!6P:n!.k4H!!#CccfkE=$<i.SX0&G!SWSME56\CoJcLB&
bl@`?r2g!qW;NauTLm9+"F8>>c7"8EJcLB&JcLB&o`,F.>_AHBX/Mb\Ne)18"e5RE!.k44!!#moWr\oi
r2Tji9!&)F!.k3&!.k31!"&feIF%!'XF4)((P2X=!.k4L!!!&ujoXP@]):[jOH]`s!.k3n!.k3&!;QTp
-2t93!.k3&!6bEE,c/*M^B;3JF!\j,"-p7#I=_HN!.k3&!0R<^6iPF)!.k3&!.k43!!4+&X8B"#P[>EN
!!C*ac`-./JcLB&JcLB&JcLB&JcLB&qu?d<O/MoV"0.Ml*KpJT!.k3n!.k3&!.k3&!.k3o!!-3Ir8n(>
?Nn:HJcLB&JcLB&OoPJ.rj;=uJcLB&JcOa0";X=CE'M5?!$qQN!%I15JcLB&JcLB&WW3#drm0C#JcLB&
JcPTH";*Iq>;="q!'pP0!(YH;JcLB&aoI"nJcLB&JcLB&aT)GU2I0QC^AricJcLB&JcLB&JcLB&JcO[.
!<`M%!.k3&!.k3&!3-#!-2t:-!.k3&!.k3Y!!?f>[$8u=JcLB&aoI"nJcPTH!(6b3NW=Y2JcLK)!ft[R
!5X9fJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNpnJcLB&q#CC@rj7[cJcLB&K`D/U
T<nX+6\GGk!.k3&!0R<^6iPF)!.k3&!.k3A!!EPJcd-:j!.k3&!.k3&!.k3&!.k3&!.k3&!.k3n!.k3&
!.k3&!.k3&!.k3&!.k3&!0R<^-2t:E!.k3&!.k3@!!G'a[&Of+!.k3&!.k3&!3-#!6iPEf!.k3&!.k3X
!!H3Gcd!rg!.k3&!6P:n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!3-#!-2t:-!.k3&
!.k3W!!?9/[#`]:JcLB&aoI"nJcPTH!(6b3NW=Y2JcLE'!.G!qcb+r3JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcNpnJcLB&q#CC@rj7[cJcLB&JcGn'['Wkg!.k3&!.k36!!#Ccch.9i!.k3&
!1EliXO#4Am/V_<JcLB&JcLB&JcLB&JcLB&JcLB&aoI"nJcLB&JcLB&JcLB&JcLB&JcLr6!%%WOo`0RD
JcLB&RK*HkRC':HmJqh=JcLB&JcMeN!(6b3h#N$,JcLB&Z2b".`6Zasec::%JcNpnJcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMeN!%%WOh#N$,JcLB&YlFn?WjJ8uf)UC&JcNpnJcLB&q#CC^
rm-T)JcLB&JcGrS.*g/Y#D`A3!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!6P:n!.k4H
!!">E[#P-<!.k3&!!N?&0=8*,L]E#,JcLB&OoPJLrm16;JcLB&JcM/<"&I7hSaQQ1!.k3&!.k3&!.k3&
!.k3&!.k3&!6P:n!.k3&!.k3&!.k3&!.k3&!.k36!!">E[.OEN!.k3&!1*Zf:pdSin,S%?JcLB&JcMeN
!(6b3h#N$,JcLB&Y5eZKcd,kK!.k3&!6P:n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!4;h"-2t:-!.k3&!.k3R!!@MRV[D)WJcLB&aoI"nK`M*>pd>&,NW=Y2JcLB&r;Zqqccm>b!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3n!.k3)!!8Rq[.Ued!.k3&!.k4K!<4@%!.k3&!.k3A
!!'t/ch.9i!.k3&!0mQa6gt)-!.k3&!.k3&!.k3&!.k3&!.k3&!6P:n!.k3&!.k3&!.k3&!.k3&!.k3A
!!&GY[.OEN!.k3&!.k3&!.k3&!.k3Y!!'t/ceSSQ!.k3&!.k3&!.k3n!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3Y!!&GY[+t_6!.k3&!.k3&!.k3n!.k3)!!:*bch5VE!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!6P:n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!6P:n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3n!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!6P:n!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!6P:n!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3n!.Y~>

%%EndBinary
grestore
np
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 1 GetGlyphDirectory
152 <001C60D8A8C9B5EE31021FF790BCB9507427290E1FEA533A286032C8334
2A4EF902971216EBF97814A2EED268D22E39DF9C3EA7857EAE41DF8F5A5F4335
9451E21A5E902AE75FD1F257DFAFBE9EEA16CE384AD967D3EE32CEFECF2A3EFF
A37B065E720472B37DF1E5B1F36DE42FEB6BDACFA415B872EC9A336E0E7A836B
F31560735C6FD2663821067EFBC32462B4747C4F7C75F476C1D56CAC3DC00118
CB1FF755422ED7BE1A6573D3A4AF1DA5C4C432851D073E9B920E77C696093A81
06CF77311CBBEC4A449710C66C391B6C60A9DF7A14334BD465176231149C0EEE
F8054EB> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
33.1656 61.02 mo
(\000\011\0127\000\230\000\015)sh
64.3807 61.02 mo
(\005\020\000\012)
[6.32439 0 ]xsh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 1 GetGlyphDirectory
60 <001C60D8A8C9B854D0F8E3D535E5627D19EFC6E9B2E2CC2BC72A091A537C
5238BA317398CE8A0C60DBE285B45D862528E47A0404B44F01BA3574F6B89F6D
BCEC10F21F8E3C74D7348241AAF8EE7C156C28798952E68A76196844DB3F938E> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
155.082 61.02 mo
(\000<\005\021\000\015\000\230\000\012)
[3.38338 5.29625 5.32016 11.9552 0 ]xsh
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
274.016 61.02 mo
(\000<\005\020\000\015\005\021\000\012)
[3.39523 6.3244 5.30811 5.29623 0 ]xsh
%ADOBeginSubsetFont: IAAAAA+LatinModernMath-Regular-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/IAAAAA+LatinModernMath-Regular-Identity-H 2 GetGlyphDirectory
62 <001C60D8A8C9B854D0F8E3D535E5627D19B9C270C45E84639E87890E477F
FFFD4A38E908FFD6506A6795C0D26C333BC72CEEDC93667221F88C5610617089
0CF8E544C3D804E147AB9A65B63B4F89574EAAB7D41402862E389D> |
2764 <001C60D8A8C9B64EDF742C3A52AEFDEB7B2CC0FCC9999916DF2FDB94FC
70AAAE96C679A014FF61A9A83C3AF1270CA89C0DAFB2E048668BF231A98E4E91
7F03229713D623F907C2FBEE962074AAAACA44597B867B05AC> |
!
end
end end
%ADOEndSubsetFont
FXRWCK+LatinModernMath-Regular-Identity-H [11.9552 0 0 -11.9552 0 0 ]msf
359.615 61.02 mo
(\000\011\0127\000\230\000\015)sh
390.83 61.02 mo
(\005\020\000>\012\314\000\011\005\021\000\015\000\230\000\012)
[6.3244 5.9776 10.6403 4.65067 5.29626 5.30811 11.9552 0 ]xsh
.9564 lw
2.1786 68.417 mo
454.714 68.417 li
@
gsave
267.46 170.095 mo
157.487 170.095 li
157.487 173.729 li
267.46 173.729 li
267.46 170.095 li
clp
201.481 170.839 mo
200.741 170.839 200.142 171.345 200.126 171.973 cv
199.607 171.973 li
198.768 171.973 197.141 170.839 197.141 170.839 cv
195.481 171.716 188.365 172.016 188.217 172.022 cv
157.709 172.022 li
157.586 172.022 157.487 172.122 157.487 172.245 cv
157.487 172.368 157.586 172.465 157.709 172.465 cv
188.164 172.465 li
194.181 172.565 197.437 173.255 197.437 173.255 cv
198.082 172.437 199.478 172.258 200.151 172.227 cv
200.275 172.758 200.823 173.158 201.481 173.158 cv
202.23 173.158 202.837 172.637 202.837 171.999 cv
202.837 171.357 202.23 170.839 201.481 170.839 cv
cp
197.091 172.96 mo
197.091 172.96 194.033 172.27 191.469 172.219 cv
191.469 172.219 195.414 172.022 196.943 171.283 cv
196.943 171.283 198.028 171.973 198.472 172.122 cv
198.472 172.122 197.387 172.614 197.091 172.96 cv
cp
201.405 172.812 mo
200.998 172.812 200.667 172.47 200.667 172.047 cv
200.667 171.624 200.998 171.283 201.405 171.283 cv
201.813 171.283 202.144 171.624 202.144 172.047 cv
202.144 172.47 201.813 172.812 201.405 172.812 cv
cp
.856901 .596307 0 0 cmyk
f
.386489 lw
201.481 170.839 mo
200.741 170.839 200.142 171.345 200.126 171.973 cv
199.607 171.973 li
198.768 171.973 197.141 170.839 197.141 170.839 cv
195.481 171.716 188.365 172.016 188.217 172.022 cv
157.709 172.022 li
157.586 172.022 157.487 172.122 157.487 172.245 cv
157.487 172.368 157.586 172.465 157.709 172.465 cv
188.164 172.465 li
194.181 172.565 197.437 173.255 197.437 173.255 cv
198.082 172.437 199.478 172.258 200.151 172.227 cv
200.275 172.758 200.823 173.158 201.481 173.158 cv
202.23 173.158 202.837 172.637 202.837 171.999 cv
202.837 171.357 202.23 170.839 201.481 170.839 cv
cp
197.091 172.96 mo
197.091 172.96 194.033 172.27 191.469 172.219 cv
191.469 172.219 195.414 172.022 196.943 171.283 cv
196.943 171.283 198.028 171.973 198.472 172.122 cv
198.472 172.122 197.387 172.614 197.091 172.96 cv
cp
201.405 172.812 mo
200.998 172.812 200.667 172.47 200.667 172.047 cv
200.667 171.624 200.998 171.283 201.405 171.283 cv
201.813 171.283 202.144 171.624 202.144 172.047 cv
202.144 172.47 201.813 172.812 201.405 172.812 cv
cp
@
267.128 172.022 mo
236.618 172.022 li
236.47 172.016 229.354 171.716 227.694 170.839 cv
227.694 170.839 226.067 171.973 225.228 171.973 cv
224.71 171.973 li
224.693 171.345 224.093 170.839 223.354 170.839 cv
222.605 170.839 221.998 171.357 221.998 171.999 cv
221.998 172.637 222.605 173.158 223.354 173.158 cv
224.012 173.158 224.56 172.758 224.684 172.227 cv
225.357 172.258 226.753 172.437 227.398 173.255 cv
227.398 173.255 230.653 172.565 236.671 172.468 cv
267.128 172.465 li
267.25 172.465 267.349 172.368 267.349 172.245 cv
267.349 172.122 267.25 172.022 267.128 172.022 cv
cp
223.43 172.812 mo
223.022 172.812 222.691 172.47 222.691 172.047 cv
222.691 171.624 223.022 171.283 223.43 171.283 cv
223.837 171.283 224.168 171.624 224.168 172.047 cv
224.168 172.47 223.837 172.812 223.43 172.812 cv
cp
227.744 172.96 mo
227.448 172.614 226.363 172.122 226.363 172.122 cv
226.806 171.973 227.892 171.283 227.892 171.283 cv
229.421 172.022 233.366 172.219 233.366 172.219 cv
230.802 172.27 227.744 172.96 227.744 172.96 cv
cp
f
267.128 172.022 mo
236.618 172.022 li
236.47 172.016 229.354 171.716 227.694 170.839 cv
227.694 170.839 226.067 171.973 225.228 171.973 cv
224.71 171.973 li
224.693 171.345 224.093 170.839 223.354 170.839 cv
222.605 170.839 221.998 171.357 221.998 171.999 cv
221.998 172.637 222.605 173.158 223.354 173.158 cv
224.012 173.158 224.56 172.758 224.684 172.227 cv
225.357 172.258 226.753 172.437 227.398 173.255 cv
227.398 173.255 230.653 172.565 236.671 172.468 cv
267.128 172.465 li
267.25 172.465 267.349 172.368 267.349 172.245 cv
267.349 172.122 267.25 172.022 267.128 172.022 cv
cp
223.43 172.812 mo
223.022 172.812 222.691 172.47 222.691 172.047 cv
222.691 171.624 223.022 171.283 223.43 171.283 cv
223.837 171.283 224.168 171.624 224.168 172.047 cv
224.168 172.47 223.837 172.812 223.43 172.812 cv
cp
227.744 172.96 mo
227.448 172.614 226.363 172.122 226.363 172.122 cv
226.806 171.973 227.892 171.283 227.892 171.283 cv
229.421 172.022 233.366 172.219 233.366 172.219 cv
230.802 172.27 227.744 172.96 227.744 172.96 cv
cp
@
207.161 171.781 mo
208.15 172.511 210.117 172.022 211.69 171.332 cv
213.268 170.642 214.748 170.149 214.748 170.149 cv
213.86 169.852 211.816 171.009 209.717 171.629 cv
207.887 172.17 207.239 171.829 207.161 171.781 cv
cp
f
207.161 171.781 mo
208.15 172.511 210.117 172.022 211.69 171.332 cv
213.268 170.642 214.748 170.149 214.748 170.149 cv
213.86 169.852 211.816 171.009 209.717 171.629 cv
207.887 172.17 207.239 171.829 207.161 171.781 cv
cp
@
217.855 172.134 mo
217.596 171.875 216.755 171.601 215.044 172.17 cv
213.712 172.614 211.789 173.391 211.789 173.391 cv
213.231 173.54 213.601 172.912 215.488 172.319 cv
217.191 171.783 217.855 172.134 217.855 172.134 cv
cp
f
217.855 172.134 mo
217.596 171.875 216.755 171.601 215.044 172.17 cv
213.712 172.614 211.789 173.391 211.789 173.391 cv
213.231 173.54 213.601 172.912 215.488 172.319 cv
217.191 171.783 217.855 172.134 217.855 172.134 cv
cp
@
218.796 170.137 mo
216.846 169.995 215.194 170.698 213.597 171.378 cv
212.906 171.67 li
211.243 172.378 208.965 173.348 206.876 173.281 cv
204.967 173.219 203.873 172.719 203.873 171.911 cv
203.873 171.203 204.551 170.793 205.887 170.691 cv
207.23 170.585 208.395 171.383 208.407 171.391 cv
208.507 171.46 208.646 171.437 208.715 171.334 cv
208.785 171.234 208.761 171.096 208.66 171.026 cv
208.608 170.991 207.357 170.131 205.853 170.247 cv
203.849 170.401 203.429 171.237 203.429 171.911 cv
203.429 172.547 203.875 173.627 206.862 173.725 cv
209.049 173.794 211.272 172.945 212.972 172.219 cv
213.663 171.927 li
215.212 171.268 216.921 170.447 218.763 170.58 cv
220.942 170.737 221.221 171.434 221.221 172.022 cv
221.221 172.193 221.156 172.34 221.022 172.468 cv
220.664 172.817 219.85 173.014 218.898 172.983 cv
217.741 172.95 216.877 172.617 216.866 172.612 cv
216.756 172.558 216.623 172.604 216.57 172.714 cv
216.517 172.824 216.563 172.958 216.673 173.012 cv
216.722 173.035 217.63 173.389 218.884 173.427 cv
219.969 173.46 220.884 173.222 221.331 172.786 cv
221.553 172.573 221.665 172.314 221.665 172.022 cv
221.665 170.878 220.754 170.278 218.796 170.137 cv
cp
f
218.796 170.137 mo
216.846 169.995 215.194 170.698 213.597 171.378 cv
212.906 171.67 li
211.243 172.378 208.965 173.348 206.876 173.281 cv
204.967 173.219 203.873 172.719 203.873 171.911 cv
203.873 171.203 204.551 170.793 205.887 170.691 cv
207.23 170.585 208.395 171.383 208.407 171.391 cv
208.507 171.46 208.646 171.437 208.715 171.334 cv
208.785 171.234 208.761 171.096 208.66 171.026 cv
208.608 170.991 207.357 170.131 205.853 170.247 cv
203.849 170.401 203.429 171.237 203.429 171.911 cv
203.429 172.547 203.875 173.627 206.862 173.725 cv
209.049 173.794 211.272 172.945 212.972 172.219 cv
213.663 171.927 li
215.212 171.268 216.921 170.447 218.763 170.58 cv
220.942 170.737 221.221 171.434 221.221 172.022 cv
221.221 172.193 221.156 172.34 221.022 172.468 cv
220.664 172.817 219.85 173.014 218.898 172.983 cv
217.741 172.95 216.877 172.617 216.866 172.612 cv
216.756 172.558 216.623 172.604 216.57 172.714 cv
216.517 172.824 216.563 172.958 216.673 173.012 cv
216.722 173.035 217.63 173.389 218.884 173.427 cv
219.969 173.46 220.884 173.222 221.331 172.786 cv
221.553 172.573 221.665 172.314 221.665 172.022 cv
221.665 170.878 220.754 170.278 218.796 170.137 cv
cp
@
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/FXRWCK+LatinModernMath-Regular-Identity-H-Identity-H uf
/FXRWCK+LatinModernMath-Regular-Identity-H /CIDFont ur
/FXRWCL+manfnt*1 uf
/FXRWCL+manfnt uf
/JAAAAA+manfnt uf
/FXRWCJ+LMRoman12-Regular-Identity-H-Identity-H uf
/FXRWCJ+LMRoman12-Regular-Identity-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
